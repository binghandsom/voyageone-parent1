<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.voyageone.service.daoext.cms.CmsBtJmPromotionProductDaoExt">
<resultMap id="ResultMap" type="CmsBtJmPromotionProductModel">

</resultMap>
<select id="selectByProductCodeChannelIdCmsBtJmPromotionId"  resultMap="ResultMap">
    select  *   from cms_bt_jm_promotion_product  where  cms_bt_jm_promotion_id=#{cmsBtJmPromotionId} and  channel_id=#{channelId} and product_code=#{productCode} limit 1
</select>
<select id="selectListByWhere" resultType="MapModel" >
    select  *   from cms_bt_jm_promotion_product
    <where>
        <if test="id != null">
            AND id = #{id}
        </if>
        <if test="channelId != null">
            AND channel_id = #{channelId}
        </if>
        <if test="cmsBtJmPromotionId != null">
            AND cms_bt_jm_promotion_id = #{cmsBtJmPromotionId}
        </if>
        <if test="productCode != null">
            AND product_code = #{productCode}
        </if>
        <if test="jmHashId != null">
            AND jm_hash_id = #{jmHashId}
        </if>
        <if test="limit != null">
            AND limit = #{limit}
        </if>
        <if test="marketPrice != null">
            AND market_price = #{marketPrice}
        </if>
        <if test="dealPrice != null">
            AND deal_price = #{dealPrice}
        </if>
        <if test="synchState != null">
            AND synch_state = #{synchState}
        </if>
        <if test="creater != null">
            AND creater = #{creater}
        </if>
        <if test="created != null">
            AND created = #{created}
        </if>
        <if test="modified != null">
            AND modified = #{modified}
        </if>
        <if test="modifier != null">
            AND modifier = #{modifier}
        </if>
        <if test="state != null">
            AND state = #{state}
        </if>
        <if test="appId != null">
            AND app_id = #{appId}
        </if>
        <if test="pcId != null">
            AND pc_id = #{pcId}
        </if>
        <if test="discount != null">
            AND discount = #{discount}
        </if>
        <if test="errorMsg != null">
            AND error_msg = #{errorMsg}
        </if>
        <if test="skuCount != null">
            AND sku_count = #{skuCount}
        </if>
    </where>
</select>

<delete id="deleteByPromotionId">
    DELETE FROM `cms_bt_jm_promotion_product` WHERE `cms_bt_jm_promotion_id`=#{promotionId}
</delete>
<delete id="deleteByProductIdListInfo">
    DELETE  FROM `cms_bt_jm_promotion_product`
    WHERE  `id` in  <foreach item="item" index="i" collection="productIdList"
                                             open="(" separator="," close=")">
    #{item}
</foreach>
</delete>

<update id="updateDealEndTimeAll">
    update cms_bt_jm_promotion_product set deal_end_time_status=1 where cms_bt_jm_promotion_id=#{promotionId}
</update>
    <!--jm2 begin-->
    <select id="selectPageByWhere" resultType="MapModel">
        SELECT a.deal_end_time_status,ifnull(b.image1,a.image1) as image1,ifnull(b.product_Long_Name,a.product_name_en)  AS productLongName,b.color_En AS colorEn,a.deal_Price,b.attribute
        ,a.max_retail_price,a.max_msrp_usd,a.max_msrp_rmb,a.max_sale_price,a.min_retail_price,a.min_msrp_usd,a.min_msrp_rmb,a.min_sale_price,a.market_price,a.jm_hash_id AS jmHashId,a.sku_count AS skuCount
        ,a.error_msg AS errorMsg,a.synch_status,a.update_status,a.price_status,a.id,a.promotion_tag,a.product_code,b.comment,
        a.max_deal_price,a.min_deal_price,a.max_market_price,a.min_market_price,a.discount,b.jumei_mall_id,a.quantity,a.remark
        FROM `cms_bt_jm_promotion_product` AS a
        left JOIN  `cms_bt_jm_product`       AS b ON a.`product_code`=b.`product_code` AND a.`channel_id`=b.`channel_id`
        <where>
            <if test="cmsBtJmPromotionId!=null">
                and a.cms_bt_jm_promotion_id=#{cmsBtJmPromotionId}
            </if>
            <if test="codeList!=null and codeList.length!=0">
                and (   a.product_code  in <foreach item="item" index="i" collection="codeList"
                                                    open="(" separator="," close=")">
                    #{item}
                     </foreach>
                or    a.id in (select cms_bt_jm_promotion_product_id from cms_bt_jm_promotion_sku  where sku_code  in <foreach item="item" index="i" collection="codeList"
                                                                                                                               open="(" separator="," close=")">
                        #{item}
                    </foreach> )
                )
            </if>
            <if test="stockQty!=null and compareType!=null">

                and a.quantity ${compareType} #{stockQty}
            </if>
            <if test="productNameCn!=null">
                and   (b.product_name_cn  like CONCAT(#{productNameCn},'%')
                       or  b.product_long_name like CONCAT(#{productNameCn},'%')
                       or  b.product_medium_name like CONCAT(#{productNameCn},'%')
                       or  b.product_short_name like CONCAT(#{productNameCn},'%')
                      )
            </if>
            <if test="listBrandName!=null and listBrandName.size()!=0">
                and  b.brand_name in <foreach item="item" index="i" collection="listBrandName"
                                              open="(" separator="," close=")">
                #{item}
            </foreach>
            </if>
            <if test="voCategoryName!=null">
                and b.vo_category_name =#{voCategoryName}
            </if>
            <if test="pCatPath!=null">
                and b.category_name like  CONCAT(#{pCatPath},'%')
            </if>
            <if test="tagIdList!=null and tagIdList.size()!=0">
            and  a.id in (SELECT `cms_bt_jm_promotion_product_id`  FROM `cms_bt_jm_promotion_tag_product`
                WHERE `cms_bt_tag_id` in   <foreach item="item" index="i" collection="tagIdList"
                                                    open="(" separator="," close=")">
                #{item}
            </foreach>)
            </if>
            <if test="updateStatus!=null">
                and a.update_status=#{updateStatus}
            </if>
            <if test="hasStatus!=null">
                and ( 1!=1
                <if test="synchStatusList!=null and synchStatusList.size()!=0">
                      or  a.synch_status in<foreach item="item" index="i" collection="synchStatusList"
                                                open="(" separator="," close=")">
                      #{item}
                     </foreach>
                </if>
                <if test="allErrorStatus!=null">
                    or a.synch_status=3 or a.`price_status`=3 or a.`deal_end_time_status`=3 or a.stock_status=3
                </if>
                <if test="allStatus1!=null">
                    or a.synch_status=1 or a.`price_status`=1 or a.`deal_end_time_status`=1 or a.stock_status=1
                </if>
                <if test="isInJm!=null">
                    or b.id is null
                </if>
                )
            </if>

            <if test="beginDiscount!=null">
                and a.discount>=(#{beginDiscount}/10)
            </if>
            <if test="endDiscount!=null">
                and  a.discount&lt;=(#{endDiscount}/10)
            </if>
            <if test="priceType=='msrpRmb'">
                <if test="beginPrice!=null">
                    and   a.max_msrp_rmb>=#{beginPrice}
                </if>
                <if test="endPrice!=null">
                    and   a.min_msrp_rmb&lt;=#{endPrice}
                </if>
            </if>
            <if test="priceType=='retailPrice'">
                <if test="beginPrice!=null">
                    and    a.max_retail_price>=#{beginPrice}
                </if>
                <if test="endPrice!=null">
                    and   a.min_retail_price&lt;=#{endPrice}
                </if>
            </if>
            <if test="priceType=='salePrice'">
                <if test="beginPrice!=null">
                    and a.max_sale_price>=#{beginPrice}
                </if>
                <if test="endPrice!=null">
                    and  a.min_sale_price&lt;=#{endPrice}
                </if>
            </if>
            <if test="priceType=='dealPrice'">
                <if test="beginPrice!=null">
                    and  a.deal_price>=#{beginPrice}
                </if>
                <if test="endPrice!=null">
                    and  a.deal_price&lt;=#{endPrice}
                </if>
            </if>

            <if test="colorEn!=null">
                and    b.color_en=#{colorEn}
            </if>
        </where>
        order by a.product_code
        <if test="start != null and length != null">
            LIMIT #{start}, #{length}
        </if>
    </select>
    <select id="selectCountByWhere" resultType="int">
        SELECT count(*)
        FROM `cms_bt_jm_promotion_product` AS a
        left JOIN  `cms_bt_jm_product`  AS b ON a.`product_code`=b.`product_code` AND a.`channel_id`=b.`channel_id`
        <where>
            <if test="cmsBtJmPromotionId!=null">
                and a.cms_bt_jm_promotion_id=#{cmsBtJmPromotionId}
            </if>
            <if test="codeList!=null and codeList.length!=0">
                and (   a.product_code  in <foreach item="item" index="i" collection="codeList"
                                                    open="(" separator="," close=")">
                #{item}
            </foreach>
                or    a.id in (select cms_bt_jm_promotion_product_id from cms_bt_jm_promotion_sku  where sku_code  in <foreach item="item" index="i" collection="codeList"
                                                                                                                               open="(" separator="," close=")">
                #{item}
            </foreach> )
                )
            </if>
            <if test="stockQty!=null and compareType!=null">

                and a.quantity ${compareType} #{stockQty}
            </if>
            <if test="productNameCn!=null">
                and   (b.product_name_cn  like CONCAT(#{productNameCn},'%')
                or  b.product_long_name like CONCAT(#{productNameCn},'%')
                or  b.product_medium_name like CONCAT(#{productNameCn},'%')
                or  b.product_short_name like CONCAT(#{productNameCn},'%')
                )
            </if>
            <if test="listBrandName!=null and listBrandName.size()!=0">
                and  b.brand_name in <foreach item="item" index="i" collection="listBrandName"
                                              open="(" separator="," close=")">
                #{item}
            </foreach>
            </if>
            <if test="voCategoryName!=null">
                and b.vo_category_name =#{voCategoryName}
            </if>
            <if test="pCatPath!=null">
                and b.category_name like  CONCAT(#{pCatPath},'%')
            </if>
            <if test="tagIdList!=null and tagIdList.size()!=0">
                and  a.id in (SELECT `cms_bt_jm_promotion_product_id`  FROM `cms_bt_jm_promotion_tag_product`
                WHERE `cms_bt_tag_id` in   <foreach item="item" index="i" collection="tagIdList"
                                                    open="(" separator="," close=")">
                #{item}
            </foreach>)
            </if>
            <if test="updateStatus!=null">
                and a.update_status=#{updateStatus}
            </if>
            <if test="hasStatus!=null">
                and ( 1!=1
                <if test="synchStatusList!=null and synchStatusList.size()!=0">
                    or  a.synch_status in<foreach item="item" index="i" collection="synchStatusList"
                                                  open="(" separator="," close=")">
                    #{item}
                </foreach>
                </if>
                <if test="allErrorStatus!=null">
                    or a.synch_status=3 or a.`price_status`=3 or a.`deal_end_time_status`=3 or a.stock_status=3
                </if>
                <if test="allStatus1!=null">
                    or a.synch_status=1 or a.`price_status`=1 or a.`deal_end_time_status`=1 or a.stock_status=1
                </if>
                <if test="isInJm!=null">
                    or b.id is null
                </if>
                )
            </if>

            <if test="beginDiscount!=null">
                and a.discount>=(#{beginDiscount}/10)
            </if>
            <if test="endDiscount!=null">
                and  a.discount&lt;=(#{endDiscount}/10)
            </if>
            <if test="priceType=='msrpRmb'">
                <if test="beginPrice!=null">
                    and   a.max_msrp_rmb>=#{beginPrice}
                </if>
                <if test="endPrice!=null">
                    and   a.min_msrp_rmb&lt;=#{endPrice}
                </if>
            </if>
            <if test="priceType=='retailPrice'">
                <if test="beginPrice!=null">
                    and    a.max_retail_price>=#{beginPrice}
                </if>
                <if test="endPrice!=null">
                    and   a.min_retail_price&lt;=#{endPrice}
                </if>
            </if>
            <if test="priceType=='salePrice'">
                <if test="beginPrice!=null">
                    and a.max_sale_price>=#{beginPrice}
                </if>
                <if test="endPrice!=null">
                    and  a.min_sale_price&lt;=#{endPrice}
                </if>
            </if>
            <if test="priceType=='dealPrice'">
                <if test="beginPrice!=null">
                    and  a.deal_price>=#{beginPrice}
                </if>
                <if test="endPrice!=null">
                    and  a.deal_price&lt;=#{endPrice}
                </if>
            </if>

            <if test="colorEn!=null">
                and    b.color_en=#{colorEn}
            </if>
        </where>
    </select>

    <select id="selectFullMinusDateRepeat"  resultMap="ResultMap">
        SELECT a.* FROM `cms_bt_jm_promotion_product` AS a JOIN cms_bt_jm_promotion AS b ON a.cms_bt_jm_promotion_id=b.id
              WHERE b.promotion_type=1 AND a.synch_status=2 AND a.channel_id=#{channelId} and   a.product_code=#{productCode}
                      AND  #{activityStart} &lt;=a.`activity_end`  and   #{activityEnd}>=a.`activity_start`
                      AND a.cms_bt_jm_promotion_id!=#{cmsBtJmPromotionId}
                       LIMIT 1
    </select>
    <select id="selectDateRepeatByCode" resultMap="ResultMap">
        SELECT * FROM `cms_bt_jm_promotion_product` WHERE channel_id=#{channelId} and   product_code=#{productCode} and  #{activityStart} &lt;=`activity_end`
         and   #{activityEnd}>=`activity_start` and cms_bt_jm_promotion_id!=#{cmsBtJmPromotionId}   limit 1
    </select>

    <select id="existsCode" resultType="Boolean">
      SELECT 1 FROM `cms_bt_jm_promotion_product` WHERE channel_id=#{channelId} and   product_code=#{productCode} and  #{activityStart} &lt;=`activity_end`  and   #{activityEnd}>=`activity_start` and cms_bt_jm_promotion_id!=#{cmsBtJmPromotionId}   limit 1
    </select>

    <select id="selectByProductCode"  resultMap="ResultMap">
        select  *   from cms_bt_jm_promotion_product  where  cms_bt_jm_promotion_id=#{cmsBtJmPromotionId} and  channel_id=#{channelId} and product_code=#{productCode} limit 1
    </select>

    <select id="selectExportListByPromotionId" resultType="MapModel">
      SELECT b.`jumei_product_id`,b.`origin_jm_hash_id`,b.`jumei_mall_id`,b.`origin`,
       b.`product_name_cn`,b.`vo_category_name`,b.`vo_brand_name`,b.`brand_name`,b.`product_type`,
       b.`size_type`,b.`product_des_en`,b.`attribute`,b.`address_of_produce`,
       b.`available_period`,b.`product_des_cn`,b.`applicable_crowd`,b.`specialNote`,b.`color_en`,
       b.`creater`,b.`modified`,b.`modifier`,b.`created`,b.`product_long_name`,b.`product_medium_name`,
       b.`product_short_name`,b.`search_meta_text_custom`,b.`msrp_usd`,b.`msrp_rmb`,b.`retail_price`,
        b.`sale_price`,b.`hs_code`,b.`hs_name`,b.`hs_unit`,b.`material_en`,b.`material_cn`,b.`category_name`,
       b.`comment`,IFNULL(b.`image1`,a.`image1`),IFNULL(b.`foreign_language_name`,a.`product_name_en`) AS foreign_language_name,a.`product_code`,a.`channel_id`,a.`app_id`,a.`pc_id`,a.`limit`,a.promotion_tag,a.jm_hash_id,b.jumei_mall_id
        FROM `cms_bt_jm_promotion_product`  AS a
        Left JOIN `cms_bt_jm_product`  AS b  ON a.`channel_id`=b.`channel_id` AND  a.`product_code`=b.`product_code`
        WHERE a.`cms_bt_jm_promotion_id`= #{promotionId}
    </select>

    <update id="batchUpdateDealPrice">
        UPDATE cms_bt_jm_promotion_product  AS a
        SET a.deal_Price=${dealPrice},a.discount=${dealPrice}/a.market_price,a.update_status=(CASE WHEN a.`synch_status`=2 THEN 1 ELSE  0  END)
        WHERE    a.id IN
        <foreach item="item" index="i" collection="listPromotionProductId"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <update id="updateAvgPriceByPromotionProductId">
        UPDATE cms_bt_jm_promotion_product  AS a
        JOIN (SELECT cms_bt_jm_promotion_product_id,AVG(market_price) AS market_price,AVG(deal_price) AS deal_price,AVG(`discount`)  AS discount
        ,max(market_price) AS max_market_price,max(deal_price) AS max_deal_price,min(market_price) AS min_market_price,min(deal_price) AS min_deal_price FROM `cms_bt_jm_promotion_sku`
        WHERE  cms_bt_jm_promotion_product_id=#{cmsBtJmPromotionProductId}) AS b  ON a.id=b.cms_bt_jm_promotion_product_id
        SET a.deal_Price=b.deal_price,a.market_price=b.market_price,a.discount=b.discount
        ,a.max_deal_Price=b.max_deal_price,a.max_market_price=b.max_market_price
        ,a.min_deal_Price=b.min_deal_price,a.min_market_price=b.min_market_price
        WHERE    a.id =#{cmsBtJmPromotionProductId}
    </update>
    <update id="updateAvgPriceByListPromotionProductId">
        UPDATE cms_bt_jm_promotion_product  AS a
        JOIN (SELECT cms_bt_jm_promotion_product_id,AVG(market_price) AS market_price,AVG(deal_price) AS deal_price,AVG(`discount`)  AS discount
        ,max(market_price) AS max_market_price,max(deal_price) AS max_deal_price,min(market_price) AS min_market_price,min(deal_price) AS min_deal_price FROM `cms_bt_jm_promotion_sku`
        WHERE  cms_bt_jm_promotion_product_id in  <foreach item="item" index="i" collection="listPromotionProductId"
                                                           open="(" separator="," close=")">
                                                        #{item}
                                                    </foreach>
        group by cms_bt_jm_promotion_product_id
        ) AS b  ON a.id=b.cms_bt_jm_promotion_product_id
        SET a.deal_Price=b.deal_price,a.market_price=b.market_price,a.discount=b.discount
        ,a.max_deal_Price=b.max_deal_price,a.max_market_price=b.max_market_price
        ,a.min_deal_Price=b.min_deal_price,a.min_market_price=b.min_market_price
        ,a.price_status=(case WHEN a.synch_status=2 then 1 else a.price_status end )
        WHERE    a.id IN
        <foreach item="item" index="i" collection="listPromotionProductId"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <update id="batchSynchPrice">
        UPDATE cms_bt_jm_promotion_product set price_status=1,error_msg=''
        WHERE    id in
        <foreach item="item" index="i" collection="listPromotionProductId"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <update id="synchAllPrice">
        UPDATE cms_bt_jm_promotion_product set price_status=1,error_msg=''
        WHERE    cms_bt_jm_promotion_id=#{promotionId}
    </update>
    <update id="batchCopyDeal">
        UPDATE cms_bt_jm_promotion_product set synch_status=1,error_msg=''
        WHERE   synch_status in (0,3) and  id in
        <foreach item="item" index="i" collection="listPromotionProductId"
                 open="(" separator="," close=")">
            #{item}
        </foreach>;
    </update>
    <update id="batchCopyDealUpdatePrice">
        UPDATE cms_bt_jm_promotion_product set price_status=1,error_msg=''
        WHERE    id in  <foreach item="item" index="i" collection="listPromotionProductId"
                                 open="(" separator="," close=")">#{item}</foreach>
        and synch_status=2;
    </update>
    <update id="copyDealAll_UpdatePriceStatus">

        UPDATE cms_bt_jm_promotion_product set price_status=1
        ,error_msg=''
        WHERE    cms_bt_jm_promotion_id=#{promotionId} and synch_status in (2);
    </update>
    <update id="copyDealAll_UpdateSynchStatus">
        UPDATE cms_bt_jm_promotion_product set synch_status=1
        ,error_msg=''
        WHERE    cms_bt_jm_promotion_id=#{promotionId} and synch_status in (0,3);

    </update>
    <delete id="batchDeleteProduct">
        delete from  cms_bt_jm_promotion_product
        WHERE synch_status!=2 and   id in
        <foreach item="item" index="i" collection="listPromotionProductId"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <delete id="deleteAllProduct">
        delete from  cms_bt_jm_promotion_product
        where synch_status=0 and  cms_bt_jm_promotion_id=#{promotionId}
    </delete>

    <select id="selectJMCopyList" resultType="CmsBtJmPromotionProductModel">
         SELECT  *
        FROM `cms_bt_jm_promotion_product` a
        WHERE a.`cms_bt_jm_promotion_id`= #{promotionId} and  (a.synch_status=1 or a.price_status=1 or deal_end_time_status=1)
    </select>

    <select id="selectJmHashIds" resultType="java.lang.String">
        select t1.jm_hash_id
        from cms_bt_jm_promotion_product as t1
             join cms_bt_jm_promotion as t2
             on (t1.channel_id = t2.channel_id and t1.cms_bt_jm_promotion_id = t2.id and t2.status = '1')
        where t1.channel_id=#{channelId}
          and t1.product_code=#{productCode}
          and #{nowDate} &lt;= t1.activity_end
          and t1.jm_hash_id is not null
          and t1.jm_hash_id != ''
        order by t1.created DESC
    </select>

    <select id="selectOnSaleByCode" resultType="CmsBtJmPromotionProductModel">
  SELECT * FROM `cms_bt_jm_promotion_product`  WHERE channel_id=#{channelId} and   product_code=#{productCode}  AND   #{nowDate} &lt;=`activity_end`  AND  #{nowDate}>=`activity_start` AND `synch_status`=2 limit 1
    </select>
    <select id="selectOnSaleByNoPromotionId" resultType="CmsBtJmPromotionProductModel">
        SELECT a.* FROM `cms_bt_jm_promotion_product` AS a
       JOIN cms_bt_jm_promotion_product AS b ON a.`channel_id`=b.`channel_id` AND a.`product_code`=b.`product_code`  and b.cms_bt_jm_promotion_id=#{cmsBtJmPromotionId}
        WHERE a.channel_id=#{channelId} and a.cms_bt_jm_promotion_id!=#{cmsBtJmPromotionId}   AND  #{nowDate} &lt;=a.`activity_end`  AND   #{nowDate}>=a.`activity_start` AND a.`synch_status`=2 limit 1
    </select>
    <select id="selectChangeCountByPromotionId" resultType="int">
        SELECT COUNT(*) FROM `cms_bt_jm_promotion_product`
WHERE `update_status`=1 AND  `cms_bt_jm_promotion_id`=#{cmsBtJmPromotionId}
    </select>
    <select id="selectCountByPromotionId" resultType="int">
        SELECT COUNT(*) FROM `cms_bt_jm_promotion_product`
        WHERE   `cms_bt_jm_promotion_id`=#{cmsBtJmPromotionId}
    </select>
    <select id="selectNotSynchListByPromotionProductIds" resultMap="ResultMap">
        SELECT * from  cms_bt_jm_promotion_product
        WHERE synch_status!=2  and   id in
        <foreach item="item" index="i" collection="listPromotionProductId"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <update id="updateSynch2ErrorMsg">
        update cms_bt_jm_promotion_product
        set  error_msg=#{errorMsg}
        WHERE synch_status=2 and   id in
        <foreach item="item" index="i" collection="listPromotionProductId"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="selectProductInfoByTagId" resultType="com.voyageone.service.model.cms.CmsBtJmPromotionProductExtModel" parameterType="java.lang.Integer">
        SELECT
            t2.*, t3.jumei_mall_id
        FROM
            (
                SELECT
                    *
                FROM
                    cms_bt_jm_promotion_tag_product
                WHERE
                    cms_bt_tag_id = #{tagId, jdbcType=INTEGER}
            ) t1,
            cms_bt_jm_promotion_product t2,
            cms_bt_jm_product t3
        WHERE
            t1.cms_bt_jm_promotion_product_id = t2.id
        AND t2.channel_id = t3.channel_id
        AND t2.product_code = t3.product_code
        ORDER BY
            t1.id
    </select>
    <select id="selectProductInfoByTagId2" resultType="com.voyageone.service.model.cms.CmsBtJmPromotionProductExtModel" parameterType="java.lang.Integer">
        SELECT
        t2.*
        FROM
        (
        SELECT
        *
        FROM
        cms_bt_jm_promotion_tag_product
        WHERE
        cms_bt_tag_id = #{tagId, jdbcType=INTEGER}
        ) t1,
        cms_bt_jm_promotion_product t2
        WHERE
        t1.cms_bt_jm_promotion_product_id = t2.id
        ORDER BY
        t1.id
    </select>
    <update id="updateRemark">
    UPDATE `cms_bt_jm_promotion_product` SET `remark`=#{remark} where id=#{jmPromotionProductId}
    </update>

    <select id="selectCodesByJmPromotionId" resultType="java.lang.String">
            select product_code
            from cms_bt_jm_promotion_product
            where cms_bt_jm_promotion_id=#{jmPromotionId}
    </select>
    <!--jm2 end-->

    <!-- 取得当前有效的活动下的所有产品 -->
    <select id="selectValidProductInfo" parameterType="Map" resultMap="ResultMap">
        SELECT jmprod.id, jmprod.product_code
        FROM cms_bt_jm_promotion as jmprom join cms_bt_promotion as prom
            on prom.promotion_id = jmprom.id and prom.promotion_status = 1 and prom.active = 1 and prom.channel_id = #{channelId} and prom.cart_id = #{cartId}
                and jmprom.active = 1 and jmprom.activity_end >= now()
          join cms_bt_jm_promotion_product as jmprod on jmprod.cms_bt_jm_promotion_id = jmprom.id
    </select>

    <!-- 更新活动下的产品的库存数据 -->
    <update id="updateProductStockInfo">
        <foreach item="item" index="i" collection="jmPromotionProductList" open="" close="" separator=";">
            update cms_bt_jm_promotion_product
            set quantity = #{item.quantity,jdbcType=INTEGER}, sales = #{item.sales,jdbcType=INTEGER}
            WHERE id = #{item.id}
        </foreach>
    </update>

    <select id="selectProductByJmPromotionId" parameterType="java.lang.Integer" resultType="com.voyageone.service.bean.cms.jumei.ProductImportBean">
                SELECT *
        FROM cms_bt_jm_promotion_product where cms_bt_jm_promotion_id = #{promotionProductId}
    </select>
</mapper>