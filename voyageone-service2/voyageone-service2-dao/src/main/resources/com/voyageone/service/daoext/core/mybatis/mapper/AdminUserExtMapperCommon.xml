<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.voyageone.service.daoext.core.AdminUserDaoExt">

    <resultMap id="comUserMap" type="com.voyageone.service.bean.com.AdminUserBean" />

    <sql id="selectUserFilter">
    	<where>
            <if test="id != null" >
                and id = #{id}
            </if>

            <if test="userAccount != null and userAccount != ''" >
                and (
                user_account like concat('%', #{userAccount}, '%') or user_name like concat('%', #{userAccount}, '%')
                )
            </if>

            <if test="active != null" >
                and active = #{active}
            </if>

            <if test="orgId != null" >
                and org_id = #{orgId}
            </if>

            <if test="roleId != null and roleId != ''" >
                and concat(',', role_id, ',')  like concat('%,', #{roleId}, ',%')
            </if>

            <if test="channelId != null and channelId != ''" >
                and concat(',', channel_id, ',')  like concat('%,', #{channelId}, ',%') or concat(',', channel_id, ',')  like '%,ALL,%'
            </if>

            <if test="storeId != null and storeId != ''" >
                and concat(',', store_id, ',')  like concat('%,', #{storeId}, ',%') or concat(',', store_id, ',')  like '%,ALL,%'
            </if>

            <if test="application != null and application != ''" >
                and concat(',', application, ',')  like concat('%,', #{application}, ',%')
            </if>

            <if test="orgId != null" >
                and company_id = #{companyId}
            </if>

        </where>
    </sql>
	

	
	<select id="selectUserByPage" resultMap="comUserMap">
        SELECT * from
        (
        SELECT u.*, GROUP_CONCAT( DISTINCT t3.id) as role_id , GROUP_CONCAT( DISTINCT t3.role_name) as role_name, o.org_name, channel_id, store_id, application , co.company FROM com_user u
        LEFT JOIN com_user_role ur ON ur.user_id = u.id
        LEFT JOIN (SELECT id, org_name FROM com_organization WHERE active =1) o ON u.org_id = o.id
        LEFT JOIN (SELECT id, company FROM synship.ct_company WHERE active =1) co ON co.id = u.company_id
        LEFT JOIN
        (SELECT * FROM
        (SELECT cr.*, channel_id , store_id, GROUP_CONCAT( DISTINCT ap.application) as application  from com_role cr LEFT JOIN
        (SELECT t.id, t.role_name, t.role_type, t.active,t.modified,t.modifier, t.description,
        MAX(CASE t.cfg_name WHEN 'channel_id' THEN cfg_val1 ELSE NULL END ) channel_id,
        MAX(CASE t.cfg_name WHEN 'store_id' THEN cfg_val1 ELSE NULL END ) store_id
        FROM
        (select r.id, r.role_name,r.role_type, r.description, r.active, r.modified, r.modifier , rc.cfg_name, GROUP_CONCAT( DISTINCT rc.cfg_val1) as cfg_val1
        from com_role r, com_role_config rc , Synship.wms_mt_store st, Synship.tm_order_channel ch
        where
        ((rc.cfg_name = 'store_id' and (rc.cfg_val1 = st.store_id or rc.cfg_val1='ALL'))
        or (rc.cfg_name = 'channel_id' and (rc.cfg_val1 = ch.order_channel_id or rc.cfg_val1='ALL')))
        and r.id = rc.role_id
        and r.active = 1
        and st.active = 1
        and ch.active = 1
        GROUP BY r.id, rc.cfg_name) t
        GROUP BY t.id) t1
        ON cr.id = t1.id
        LEFT JOIN (SELECT id, application from view_role_application ) ap ON cr.id = ap.id
        GROUP BY cr.id) t2
        WHERE t2.active =1 ) t3
        ON t3.id = ur.role_id
        GROUP By u.id
        )t4
        <include refid="selectUserFilter"/>
	</select>
	
	<select id="selectUserCount" resultType="Integer">
        SELECT count(0) from
        (
        SELECT u.*, GROUP_CONCAT( DISTINCT t3.id) as role_id , GROUP_CONCAT( DISTINCT t3.role_name) as role_name, o.org_name, channel_id, store_id, application  , co.company FROM com_user u
        LEFT JOIN com_user_role ur ON ur.user_id = u.id
        LEFT JOIN (SELECT id, org_name FROM com_organization WHERE active =1) o ON u.org_id = o.id
        LEFT JOIN (SELECT id, company FROM synship.ct_company WHERE active =1) co ON co.id = u.company_id
        LEFT JOIN
        (SELECT * FROM
        (SELECT cr.*, channel_id , store_id, GROUP_CONCAT( DISTINCT ap.application) as application  from com_role cr LEFT JOIN
        (SELECT t.id, t.role_name, t.role_type, t.active,t.modified,t.modifier, t.description,
        MAX(CASE t.cfg_name WHEN 'channel_id' THEN cfg_val1 ELSE NULL END ) channel_id,
        MAX(CASE t.cfg_name WHEN 'store_id' THEN cfg_val1 ELSE NULL END ) store_id
        FROM
        (select r.id, r.role_name,r.role_type, r.description, r.active, r.modified, r.modifier , rc.cfg_name, GROUP_CONCAT( DISTINCT rc.cfg_val1) as cfg_val1
        from com_role r, com_role_config rc , Synship.wms_mt_store st, Synship.tm_order_channel ch
        where
        ((rc.cfg_name = 'store_id' and (rc.cfg_val1 = st.store_id or rc.cfg_val1='ALL'))
        or (rc.cfg_name = 'channel_id' and (rc.cfg_val1 = ch.order_channel_id or rc.cfg_val1='ALL')))
        and r.id = rc.role_id
        and r.active = 1
        and st.active = 1
        and ch.active = 1
        GROUP BY r.id, rc.cfg_name) t
        GROUP BY t.id) t1
        ON cr.id = t1.id
        LEFT JOIN (SELECT id, application from view_role_application ) ap ON cr.id = ap.id
        GROUP BY cr.id) t2
        WHERE t2.active =1 ) t3
        ON t3.id = ur.role_id
        GROUP By u.id
        )t4
		 <include refid="selectUserFilter"/>
	</select>


    <select id="selectAllApp" resultType="java.util.Map">
        SELECT ap.id, re.application from com_resource re, Synship.ct_application ap
        WHERE re.res_key = ap.application
        AND re.active = 1 AND ap.active = 1
    </select>

    <insert id="insert" parameterType="com.voyageone.security.model.ComUserModel" useGeneratedKeys="true" keyProperty="id" >
        insert into com_user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                `id`,
            </if>
            <if test="userName != null" >
                `user_name`,
            </if>
            <if test="userAccount != null" >
                `user_account`,
            </if>
            <if test="password != null" >
                `password`,
            </if>
            <if test="credentialSalt != null" >
                `credential_salt`,
            </if>
            <if test="orgId != null" >
                `org_id`,
            </if>
            <if test="description != null" >
                `description`,
            </if>
            <if test="email != null" >
                `email`,
            </if>
            <if test="active != null" >
                `active`,
            </if>
            `created`,
            <if test="creater != null" >
                `creater`,
            </if>
            `modified`,
            <if test="modifier != null" >
                `modifier`,
            </if>
            <if test="modifier == null and creater != null" >
                `modifier`,
            </if>
            <if test="companyId != null" >
                `company_id`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userName != null" >
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userAccount != null" >
                #{userAccount,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="credentialSalt != null" >
                #{credentialSalt,jdbcType=VARCHAR},
            </if>
            <if test="orgId != null" >
                #{orgId,jdbcType=INTEGER},
            </if>
            <if test="description != null" >
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="active != null" >
                #{active,jdbcType=INTEGER},
            </if>
            <if test="created == null" >
                now(),
            </if>
            <if test="created != null" >
                #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="creater != null" >
                #{creater,jdbcType=VARCHAR},
            </if>
            <if test="modified == null" >
                now(),
            </if>
            <if test="modified != null" >
                #{modified,jdbcType=TIMESTAMP},
            </if>
            <if test="modifier != null" >
                #{modifier,jdbcType=VARCHAR},
            </if>
            <if test="modifier == null and creater != null" >
                #{creater,jdbcType=VARCHAR},
            </if>
            <if test="companyId != null" >
                #{companyId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>


</mapper>