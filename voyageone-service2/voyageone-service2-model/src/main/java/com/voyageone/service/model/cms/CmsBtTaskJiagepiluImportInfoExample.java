/*
 * CmsBtTaskJiagepiluImportInfoExample.java
 * Copyright(C) 2001-2016 VoyageOne Group Inc.
 * All rights reserved.
 * This class was generated by code generator, please don't modify it.
 * -----------------------------------------------
 */
package com.voyageone.service.model.cms;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CmsBtTaskJiagepiluImportInfoExample {
    protected String orderByClause;

    protected boolean distinct;

    protected List<Criteria> oredCriteria;

    public CmsBtTaskJiagepiluImportInfoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    public String getOrderByClause() {
        return orderByClause;
    }

    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    public boolean isDistinct() {
        return distinct;
    }

    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * 
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("`id` is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("`id` is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("`id` =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("`id` <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("`id` >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("`id` >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("`id` <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("`id` <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("`id` in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("`id` not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("`id` between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("`id` not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTaskIdIsNull() {
            addCriterion("`task_id` is null");
            return (Criteria) this;
        }

        public Criteria andTaskIdIsNotNull() {
            addCriterion("`task_id` is not null");
            return (Criteria) this;
        }

        public Criteria andTaskIdEqualTo(Integer value) {
            addCriterion("`task_id` =", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdNotEqualTo(Integer value) {
            addCriterion("`task_id` <>", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdGreaterThan(Integer value) {
            addCriterion("`task_id` >", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("`task_id` >=", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdLessThan(Integer value) {
            addCriterion("`task_id` <", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdLessThanOrEqualTo(Integer value) {
            addCriterion("`task_id` <=", value, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdIn(List<Integer> values) {
            addCriterion("`task_id` in", values, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdNotIn(List<Integer> values) {
            addCriterion("`task_id` not in", values, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdBetween(Integer value1, Integer value2) {
            addCriterion("`task_id` between", value1, value2, "taskId");
            return (Criteria) this;
        }

        public Criteria andTaskIdNotBetween(Integer value1, Integer value2) {
            addCriterion("`task_id` not between", value1, value2, "taskId");
            return (Criteria) this;
        }

        public Criteria andSuccessCountIsNull() {
            addCriterion("`success_count` is null");
            return (Criteria) this;
        }

        public Criteria andSuccessCountIsNotNull() {
            addCriterion("`success_count` is not null");
            return (Criteria) this;
        }

        public Criteria andSuccessCountEqualTo(Integer value) {
            addCriterion("`success_count` =", value, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountNotEqualTo(Integer value) {
            addCriterion("`success_count` <>", value, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountGreaterThan(Integer value) {
            addCriterion("`success_count` >", value, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("`success_count` >=", value, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountLessThan(Integer value) {
            addCriterion("`success_count` <", value, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountLessThanOrEqualTo(Integer value) {
            addCriterion("`success_count` <=", value, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountIn(List<Integer> values) {
            addCriterion("`success_count` in", values, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountNotIn(List<Integer> values) {
            addCriterion("`success_count` not in", values, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountBetween(Integer value1, Integer value2) {
            addCriterion("`success_count` between", value1, value2, "successCount");
            return (Criteria) this;
        }

        public Criteria andSuccessCountNotBetween(Integer value1, Integer value2) {
            addCriterion("`success_count` not between", value1, value2, "successCount");
            return (Criteria) this;
        }

        public Criteria andFailCountIsNull() {
            addCriterion("`fail_count` is null");
            return (Criteria) this;
        }

        public Criteria andFailCountIsNotNull() {
            addCriterion("`fail_count` is not null");
            return (Criteria) this;
        }

        public Criteria andFailCountEqualTo(Integer value) {
            addCriterion("`fail_count` =", value, "failCount");
            return (Criteria) this;
        }

        public Criteria andFailCountNotEqualTo(Integer value) {
            addCriterion("`fail_count` <>", value, "failCount");
            return (Criteria) this;
        }

        public Criteria andFailCountGreaterThan(Integer value) {
            addCriterion("`fail_count` >", value, "failCount");
            return (Criteria) this;
        }

        public Criteria andFailCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("`fail_count` >=", value, "failCount");
            return (Criteria) this;
        }

        public Criteria andFailCountLessThan(Integer value) {
            addCriterion("`fail_count` <", value, "failCount");
            return (Criteria) this;
        }

        public Criteria andFailCountLessThanOrEqualTo(Integer value) {
            addCriterion("`fail_count` <=", value, "failCount");
            return (Criteria) this;
        }

        public Criteria andFailCountIn(List<Integer> values) {
            addCriterion("`fail_count` in", values, "failCount");
            return (Criteria) this;
        }

        public Criteria andFailCountNotIn(List<Integer> values) {
            addCriterion("`fail_count` not in", values, "failCount");
            return (Criteria) this;
        }

        public Criteria andFailCountBetween(Integer value1, Integer value2) {
            addCriterion("`fail_count` between", value1, value2, "failCount");
            return (Criteria) this;
        }

        public Criteria andFailCountNotBetween(Integer value1, Integer value2) {
            addCriterion("`fail_count` not between", value1, value2, "failCount");
            return (Criteria) this;
        }

        public Criteria andImportBeginIsNull() {
            addCriterion("`import_begin` is null");
            return (Criteria) this;
        }

        public Criteria andImportBeginIsNotNull() {
            addCriterion("`import_begin` is not null");
            return (Criteria) this;
        }

        public Criteria andImportBeginEqualTo(Date value) {
            addCriterion("`import_begin` =", value, "importBegin");
            return (Criteria) this;
        }

        public Criteria andImportBeginNotEqualTo(Date value) {
            addCriterion("`import_begin` <>", value, "importBegin");
            return (Criteria) this;
        }

        public Criteria andImportBeginGreaterThan(Date value) {
            addCriterion("`import_begin` >", value, "importBegin");
            return (Criteria) this;
        }

        public Criteria andImportBeginGreaterThanOrEqualTo(Date value) {
            addCriterion("`import_begin` >=", value, "importBegin");
            return (Criteria) this;
        }

        public Criteria andImportBeginLessThan(Date value) {
            addCriterion("`import_begin` <", value, "importBegin");
            return (Criteria) this;
        }

        public Criteria andImportBeginLessThanOrEqualTo(Date value) {
            addCriterion("`import_begin` <=", value, "importBegin");
            return (Criteria) this;
        }

        public Criteria andImportBeginIn(List<Date> values) {
            addCriterion("`import_begin` in", values, "importBegin");
            return (Criteria) this;
        }

        public Criteria andImportBeginNotIn(List<Date> values) {
            addCriterion("`import_begin` not in", values, "importBegin");
            return (Criteria) this;
        }

        public Criteria andImportBeginBetween(Date value1, Date value2) {
            addCriterion("`import_begin` between", value1, value2, "importBegin");
            return (Criteria) this;
        }

        public Criteria andImportBeginNotBetween(Date value1, Date value2) {
            addCriterion("`import_begin` not between", value1, value2, "importBegin");
            return (Criteria) this;
        }

        public Criteria andImportEndIsNull() {
            addCriterion("`import_end` is null");
            return (Criteria) this;
        }

        public Criteria andImportEndIsNotNull() {
            addCriterion("`import_end` is not null");
            return (Criteria) this;
        }

        public Criteria andImportEndEqualTo(Date value) {
            addCriterion("`import_end` =", value, "importEnd");
            return (Criteria) this;
        }

        public Criteria andImportEndNotEqualTo(Date value) {
            addCriterion("`import_end` <>", value, "importEnd");
            return (Criteria) this;
        }

        public Criteria andImportEndGreaterThan(Date value) {
            addCriterion("`import_end` >", value, "importEnd");
            return (Criteria) this;
        }

        public Criteria andImportEndGreaterThanOrEqualTo(Date value) {
            addCriterion("`import_end` >=", value, "importEnd");
            return (Criteria) this;
        }

        public Criteria andImportEndLessThan(Date value) {
            addCriterion("`import_end` <", value, "importEnd");
            return (Criteria) this;
        }

        public Criteria andImportEndLessThanOrEqualTo(Date value) {
            addCriterion("`import_end` <=", value, "importEnd");
            return (Criteria) this;
        }

        public Criteria andImportEndIn(List<Date> values) {
            addCriterion("`import_end` in", values, "importEnd");
            return (Criteria) this;
        }

        public Criteria andImportEndNotIn(List<Date> values) {
            addCriterion("`import_end` not in", values, "importEnd");
            return (Criteria) this;
        }

        public Criteria andImportEndBetween(Date value1, Date value2) {
            addCriterion("`import_end` between", value1, value2, "importEnd");
            return (Criteria) this;
        }

        public Criteria andImportEndNotBetween(Date value1, Date value2) {
            addCriterion("`import_end` not between", value1, value2, "importEnd");
            return (Criteria) this;
        }

        public Criteria andErrorMsgIsNull() {
            addCriterion("`error_msg` is null");
            return (Criteria) this;
        }

        public Criteria andErrorMsgIsNotNull() {
            addCriterion("`error_msg` is not null");
            return (Criteria) this;
        }

        public Criteria andErrorMsgEqualTo(String value) {
            addCriterion("`error_msg` =", value, "errorMsg");
            return (Criteria) this;
        }

        public Criteria andErrorMsgNotEqualTo(String value) {
            addCriterion("`error_msg` <>", value, "errorMsg");
            return (Criteria) this;
        }

        public Criteria andErrorMsgGreaterThan(String value) {
            addCriterion("`error_msg` >", value, "errorMsg");
            return (Criteria) this;
        }

        public Criteria andErrorMsgGreaterThanOrEqualTo(String value) {
            addCriterion("`error_msg` >=", value, "errorMsg");
            return (Criteria) this;
        }

        public Criteria andErrorMsgLessThan(String value) {
            addCriterion("`error_msg` <", value, "errorMsg");
            return (Criteria) this;
        }

        public Criteria andErrorMsgLessThanOrEqualTo(String value) {
            addCriterion("`error_msg` <=", value, "errorMsg");
            return (Criteria) this;
        }

        public Criteria andErrorMsgLike(String value) {
            addCriterion("`error_msg` like", value, "errorMsg");
            return (Criteria) this;
        }

        public Criteria andErrorMsgNotLike(String value) {
            addCriterion("`error_msg` not like", value, "errorMsg");
            return (Criteria) this;
        }

        public Criteria andErrorMsgIn(List<String> values) {
            addCriterion("`error_msg` in", values, "errorMsg");
            return (Criteria) this;
        }

        public Criteria andErrorMsgNotIn(List<String> values) {
            addCriterion("`error_msg` not in", values, "errorMsg");
            return (Criteria) this;
        }

        public Criteria andErrorMsgBetween(String value1, String value2) {
            addCriterion("`error_msg` between", value1, value2, "errorMsg");
            return (Criteria) this;
        }

        public Criteria andErrorMsgNotBetween(String value1, String value2) {
            addCriterion("`error_msg` not between", value1, value2, "errorMsg");
            return (Criteria) this;
        }

        public Criteria andImportFileNameIsNull() {
            addCriterion("`import_file_name` is null");
            return (Criteria) this;
        }

        public Criteria andImportFileNameIsNotNull() {
            addCriterion("`import_file_name` is not null");
            return (Criteria) this;
        }

        public Criteria andImportFileNameEqualTo(String value) {
            addCriterion("`import_file_name` =", value, "importFileName");
            return (Criteria) this;
        }

        public Criteria andImportFileNameNotEqualTo(String value) {
            addCriterion("`import_file_name` <>", value, "importFileName");
            return (Criteria) this;
        }

        public Criteria andImportFileNameGreaterThan(String value) {
            addCriterion("`import_file_name` >", value, "importFileName");
            return (Criteria) this;
        }

        public Criteria andImportFileNameGreaterThanOrEqualTo(String value) {
            addCriterion("`import_file_name` >=", value, "importFileName");
            return (Criteria) this;
        }

        public Criteria andImportFileNameLessThan(String value) {
            addCriterion("`import_file_name` <", value, "importFileName");
            return (Criteria) this;
        }

        public Criteria andImportFileNameLessThanOrEqualTo(String value) {
            addCriterion("`import_file_name` <=", value, "importFileName");
            return (Criteria) this;
        }

        public Criteria andImportFileNameLike(String value) {
            addCriterion("`import_file_name` like", value, "importFileName");
            return (Criteria) this;
        }

        public Criteria andImportFileNameNotLike(String value) {
            addCriterion("`import_file_name` not like", value, "importFileName");
            return (Criteria) this;
        }

        public Criteria andImportFileNameIn(List<String> values) {
            addCriterion("`import_file_name` in", values, "importFileName");
            return (Criteria) this;
        }

        public Criteria andImportFileNameNotIn(List<String> values) {
            addCriterion("`import_file_name` not in", values, "importFileName");
            return (Criteria) this;
        }

        public Criteria andImportFileNameBetween(String value1, String value2) {
            addCriterion("`import_file_name` between", value1, value2, "importFileName");
            return (Criteria) this;
        }

        public Criteria andImportFileNameNotBetween(String value1, String value2) {
            addCriterion("`import_file_name` not between", value1, value2, "importFileName");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNull() {
            addCriterion("`created` is null");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNotNull() {
            addCriterion("`created` is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedEqualTo(Date value) {
            addCriterion("`created` =", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotEqualTo(Date value) {
            addCriterion("`created` <>", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThan(Date value) {
            addCriterion("`created` >", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThanOrEqualTo(Date value) {
            addCriterion("`created` >=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThan(Date value) {
            addCriterion("`created` <", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThanOrEqualTo(Date value) {
            addCriterion("`created` <=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedIn(List<Date> values) {
            addCriterion("`created` in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotIn(List<Date> values) {
            addCriterion("`created` not in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedBetween(Date value1, Date value2) {
            addCriterion("`created` between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotBetween(Date value1, Date value2) {
            addCriterion("`created` not between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andCreaterIsNull() {
            addCriterion("`creater` is null");
            return (Criteria) this;
        }

        public Criteria andCreaterIsNotNull() {
            addCriterion("`creater` is not null");
            return (Criteria) this;
        }

        public Criteria andCreaterEqualTo(String value) {
            addCriterion("`creater` =", value, "creater");
            return (Criteria) this;
        }

        public Criteria andCreaterNotEqualTo(String value) {
            addCriterion("`creater` <>", value, "creater");
            return (Criteria) this;
        }

        public Criteria andCreaterGreaterThan(String value) {
            addCriterion("`creater` >", value, "creater");
            return (Criteria) this;
        }

        public Criteria andCreaterGreaterThanOrEqualTo(String value) {
            addCriterion("`creater` >=", value, "creater");
            return (Criteria) this;
        }

        public Criteria andCreaterLessThan(String value) {
            addCriterion("`creater` <", value, "creater");
            return (Criteria) this;
        }

        public Criteria andCreaterLessThanOrEqualTo(String value) {
            addCriterion("`creater` <=", value, "creater");
            return (Criteria) this;
        }

        public Criteria andCreaterLike(String value) {
            addCriterion("`creater` like", value, "creater");
            return (Criteria) this;
        }

        public Criteria andCreaterNotLike(String value) {
            addCriterion("`creater` not like", value, "creater");
            return (Criteria) this;
        }

        public Criteria andCreaterIn(List<String> values) {
            addCriterion("`creater` in", values, "creater");
            return (Criteria) this;
        }

        public Criteria andCreaterNotIn(List<String> values) {
            addCriterion("`creater` not in", values, "creater");
            return (Criteria) this;
        }

        public Criteria andCreaterBetween(String value1, String value2) {
            addCriterion("`creater` between", value1, value2, "creater");
            return (Criteria) this;
        }

        public Criteria andCreaterNotBetween(String value1, String value2) {
            addCriterion("`creater` not between", value1, value2, "creater");
            return (Criteria) this;
        }
    }

    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * 
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}