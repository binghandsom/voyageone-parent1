<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.voyageone.batch.bi.mapper.ProductIidMapper">

	<!-- 获得vs_sales_product_iid信息结构 -->
	<resultMap id="productIIDMap" type="batch.bi.ProductIIDBean">
		<result column="shop_id" property="shop_id"/>
		<result column="product_code" property="product_code"/>
		<result column="num_iid" property="num_iid"/>
		<result column="update_flag" property="update_flag"/>
		<result column="update_time" property="update_time"/>
	</resultMap>

	<!-- 设定vs_sales_product_iid检索条件 -->
	<sql id="vs_sales_product_iid_condition">
		<where>
			<if test="shop_id != null and shop_id != '' ">
				and shop_id = #{shop_id}
			</if>
			<if test="product_code != null and product_code != '' ">
				and product_code = #{product_code}
			</if>
			<if test="num_iid != null and num_iid != '' ">
				and num_iid = #{num_iid}
			</if>
		</where>
	</sql>

	<!-- 获得vs_sales_product_iid数量 -->
	<select id="select_count_vs_sales_product_iid"  parameterType="Map" resultType="int">
		select
		count(1)
		from ${db_name}.vs_sales_product_iid
		<include refid="vs_sales_product_iid_condition"/>
	</select>

	<!-- 检索vs_sales_product_iid信息 -->
	<select id="select_record_vs_sales_product_iid" parameterType="Map" resultMap="productIIDMap">
		select
		shop_id,
		product_code,
		num_iid
		from ${db_name}.vs_sales_product_iid
		<include refid="vs_sales_product_iid_condition"/>
	</select>

	<!-- 检索vs_sales_product_iid信息 -->
	<select id="select_list_iid_vs_sales_product_iid" parameterType="Map" resultType="String">
		select
		num_iid
		from ${db_name}.vs_sales_product_iid
		<include refid="vs_sales_product_iid_condition"/>
		GROUP BY
		num_iid
		ORDER BY
		num_iid
		LIMIT #{init_index}, #{get_size}
	</select>

	<!-- 检索vs_sales_product_iid信息 -->
	<select id="select_iid_vs_sales_product_iid" parameterType="Map" resultType="String">
		select
		num_iid
		from ${db_name}.vs_sales_product_iid
		<include refid="vs_sales_product_iid_condition"/>
		ORDER BY
		shop_id,
		product_code,
		num_iid
		LIMIT 1
	</select>

	<!-- 检索vs_sales_product_iid信息 -->
	<select id="select_list_vs_sales_product_iid" parameterType="Map" resultMap="productIIDMap">
		select
		product_code,
		num_iid
		from ${db_name}.vs_sales_product_iid
		<include refid="vs_sales_product_iid_condition"/>
		ORDER BY
		seq
		LIMIT #{init_index}, #{get_size}
	</select>

	<!-- 检索vs_sales_product_iid信息 -->
	<select id="select_record_product_code_vs_sales_product_iid" parameterType="Map" resultMap="productIIDMap">
		select
		product_code
		from ${db_name}.vs_sales_product_iid
		<include refid="vs_sales_product_iid_condition"/>
	</select>

	<insert id="replace_vs_sales_product_iid" parameterType="Map" useGeneratedKeys="true">
		REPLACE INTO ${db_name}.vs_sales_product_iid
		<foreach collection="column" index="index" item="columnname" open="(" separator="," close=")">
			${columnname}
		</foreach>
		VALUES
		<foreach collection="value" item="ProductIidBean" separator=",">
			(
			#{ProductIidBean.shop_id},
			#{ProductIidBean.product_code},
			#{ProductIidBean.num_iid}
			)
		</foreach>

	</insert>

	<!-- 更新vs_sales_product_iid信息 -->
	<update id="update_vs_sales_product_iid" parameterType="Map">
		UPDATE ${db_name}.vs_sales_product_iid
		SET product_code = #{product_code},
		num_iid = #{num_iid}
		<include refid="vs_sales_product_iid_condition"/>
	</update>

	<!-- 插入vs_sales_product_iid信息 -->
	<insert id="insert_vs_sales_product_iid" parameterType="Map">
		INSERT INTO ${db_name}.vs_sales_product_iid (
			shop_id,
			product_code,
			num_iid
		)
		VALUES
		(
			#{shop_id},
			#{product_code},
			#{num_iid}
		)
	</insert>

</mapper>
