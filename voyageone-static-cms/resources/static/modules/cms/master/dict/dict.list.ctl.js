// Generated by CoffeeScript 1.9.3

/*
  @Name: DictListController
  @Date: 2015-09-15 13:29:15

  @User: Jonas
  @Version: 0.0.1
 */
var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

define(['modules/cms/cms.module', 'modules/cms/master/dict/dict.service'], function(cmsModule) {
  return cmsModule.controller('DictListController', (function() {
    _Class.$inject = ['$scope', '$compile', '$translate', 'DTOptionsBuilder', 'DTColumnBuilder', 'DictService', '$location', 'notify'];

    function _Class($scope, $compile, $translate, DTOptionsBuilder, DTColumnBuilder, DictService, $location, notify) {
      this.$translate = $translate;
      this.DictService = DictService;
      this.$location = $location;
      this.notify = notify;
      this.dtGetDict = bind(this.dtGetDict, this);
      this.dtDict = {
        options: DTOptionsBuilder.newOptions().withOption('processing', true).withOption('serverSide', true).withOption('ordering', false).withOption('ajax', this.dtGetDict).withOption('createdRow', (function(_this) {
          return function(tr, row) {
            var rowScope;
            rowScope = $scope.$new();
            rowScope.$row = row;
            return $compile(angular.element(tr).attr('ng-class', '{"prop-require": $row.is_required, "prop-ignore": $row.is_ignore}'))(rowScope);
          };
        })(this)).withDataProp('data').withPaginationType('full_numbers'),
        columns: [
          DTColumnBuilder.newColumn('name', this.$translate('CMS_TXT_PROMOTION_NAME')).withClass('col-sm-2'), DTColumnBuilder.newColumn('value', this.$translate('CMS_TXT_TH_VALUE')).withClass('col-sm-8').renderWith(function() {
            return '{{$row.value}}';
          }), DTColumnBuilder.newColumn('', this.$translate('CMS_TXT_ACTIONS')).withClass('col-sm-2').renderWith(function() {
            return '<button ng-click="vm.editItem($row)" class="btn btn-success btn-sm"><i class="fa fa-pencil"></i></button>&nbsp;' + '<button ng-click="vm.delItem($row)" class="btn btn-danger btn-sm"><i class="fa fa-trash-o"></i></button>';
          })
        ],
        instance: null
      };
    }

    _Class.prototype.dtGetDict = function(data, callback) {
      return this.DictService.dtGetDict(data).then(function(res) {
        return callback(res.data);
      });
    };

    _Class.prototype.addItem = function() {
      return this.editItem({});
    };

    _Class.prototype.editItem = function(item) {
      sessionStorage.dict = angular.toJson({
        item: item
      });
      return this.$location.path('/cms/dict/item');
    };

    _Class.prototype.delItem = function(item) {
      return this.DictService.delDict(item).then((function(_this) {
        return function(res) {
          if (res.data) {
            _this.notify.success('CMS_TXT_MSG_DELETE_SUCCESS');
            return _this.dtDict.instance.reloadData();
          } else {
            return _this.notify.warning('CMS_TXT_MSG_DELETE_FAILED');
          }
        };
      })(this));
    };

    return _Class;

  })());
});
