{"version":3,"sources":["voyageone.angular.com.js","controllers/datePicker.ctrl.js","controllers/selectRows.ctrl.js","controllers/showPopover.ctrl.js","directives/dateModelFormat.directive.js","directives/enterClick.directive.js","directives/filestyle.directive.js","directives/ifNoRows.directive.js","directives/navigation.directive.js","directives/schema.directive.js","directives/voption.directive.js","directives/vpagination.directive.js","directives/vvalidator.directive.js","factories/dialogs.factory.js","factories/interceptor.factory.js","factories/notify.factory.js","factories/schema.factory.js","factories/vpagination.factory.js","providers/vresources.js","services/ajax.service.js","services/cookie.service.js","services/message.service.js","services/permission.service.js","services/translate.service.js"],"names":["define","angular","module","controller","$scope","vm","this","formats","formatDate","formatDateTime","open","$event","preventDefault","stopPropagation","opened","selectAll","selectOne","objectList","selAllFlag","forEach","currPageRows","object","selFlag","hasOwnProperty","id","selList","indexOf","push","splice","currentId","parseInt","_","isEqual","showInfo","values","tempHtml","data","index","length","directive","$filter","restrict","require","link","scope","elem","attrs","ngModel","$parsers","viewValue","dateModelFormat","attr","$","keyup","e","keyCode","selectExp","enterClick","targetElem","handler","click","element","$eval","$element","options","classInput","filestyle","$templateCache","$compile","tempNoDataKey","get","put","replace","$$data","$parent","$watch","find","remove","append","el","_window","window","_mb","wrap","next","backdrop","on","trigger","_this","parent","siblings","toggleClass","is","width","removeClass","target","top","w_h","height","offset","min","closest","addClass","position","css","appendTo","off","insertAfter","constant","INPUT","DATE","DATETIME","TEXTAREA","SINGLE_CHECK","RADIO","MULTI_INPUT","MULTI_CHECK","COMPLEX","MULTI_COMPLEX","LABEL","VALUE_TYPE_RULE","REQUIRED_RULE","DISABLE_RULE","READ_ONLY_RULE","REGEX_RULE","SET_RULE","TIP_RULE","DEV_TIP_RULE","MIN_LENGTH_RULE","MAX_LENGTH_RULE","MIN_VALUE_RULE","MAX_VALUE_RULE","MIN_INPUT_NUM_RULE","MAX_INPUT_NUM_RULE","MIN_DECIMAL_DIGITS_RULE","MAX_DECIMAL_DIGITS_RULE","MIN_TARGET_SIZE_RULE","MAX_TARGET_SIZE_RULE","MIN_IMAGE_SIZE_RULE","MAX_IMAGE_SIZE_RULE","TEXT","DECIMAL","INTEGER","LONG","TIME","URL","HTML","schemaHeaderFactory","fieldTypes","ruleTypes","valueTypes","templateKey_header","transclude","templateUrl","schemaHeader","_returnType","type","_operateRule","rules","showHtmlData","copy","schemaHearInfo","addField","newFieldMap","fields","field","eval","fieldMap","isMultiComplex","isComplex","rule","name","_requiredRule","_tipRule","requiredRule","value","isRequired","tipRule","tipMsg","schemaFactory","templateKey_label","templateKey_input","templateKey_date","templateKey_datetime","templateKey_textarea","templateKey_select","templateKey_radio","templateKey_checkbox","templateKey_multiComplex","templateKey_complex","templateKey_multiComplex_tip","$$hastip","$$complex","schema","html","schemaInfo","checkboxValue","contains","checkValues","obj","isSelected","delField","_setCheckValues","_resetMultiComplex","_resetComplex","undefined","tempValues","tempFieldMap","tempField","isEmpty","_valueTypeRule","_disableRule","_readOnlyRule","_regexRule","_minLengthRule","_maxLengthRule","_minValueRule","_maxValueRule","_minInputNumRule","_maxInputNumRule","valueTypeRule","rowNum","disableRule","dependGroup","readOnlyRule","regexRule","minLengthRule","isNaN","exProperty","unit","maxLengthRule","minValueRule","parseFloat","maxValueRule","minInputNumRule","maxInputNumRule","typeList","refresh","vpagination","templateKey","templateKeyNoData","defConfig","curr","total","size","showPageNo","$$configNameForA","$$configNameForE","userConfigName","userConfig","userWithDefConfig","extend","config","p","goPage","num","Number","isCurr","totalPages","getPageCount","totalItems","getTotal","getCurr","elm","ctrl","maxlength","$observe","intVal","$validate","$validators","modelValue","$isEmpty","getByteLength","byteLen","len","i","charCodeAt","minlength","maxvalue","test","Date","minvalue","maxinputnum","mininputnum","factory","$modal","templateName","tran","translationId","isObject","content","title","modalInstance","close","dismiss","ok","$dialogs","isAlert","vConfirm","InterceptorFactory","$httpProvider","interceptors","UNKNOWN_CODE","CODE_SYS_REDIRECT","MSG_TIMEOUT","autoRedirect","res","code","location","href","redirectTo","sessionTimeout","unknownException","response","$$lastUnknow","console","error","message","request","result","requestError","responseError","notify","isString","success","className","warning","danger","_schemaHeaderInfo","_schemaInfo","htmlToString","htmls","_pages","_lastTotal","_showPages","pageNo","start","getCurrStartItems","end","getCurrEndItems","isFirst","isLast","pages","createShowPages","isShowStart","isShowEnd","load","getPages","page","fetch","minPage","maxPage","currEndItems","provider","$provide","getActionUrl","root","action","lastIndexOf","closureDataService","actions","ajaxService","DataResource","log","JSON","stringify","actionUrl","post","service","$get","register","childName","run","$vresources","$actions","$Ajax","AjaxService","$http","blockUI","$q","$inject","prototype","url","defer","then","alert","reject","resolve","promise","$ajax","messageService","show","CookieService","keys","language","company","channel","application","gentProps","key","val","arguments","set","$cookieStore","removeAll","MessageService","DISPLAY_TYPES","ALERT","NOTIFY","POP","CUSTOM","confirm","displayType","PermissionService","$rootScope","permissions","setPermissions","$broadcast","has","permission","trim","TranslateService","$translate","languages","en","zh","setLanguage","getBrowserLanguage","use","currentLang","navigator","browserLanguage","substr"],"mappings":"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","file":"voyageone.angular.com.js","sourcesContent":["define(function(){\n/**\n * @Description:\n * 弹出日期控件\n * @User:    Edward\n * @Version: 0.2.0, 2015-10-10\n */\n\nangular.module('voyageone.angular.controllers.datePicker', [])\n    .controller('datePickerCtrl', [\"$scope\", function ($scope) {\n        var vm = this;\n\n        vm.formats = ['yyyy-MM-dd', 'yyyy-MM-dd HH:mm:ss'];\n\n        $scope.formatDate = vm.formats[0];\n        $scope.formatDateTime = vm.formats[1];\n\n        $scope.open = open;\n\n        function open($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n\n            $scope.opened = true;\n        }\n    }]);\n/**\n * @Description:\n * select tables items\n * @User: linanbin\n * @Version: 2.0.0, 15/12/16\n */\n\nangular.module('voyageone.angular.controllers.selectRows', [])\n    .controller('selectRowsCtrl', [\"$scope\", function ($scope) {\n\n        $scope.selectAll = selectAll;\n        $scope.selectOne = selectOne;\n\n        /**\n         * 全部选中当前页数据\n         * @param objectList\n         */\n        function selectAll(objectList) {\n\n            objectList.selAllFlag = !objectList.selAllFlag;\n\n            // 循环处理全选中的数据\n            angular.forEach(objectList.currPageRows, function (object) {\n                if(objectList.selFlag.hasOwnProperty(object.id)) {\n\n                    // 单签页面所有产品选中flag被标示\n                    objectList.selFlag[object.id] = objectList.selAllFlag;\n\n                    if (objectList.hasOwnProperty('selList')) {\n                        if (objectList.selAllFlag && objectList.selList.indexOf(object) < 0) {\n                            objectList.selList.push(object);\n                        } else if (!objectList.selAllFlag && objectList.selList.indexOf(object) > -1) {\n                            objectList.selList.splice(objectList.selList.indexOf(object), 1);\n                        }\n                    }\n                }\n            });\n        }\n\n        /**\n         * 选中单条数据\n         * @param currentId\n         * @param objectList\n         */\n        function selectOne(currentId, objectList) {\n            currentId = parseInt(currentId);\n            if (objectList.hasOwnProperty('selList')) {\n\n                angular.forEach(objectList.selList, function(object) {\n\n                    if (_.isEqual(object.id, currentId)) {\n                        if (objectList.selList.indexOf(object) > -1) {\n                            objectList.selList.splice(objectList.selList.indexOf(object), 1);\n                        } else {\n                            objectList.selList.push(object);\n                        }\n                    }\n                });\n            }\n\n            objectList.selAllFlag = true;\n            angular.forEach(objectList.currPageRows, function(object) {\n                if (!objectList.selFlag[object.id]) {\n                    objectList.selAllFlag = false;\n                }\n            })\n        }\n    }]);\n/**\n * @Description:\n * 显示html的popover的共同方法\n * @User: linanbin\n * @Version: 2.0.0, 15/12/14\n */\n\nangular.module('voyageone.angular.controllers.showPopover', [])\n    .controller('showPopoverCtrl', [\"$scope\", function ($scope) {\n\n        $scope.showInfo = showInfo;\n\n        function showInfo(values) {\n            var tempHtml = \"\";\n\n            angular.forEach(values, function (data, index) {\n                tempHtml += data;\n                if (index !== values.length) {\n                    tempHtml += \"<br>\";\n                }\n            });\n            return tempHtml\n        }\n    }]);\n\n/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.dateModelFormat', [])\n    .directive('dateModelFormat', [\"$filter\", function ($filter) {\n        return {\n            restrict: \"A\",\n            require: 'ngModel',\n            link: function (scope, elem, attrs, ngModel) {\n                ngModel.$parsers.push(function (viewValue) {\n                    return $filter('date')(viewValue, attrs.dateModelFormat || 'yyyy-MM-dd HH:mm:ss');\n                });\n            }\n        };\n    }]);\n\n/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.directives.enterClick', [])\n  .directive('enterClick', function() {\n    return {\n      restrict: \"A\",\n      link: function(scope, elem, attr) {\n        $(elem).keyup(function(e) {\n          if (e.keyCode !== 13) return;\n\n          var selectExp = attr.enterClick;\n\n          var targetElem, handler = function() {\n            targetElem.click();\n          };\n\n          try {\n            targetElem = angular.element(selectExp);\n          } catch (e) {\n            targetElem = null\n          }\n\n          if (!targetElem || !targetElem.length) {\n            // 如果取不到元素，则尝试作为表达式执行\n            handler = function() {\n              scope.$eval(selectExp);\n            };\n          } else if (targetElem.attr(\"disabled\")) {\n            // 如果元素存在，但是是禁用状态的，放弃执行\n            return;\n          }\n\n          handler();\n        });\n      }\n    };\n  });\n\n/**\n * @Description:\n * 引入对上传框插件 fileStyle 的指令支持\n * @Date:    2015-11-19 17:35:22\n * @User:    Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.fileStyle', [])\n  .directive('fileStyle', function () {\n    return {\n      restrict: 'A',\n      controller: [\"$scope\", \"$element\", function ($scope, $element) {\n        var options = $element.data();\n        // old usage support\n        options.classInput = $element.data('classinput') || options.classInput;\n        if ($element.filestyle) {\n          $element.filestyle(options);\n        }\n      }]\n    };\n  });\n/**\n * @Description:\n * table中无数据范围的数据\n * @User: linanbin\n * @Version: 2.0.0, 15/12/11\n */\n\nangular.module('voyageone.angular.directives.ifNoRows', [])\n    .directive('ifNoRows', [\"$templateCache\", \"$compile\", function ($templateCache, $compile) {\n\n        var tempNoDataKey = \"voyageone.angular.directives.ifNoRows.tpl.html\";\n\n        // 没有数据显示警告\n        if (!$templateCache.get(tempNoDataKey)) {\n            $templateCache.put(tempNoDataKey,\n            '<div class=\"text-center text-hs\" id=\"noData\">\\n' +\n            '    <h4 class=\"text-vo\"><i class=\"icon fa fa-warning\"></i>&nbsp;{{\\'TXT_COM_WARNING\\' | translate}}</h4>\\n' +\n            '{{\\'TXT_COM_MSG_NO_DATE\\' | translate}}' +\n            '</dv>');\n        }\n\n        return {\n            restrict: \"A\",\n            replace: false,\n            scope: {\n                $$data: \"@ifNoRows\"\n            },\n            link: function (scope, element) {\n\n                scope.$parent.$watch(scope.$$data, function () {\n\n                    // 如果数据不存在则显示警告信息\n                    if(scope.$parent.$eval(scope.$$data)  == 0) {\n                        element.find(\"#noData\").remove();\n                        element.append($compile($templateCache.get(tempNoDataKey))(scope));\n                    } else {\n                        element.find(\"#noData\").remove();\n                    }\n                })\n            }\n        };\n    }]);\n\n/**\n * @Description:\n * 用于菜单目录二级展开\n * @User:    Jonas\n * @Version: 0.2.0, 2015-12-07\n */\n\nangular.module('voyageone.angular.directives.uiNav', [])\n    .directive('uiNav', function () {\n\n        return {\n            restrict: 'AC',\n            link: function(scope, el) {\n                var _window = $(window),\n                    _mb = 768,\n                    wrap = $('.app-aside'),\n                    next,\n                    backdrop = '.dropdown-backdrop';\n                // unfolded\n                el.on('click', 'a', function(e) {\n                    next && next.trigger('mouseleave.nav');\n                    var _this = $(this);\n                    _this.parent().siblings( \".active\" ).toggleClass('active');\n                    _this.next().is('ul') &&  _this.parent().toggleClass('active') &&  e.preventDefault();\n                    // mobile\n                    _this.next().is('ul') || ( ( _window.width() < _mb ) && $('.app-aside').removeClass('show off-screen') );\n                });\n\n                // folded & fixed\n                el.on('mouseenter', 'a', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                    if ( !$('.app-aside-fixed.app-aside-folded').length || ( _window.width() < _mb ) || $('.app-aside-dock').length) return;\n                    var _this = $(e.target)\n                        , top\n                        , w_h = $(window).height()\n                        , offset = 50\n                        , min = 150;\n\n                    !_this.is('a') && (_this = _this.closest('a'));\n                    if( _this.next().is('ul') ){\n                        next = _this.next();\n                    }else{\n                        return;\n                    }\n\n                    _this.parent().addClass('active');\n                    top = _this.parent().position().top + offset;\n                    next.css('top', top);\n                    if( top + next.height() > w_h ){\n                        next.css('bottom', 0);\n                    }\n                    if(top + min > w_h){\n                        next.css('bottom', w_h - top - offset).css('top', 'auto');\n                    }\n                    next.appendTo(wrap);\n\n                    next.on('mouseleave.nav', function(e){\n                        $(backdrop).remove();\n                        next.appendTo(_this.parent());\n                        next.off('mouseleave.nav').css('top', 'auto').css('bottom', 'auto');\n                        _this.parent().removeClass('active');\n                    });\n\n                    $('.smart').length && $('<div class=\"dropdown-backdrop\"/>').insertAfter('.app-aside').on('click', function(next){\n                        next && next.trigger('mouseleave.nav');\n                    });\n\n                });\n\n                wrap.on('mouseleave', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                });\n            }\n        };\n    });\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/24\n */\n\nangular.module('voyageone.angular.directives.schema', [])\n    // 定义fieldTypes\n    .constant('fieldTypes', {\n        INPUT: \"INPUT\",\n        DATE: \"DATE\",\n        DATETIME: \"DATETIME\",\n        TEXTAREA: \"TEXTAREA\",\n        SINGLE_CHECK: \"SINGLECHECK\",// 在complex中的显示select,以外的默认显示singlecheck,如果用户觉得select显示不方便,就将该field的type改成radio\n        RADIO: \"RADIO\",\n        MULTI_INPUT: \"MULTIINPUT\", // 没有被使用\n        MULTI_CHECK: \"MULTICHECK\",\n        COMPLEX: \"COMPLEX\", // TODO\n        MULTI_COMPLEX: \"MULTICOMPLEX\",\n        LABEL: \"LABEL\"  // 可以不显示\n    })\n    // 定义ruleTypes\n    .constant('ruleTypes', {\n        VALUE_TYPE_RULE: \"valueTypeRule\",\n        REQUIRED_RULE: \"requiredRule\",\n        DISABLE_RULE: \"disableRule\",\n        READ_ONLY_RULE: \"readOnlyRule\",\n        REGEX_RULE: \"regexRule\",\n        SET_RULE: \"setRule\", // TODO 暂时不知道怎么用\n        TIP_RULE: \"tipRule\", // TODO 不需要处理\n        DEV_TIP_RULE: \"devTipRule\", // 不需要处理\n        MIN_LENGTH_RULE: \"minLengthRule\",\n        MAX_LENGTH_RULE: \"maxLengthRule\",\n        MIN_VALUE_RULE: \"minValueRule\",\n        MAX_VALUE_RULE: \"maxValueRule\",\n        MIN_INPUT_NUM_RULE: \"minInputNumRule\",\n        MAX_INPUT_NUM_RULE: \"maxInputNumRule\",\n        MIN_DECIMAL_DIGITS_RULE: \"minDecimalDigitsRule\", // TODO\n        MAX_DECIMAL_DIGITS_RULE: \"maxDecimalDigitsRule\", // TODO\n        MIN_TARGET_SIZE_RULE: \"minTargetSizeRule\", // TODO\n        MAX_TARGET_SIZE_RULE: \"maxTargetSizeRule\", // TODO\n        MIN_IMAGE_SIZE_RULE: \"minImageSizeRule\", // TODO\n        MAX_IMAGE_SIZE_RULE: \"maxImageSizeRule\" // TODO\n    })\n    // 定义valueTypes\n    .constant('valueTypes', {\n        TEXT: \"text\",\n        DECIMAL: \"decimal\",\n        INTEGER: \"integer\",\n        LONG: \"long\",\n        DATE: \"date\",\n        TIME: \"time\",\n        URL: \"url\",\n        TEXTAREA: \"textarea\",\n        HTML: \"html\"\n    })\n\n    .directive('schemaHeader', [\"$templateCache\", \"schemaHeaderFactory\", \"fieldTypes\", \"ruleTypes\", \"valueTypes\", function ($templateCache, schemaHeaderFactory, fieldTypes, ruleTypes, valueTypes) {\n\n        // 定义header\n        var templateKey_header = \"voyageone.angular.directives.schemaHeader.tpl.html\";\n        if (!$templateCache.get(templateKey_header)) {$templateCache.put(templateKey_header\n            , '<div class=\"form-group\">' +\n              '  <label class=\"col-sm-2 control-label\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" ng-bind=\"$$data.name\"></label>' +\n              '  <div class=\"col-sm-8\" ng-class=\"{\\'hierarchy_main modal-open\\' : showHtmlData.isMultiComplex, \\'hierarchy_main\\': showHtmlData.isComplex}\" ng-transclude></div>' +\n              '  <div class=\"col-sm-2\" ng-if=\"showHtmlData.isMultiComplex\"><button class=\"btn btn-success\" ng-click=\"addField($$data)\"><i class=\"fa fa-plus\"></i>{{\\'BTN_COM_ADD\\' | translate}}</button></div>' +\n              '  <div class=\"row\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><div class=\"col-sm-8 col-sm-offset-2 text-warnings\"><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div></div>' +\n              '</div>');}\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            transclude: true,\n            templateUrl: templateKey_header,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope) {\n                var schemaHeader = new schemaHeaderFactory();\n\n                _returnType (scope.$$data.type);\n                _operateRule (scope.$$data.rules);\n                scope.showHtmlData = angular.copy(schemaHeader.schemaHearInfo);\n\n                /**\n                 * 设置multi complex添加一条新记录\n                 * @param data\n                 */\n                scope.addField= function (data) {\n                    var newFieldMap = {};\n                    angular.forEach(data.fields, function (field) {\n                        eval(\"newFieldMap.\" + field.id + \"=field\");\n                    });\n\n                    scope.$$data.values.push({fieldMap: angular.copy(newFieldMap)});\n                };\n\n                /**\n                 * 返回需要展示的页面样式\n                 * @param type\n                 * @param valueTypeRule\n                 * @private\n                 */\n                function _returnType (type) {\n\n                    switch (type) {\n                        case fieldTypes.MULTI_COMPLEX:\n                            schemaHeader.isMultiComplex(true);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            schemaHeader.isComplex(true);\n                            break;\n                    }\n                }\n\n                /**\n                 * 处理rules\n                 * @param rules\n                 * @private\n                 */\n                function _operateRule (rules) {\n                    angular.forEach(rules, function (rule) {\n                        switch (rule.name) {\n                            case ruleTypes.REQUIRED_RULE:\n                                _requiredRule(rule);\n                                break;\n                            case ruleTypes.TIP_RULE:\n                                _tipRule(rule);\n                                break;\n                        }\n                    })\n\n                }\n\n                /**\n                 * 处理requiredRule\n                 * @param requiredRule\n                 * @private\n                 */\n                function _requiredRule (requiredRule) {\n                    if (\"true\" == requiredRule.value) {\n                        schemaHeader.isRequired(true);\n                    }\n                }\n\n                /**\n                * 处理tipRule\n                * @param tipRule\n                * @private\n                */\n                function _tipRule (tipRule) {\n                    schemaHeader.tipMsg(tipRule.value);\n                }\n            }\n        }\n    }])\n\n    .directive('schemaItem', [\"$templateCache\", \"$compile\", \"schemaFactory\", \"fieldTypes\", \"ruleTypes\", \"valueTypes\", function ($templateCache, $compile, schemaFactory, fieldTypes, ruleTypes, valueTypes) {\n\n        // label\n        var templateKey_label = \"voyageone.angular.directives.schemaLabel.tpl.html\";\n        if (!$templateCache.get(templateKey_label)) {$templateCache.put(templateKey_label,\n            '<input style=\"min-width: 150px; max-width: 250px;\" type=\"text\" readonly ng-model=\"$$data.value\" class=\"form-control inherited\">');}\n\n        // input\n        var templateKey_input = \"voyageone.angular.directives.schemaInput.tpl.html\";\n        if (!$templateCache.get(templateKey_input)) {$templateCache.put(templateKey_input,\n            '<input style=\"min-width: 150px; max-width: 250px;\" ng-model=\"$$data.value\" class=\"form-control inherited\" replaceInfo>');}\n\n        // data\n        var templateKey_date = \"voyageone.angular.directives.schemaDate.tpl.html\";\n        if (!$templateCache.get(templateKey_date)) {$templateCache.put(templateKey_date,\n            '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input replaceInfo type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDate}}\" ng-model=\"$parent.$$data.value\" date-model-format=\"{{formatDate}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button replaceInfo type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>');}\n\n        // datetime\n        var templateKey_datetime = \"voyageone.angular.directives.schemaDatetime.tpl.html\";\n        if (!$templateCache.get(templateKey_datetime)) {$templateCache.put(templateKey_datetime,\n            '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input replaceInfo type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDateTime}}\" ng-model=\"$parent.$$data.value\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button replaceInfo type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>');}\n\n        // textarea\n        var templateKey_textarea = \"voyageone.angular.directives.schemaTextarea.tpl.html\";\n        if (!$templateCache.get(templateKey_textarea)) {$templateCache.put(templateKey_textarea,\n            '<textarea style=\"min-width: 150px; max-width: 650px;\" class=\"form-control no-resize\" ng-model=\"$$data.value\" rows=\"{{showHtmlData.rowNum}}\" replaceInfo></textarea>');}\n\n        // single check-select\n        var templateKey_select = \"voyageone.angular.directives.schemaSelect.tpl.html\";\n        if (!$templateCache.get(templateKey_select)) {$templateCache.put(templateKey_select,\n            '<select style=\"min-width: 150px; max-width: 250px;\" replaceInfo class=\"form-control\" ng-model=\"$$data.value.value\" ng-options=\"option.value as option.displayName for option in $$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');}\n\n        // single check-radio\n        var templateKey_radio = \"voyageone.angular.directives.schemaRadio.tpl.html\";\n        if (!$templateCache.get(templateKey_radio)) {$templateCache.put(templateKey_radio,\n            '<label class=\"checkbox-inline c-radio\" ng-repeat=\"option in $$data.options\"><input name=\"{{$$data.id}}\" type=\"radio\" ng-value=\"option.value\" ng-model=\"$$data.value.value\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>');}\n\n        // multi check-checkbox\n        var templateKey_checkbox = \"voyageone.angular.directives.schemaCheckbox.tpl.html\";\n        if (!$templateCache.get(templateKey_checkbox)) {$templateCache.put(templateKey_checkbox,\n            '<label class=\"checkbox-inline c-checkbox\" ng-repeat=\"option in $$data.options\"><input type=\"checkbox\" ng-value=\"option.value\" ng-click=\"checkboxValue(option.value)\" ng-checked=\"isSelected(option.value)\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>');}\n\n        // multi complex\n        var templateKey_multiComplex = \"voyageone.angular.directives.schemaMultiComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_multiComplex)) {$templateCache.put(templateKey_multiComplex,\n            '<table class=\"table text-center\">' +\n            '<thead><tr>' +\n            //'<schema-header ng-repeat=\"field in $$data.fields\" data=\"field\" is-complex=\"true\"></schema-header>' +\n            '<th ng-repeat=\"field in $$data.fields\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" class=\"text-center\" style=\"min-width: 180px;\">{{field.name}}</th>' +\n            '<th style=\"min-width: 60px;\" class=\"text-center\" translate=\"TXT_COM_EDIT\"></th>' +\n            '</tr></thead>' +\n            '<tbody><tr ng-repeat=\"value in $$data.values\">' +\n            '<td class=\"text-left\" ng-repeat=\"field in value.fieldMap\"><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></td>' +\n            '<td style=\"min-width: 60px;\"><button title=\"{\\'BTN_COM_DELETE\\' | translate}\" class=\"btn btn-danger btn-xs\" ng-click=\"delField($index)\"><i class=\"fa  fa-trash-o\"></i></button></td>' +\n            '</tr></tbody>' +\n            '</table>');}\n\n        // complex\n        var templateKey_complex = \"voyageone.angular.directives.schemaComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_complex)) {$templateCache.put(templateKey_complex,\n            '<schema-header ng-repeat=\"field in $$data.fields\" data=\"field\"><schema-item data=\"field\"></schema-item></schema-header>');}\n\n        // multi complex tip\n        var templateKey_multiComplex_tip = \"voyageone.angular.directives.schemaMultiComplexTip.tpl.html\";\n        if (!$templateCache.get(templateKey_multiComplex_tip)) {$templateCache.put(templateKey_multiComplex_tip,\n            '<div class=\"text-warnings\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><br><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div>');}\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                $$data: \"=data\",\n                $$hastip: \"=hastip\",\n                $$complex: \"=complex\"\n            },\n            link: function (scope, element) {\n\n                var schema = new schemaFactory();\n\n                _returnType (scope.$$data.type);\n                _operateRule (scope.$$data.rules);\n\n                var tempHtml = \"\";\n                // 拼接body\n                switch (schema.type()) {\n                    case fieldTypes.INPUT:\n                        tempHtml = $templateCache.get(templateKey_input).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.DATE:\n                        tempHtml = $templateCache.get(templateKey_date).replace(\"replaceInfo\", schema.html()).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.DATETIME:\n                        tempHtml = $templateCache.get(templateKey_datetime).replace(\"replaceInfo\", schema.html()).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.TEXTAREA:\n                        tempHtml = $templateCache.get(templateKey_textarea).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.SINGLE_CHECK:\n                        tempHtml = $templateCache.get(templateKey_select).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.RADIO:\n                        tempHtml = $templateCache.get(templateKey_radio).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.MULTI_CHECK:\n                        tempHtml = $templateCache.get(templateKey_checkbox).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.LABEL:\n                        tempHtml = $templateCache.get(templateKey_label);\n                        break;\n                    case fieldTypes.MULTI_COMPLEX:\n                        tempHtml = $templateCache.get(templateKey_multiComplex);\n                        break;\n                    case fieldTypes.COMPLEX:\n                        tempHtml = $templateCache.get(templateKey_complex);\n                        break;\n                }\n\n                // 添加规则说明\n                if (schema.tipMsg() != null && scope.$$hastip) {\n                    tempHtml += $templateCache.get(templateKey_multiComplex_tip);\n                }\n                scope.showHtmlData = angular.copy(schema.schemaInfo());\n                element.html($compile(tempHtml)(scope));\n\n                /**\n                * 设置checkbox被选中的value值处理\n                * @param value\n                */\n                scope.checkboxValue = function (value) {\n                    if (_.contains(scope.showHtmlData.checkValues, value)) {\n                        scope.showHtmlData.checkValues.splice(_.indexOf(scope.showHtmlData.checkValues, value), 1);\n                    } else {\n                        scope.showHtmlData.checkValues.push(value);\n                    }\n                    scope.$$data.values = [];\n                    angular.forEach(scope.showHtmlData.checkValues, function (obj) {\n                        scope.$$data.values.push({id: null, value: obj});\n                    })\n                };\n\n                /**\n                 * 判断是否被选中\n                 * @param value\n                 */\n                scope.isSelected = function (value) {\n                    return _.contains(scope.showHtmlData.checkValues, value)\n                };\n\n                /**\n                * 设置multi complex删除该条记录\n                * @param index\n                */\n                scope.delField = function (index) {\n                    scope.$$data.values.splice(index, 1);\n                };\n\n                /**\n                * 返回需要展示的页面样式\n                * @param type\n                * @param valueTypeRule\n                * @private\n                */\n                function _returnType (type) {\n                    schema.type(type);\n                    switch (type) {\n                        case fieldTypes.RADIO:\n                            if (scope.$$complex)\n                                schema.type(fieldTypes.SINGLE_CHECK);\n                            break;\n                        case fieldTypes.MULTI_CHECK:\n                            _setCheckValues(scope.$$data.values);\n                            break;\n                        case fieldTypes.MULTI_COMPLEX:\n                            scope.$$data.values = _resetMultiComplex(scope.$$data);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            scope.$$data.values = _resetComplex(scope.$$data);\n                            break;\n                    }\n                }\n\n                /**\n                * 设置checkvalues\n                * @param values\n                * @private\n                */\n                function _setCheckValues (values) {\n                    if (values != undefined && values != null) {\n                        angular.forEach(values, function (obj) {\n                            schema.checkValues(obj.value);\n                        })\n                    }\n                }\n\n                /**\n                * 重新设置multicomplex的一些属性\n                * @param fields\n                * @private\n                */\n                function _resetMultiComplex (data) {\n                    var tempValues = [];\n                    angular.forEach(data.values, function (value) {\n                        var tempFieldMap = {};\n                        angular.forEach(data.fields, function (field) {\n                            var tempField = angular.copy(field);\n                            if (value.fieldMap[field.id] != undefined) {\n                                tempField.value = value.fieldMap[field.id].value;\n                            }\n                            tempFieldMap[field.id] = tempField;\n                        });\n                        tempValues.push({fieldMap: angular.copy(tempFieldMap)});\n                    });\n\n                    // 如果values为空,默认添加空白行\n                    if (_.isEmpty(data.values)) {\n                        var newFieldMap = {};\n                        angular.forEach(data.fields, function (field) {\n                            eval(\"newFieldMap.\" + field.id + \"=field\");\n                        });\n\n                        tempValues.push({fieldMap: angular.copy(newFieldMap)});\n                    }\n\n                    return tempValues;\n                }\n\n                /**\n                 * 重新\n                 * @param data\n                 * @private\n                 */\n                function _resetComplex (data) {\n                    return data.values;\n                    //var tempValues = {};\n                    //angular.forEach(data.fields, function (value) {\n                    //    if (value.type === fieldTypes.COMPLEX) {\n                    //        tempValues[]\n                    //    } else if (value.type === fieldTypes.MULTI_COMPLEX) {\n                    //        tempValues[value.id] =\n                    //    }\n                    //})\n                }\n\n                /**\n                * 处理rules\n                * @param rules\n                * @private\n                */\n                function _operateRule (rules) {\n                    angular.forEach(rules, function (rule) {\n                        switch (rule.name) {\n                            case ruleTypes.VALUE_TYPE_RULE:\n                                _valueTypeRule(rule);\n                                break;\n                            case ruleTypes.REQUIRED_RULE:\n                                _requiredRule(rule);\n                                break;\n                            case ruleTypes.DISABLE_RULE:\n                                _disableRule(rule);\n                                break;\n                            case ruleTypes.READ_ONLY_RULE:\n                                _readOnlyRule(rule);\n                                break;\n                            case ruleTypes.REGEX_RULE:\n                                _regexRule(rule);\n                                break;\n                            case ruleTypes.TIP_RULE:\n                                _tipRule(rule);\n                                break;\n                            case ruleTypes.MIN_LENGTH_RULE:\n                                _minLengthRule(rule);\n                                break;\n                            case ruleTypes.MAX_LENGTH_RULE:\n                                _maxLengthRule(rule);\n                                break;\n                            case ruleTypes.MIN_VALUE_RULE:\n                                _minValueRule(rule);\n                                break;\n                            case ruleTypes.MAX_VALUE_RULE:\n                                _maxValueRule(rule);\n                                break;\n                            case ruleTypes.MIN_INPUT_NUM_RULE:\n                                _minInputNumRule(rule);\n                                break;\n                            case ruleTypes.MAX_INPUT_NUM_RULE:\n                                _maxInputNumRule(rule);\n                                break;\n                        }\n                    })\n                }\n\n                /**\n                 * 处理valueTypeRule\n                 * @param valueTypeRule\n                 * @private\n                 */\n                function _valueTypeRule (valueTypeRule) {\n                    switch (valueTypeRule.value) {\n                        case valueTypes.TEXT:\n                        case valueTypes.DECIMAL:\n                        case valueTypes.INTEGER:\n                        case valueTypes.LONG:\n                            schema.type(fieldTypes.INPUT);\n                            schema.html(\"type=\\\"text\\\"\");\n                            break;\n                        case valueTypes.DATE:\n                            schema.type(fieldTypes.DATE);\n                            break;\n                        case valueTypes.TIME:\n                            schema.type(fieldTypes.DATETIME);\n                            break;\n                        case valueTypes.URL:\n                            schema.type(fieldTypes.INPUT);\n                            schema.html(\"type=\\\"url\\\"\");\n                            break;\n                        case valueTypes.TEXTAREA:\n                            schema.type(fieldTypes.TEXTAREA);\n                            schema.rowNum(4);\n                            break;\n                        case valueTypes.HTML:\n                            schema.type(fieldTypes.TEXTAREA);\n                            schema.rowNum(10);\n                            break;\n                    }\n                }\n\n                /**\n                 * 处理requiredRule\n                 * @param requiredRule\n                 * @private\n                 */\n                function _requiredRule (requiredRule) {\n                    if (\"true\" == requiredRule.value) {\n                        schema.isRequired(true);\n                        schema.html(\"required\");\n                    }\n                }\n\n                /**\n                 * 处理disableRule\n                 * @param disableRule\n                 * @private\n                 */\n                function _disableRule (disableRule) {\n                    if (\"true\" == disableRule.value\n                    && disableRule.dependGroup == null) {\n                        schema.html(\"ng-disabled=\\\"true\\\"\");\n                    }\n                }\n\n                /**\n                 * 处理readOnlyRule\n                 * @param readOnlyRule\n                 * @private\n                 */\n                function _readOnlyRule (readOnlyRule) {\n                    if (\"true\" == readOnlyRule.value) {\n                        schema.html(\"readonly\");\n                    }\n                }\n\n                /**\n                 * 处理regexRule\n                 * @param regexRule\n                 * @private\n                 */\n                function _regexRule (regexRule) {\n                    schema.html(\"ng-pattern=\\\"/\" + regexRule.value +\"/\\\"\");\n                }\n\n                /**\n                 * 处理tipRule\n                 * @param tipRule\n                 * @private\n                 */\n                function _tipRule (tipRule) {\n                    schema.tipMsg(tipRule.value);\n                }\n\n                /**\n                 * 处理minLengthRule\n                 * @param minLengthRule\n                 * @private\n                 */\n                function _minLengthRule (minLengthRule) {\n                    var value = isNaN(parseInt(minLengthRule.value)) ? 0 : minLengthRule.value;\n\n                    if (\"not include\" === minLengthRule.exProperty)\n                        value = (value > 0) ? value -1 : 0;\n\n                    if (\"character\" == minLengthRule.unit)\n                        schema.html(\"ng-minlength=\\\"\" + value +\"\\\"\");\n                    else\n                        schema.html(\"ng-char-minlength=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 处理maxLengthRule\n                 * @param maxLengthRule\n                 * @private\n                 */\n                function _maxLengthRule (maxLengthRule) {\n                    var value = isNaN(parseInt(maxLengthRule.value)) ? 0 : maxLengthRule.value;\n\n                    if (\"not include\" === maxLengthRule.exProperty)\n                        value = (value > 0) ? value -1 : 0;\n\n                    if (\"character\" == maxLengthRule.unit)\n                        schema.html(\"ng-maxlength=\\\"\" + value +\"\\\"\");\n                    else\n                        schema.html(\"ng-char-maxlength=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 处理minValueRule\n                 * @param minValueRule\n                 * @private\n                 */\n                function _minValueRule (minValueRule) {\n                    var value = isNaN(parseFloat(minValueRule.value)) || 0;\n\n                    if (\"not include\" === minValueRule.exProperty)\n                        value = (value > 0) ? value - 0.01 : 0;\n\n                    schema.html(\"ng-minvalue=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 处理maxValueRule\n                 * @param maxValueRule\n                 * @private\n                 */\n                function _maxValueRule (maxValueRule) {\n                    var value = isNaN(parseFloat(maxValueRule.value)) || 0;\n\n                    if (\"not include\" === maxValueRule.exProperty)\n                        value = (value > 0) ? value - 0.01 : 0;\n\n                    schema.html(\"ng-maxvalue=\\\"\" + value +\"\\\"\");\n\n                }\n\n                /**\n                 * 处理minInputNumRule\n                 * @param minInputNumRule\n                 * @private\n                 */\n                function _minInputNumRule (minInputNumRule) {\n                    var value = isNaN(parseInt(minInputNumRule.value)) || 0;\n\n                    if (\"not include\" === minInputNumRule.exProperty)\n                        value = (value > 0) ? value - 1 : 0;\n\n                    schema.html(\"ng-mininputnum=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 处理maxInputNumRule\n                 * @param maxInputNumRule\n                 * @private\n                 */\n                function _maxInputNumRule (maxInputNumRule) {\n                    var value = isNaN(parseInt(maxInputNumRule.value)) || 0;\n\n                    if (\"not include\" === maxInputNumRule.exProperty)\n                        value = (value > 0) ? value - 1 : 0;\n\n                    schema.html(\"ng-maxinputnum=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 如果checkbox被选中,返回被选中的value.\n                 * eg.[{new: true, pending: false, approved: true}] -> [new, approved]\n                 * @param object\n                 * @returns {*}\n                 */\n                //function _returnKey(object) {\n                //    var result = [];\n                //    angular.forEach(object, function(value, index) {\n                //        if (value) result.push(index);\n                //    });\n                //    return result;\n                //}\n            }\n        }\n    }]);\n\n/**\n * @Description:\n * 用于动态显示options\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-22\n */\n\nangular.module('voyageone.angular.directives.voption', [])\n    .directive('voption', [\"$templateCache\", \"$compile\", function ($templateCache, $compile) {\n\n        var templateKey_select = \"voyageone.angular.directives.optionSelect.tpl.html\";\n\n        // 显示成select样式\n        if (!$templateCache.get(templateKey_select)) {\n            $templateCache.put(templateKey_select,\n                '<select class=\"form-control\" ng-model=\"$$data.value.value\" ng-options=\"option.value as option.displayName for option in $$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');\n        }\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope, element) {\n\n                // 定义不同的展示种类\n                var typeList = {\n                    SINGLE_CHECK: \"SINGLECHECK\"\n                };\n\n                // 监视配置变动\n                scope.$watch('$$data', function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 根据type选择展示不同的控件\n                 */\n                function refresh() {\n                    var tempHtml;\n                    switch (scope.$$data.type) {\n                        case typeList.SINGLE_CHECK:\n                            tempHtml = $compile($templateCache.get(templateKey_select))(scope);\n                            break;\n                    }\n                    element.html(tempHtml);\n                }\n            }\n        };\n    }]);\n/**\n * @Description:\n * 用于分页\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-08\n */\n\nangular.module('voyageone.angular.directives.vpagination', [])\n    .directive('vpagination', [\"$templateCache\", \"$compile\", \"vpagination\", function ($templateCache, $compile, vpagination) {\n\n        var templateKey = \"voyageone.angular.directives.pagination.tpl.html\";\n        var templateKeyNoData = \"voyageone.angular.directives.paginationNoData.tpl.html\";\n\n        // 有数据分页样式\n        if (!$templateCache.get(templateKey)) {\n            $templateCache.put(templateKey,\n                '<div class=\"col-sm-2\">\\n' +\n                '    <div class=\"page-main form-inline\">{{\\'TXT_COM_SHOWING_NO\\' | translate}}&nbsp;<input class=\"text-center\" type=\"text\" ng-model=\"curr.pageNo\"/>&nbsp;/&nbsp;{{totalPages}}&nbsp;{{\\'TXT_COM_PAGE\\' | translate}}&nbsp;' +\n                '        <button class=\"btn btn-xs btn-default\" type=\"button\" ng-click=\"goPage(curr.pageNo)\" translate=\"BTN_GO\"></button>\\n' +\n                '    </div>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-7 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_COM_SHOWING\\' | translate}}&nbsp;{{curr.start}}-{{curr.end}}&nbsp;{{\\'TXT_COM_OF\\' | translate}}&nbsp;{{totalItems}}&nbsp{{\\'TXT_COM_ITEMS\\' | translate}}</small>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-3 text-right text-center-xs\"><div>' +\n                '    <ul class=\"pagination-sm m-t-none m-b pagination ng-isolate-scope ng-valid ng-dirty ng-valid-parse\">\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-first\"><a href ng-click=\"goPage(1)\" ng-disabled=\"curr.isFirst\">&laquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-prev\"><a href ng-click=\"goPage(curr.pageNo - 1)\" ng-disabled=\"curr.isFirst\">&lsaquo;</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowStart\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-repeat=\"page in curr.pages track by $index\" ng-class=\"{active: isCurr(page)}\" class=\"pagination-page\"><a href ng-click=\"goPage(page)\">{{page}}</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowEnd\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-next\"><a href ng-click=\"goPage(curr.pageNo + 1)\" ng-disabled=\"curr.isLast\">&rsaquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-last\"><a href ng-click=\"goPage(totalPages)\" ng-disabled=\"curr.isLast\">&raquo;</a></li>\\n' +\n                '    </ul>\\n' +\n                '</div>');\n        }\n\n        // 无数据分页样式\n        if (!$templateCache.get(templateKeyNoData)) {\n            $templateCache.put(templateKeyNoData,\n                '<div class=\"col-sm-7 col-sm-offset-2 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_COM_SHOWING\\' | translate}}&nbsp;0-0&nbsp;{{\\'TXT_COM_OF\\' | translate}}&nbsp;0&nbsp{{\\'TXT_COM_ITEMS\\' | translate}}</small>\\n' +\n                '</div>');\n        }\n\n        var defConfig = {curr: 1, total: 0, size: 20, showPageNo:5};\n\n        return {\n            restrict: \"AE\",\n            //templateUrl: templateKey,\n            replace: false,\n            scope: {\n                $$configNameForA: \"@vpagination\",\n                $$configNameForE: \"@config\"\n            },\n            link: function (scope, element) {\n\n                // 获取用户的config配置\n                var userConfigName = scope.$$configNameForA || scope.$$configNameForE;\n                var userConfig = scope.$parent.$eval(userConfigName);\n\n                // 将用户配置覆盖到默认配置后，在重新覆盖到用户配置上，用于补全配置属性\n                var userWithDefConfig = angular.extend({}, defConfig, userConfig);\n                scope.config = angular.extend(userConfig, userWithDefConfig);\n\n                var p = new vpagination(scope.config);\n\n                // 监视配置变动\n                scope.$parent.$watch(userConfigName, function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 跳转到指定页\n                 * @param num\n                 */\n                scope.goPage = function (num) {\n                    p.goPage(isNaN(Number(num)) ? 1 : Number(num));\n                };\n\n                /**\n                 * 判断是否是当前页\n                 * @param num\n                 * @returns {*|boolean}\n                 */\n                scope.isCurr = function (num) {\n                    return p.isCurr(num);\n                };\n\n                function refresh() {\n\n                    // 获取总页数\n                    scope.totalPages = p.getPageCount();\n                    // 获取总items数\n                    scope.totalItems = p.getTotal();\n                    // 获取当前页的信息\n                    scope.curr = p.getCurr();\n\n                    // 根据总数量显示不同的分页样式\n                    var tempHtml;\n                    if(p.getTotal() == 0) {\n                        tempHtml = $compile($templateCache.get(templateKeyNoData))(scope);\n                    } else {\n                        tempHtml = $compile($templateCache.get(templateKey))(scope);\n                    }\n                    element.html(tempHtml);\n\n                }\n            }\n        };\n    }]);\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\nangular.module('voyageone.angular.directives.validator', [])\n\n    // 定义ng-char-maxlength\n    .directive('ngCharMaxlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxlength = -1;\n                attr.$observe('ngCharMaxlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    maxlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxlength = function(modelValue, viewValue) {\n                    return (maxlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) <= maxlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-char-minlength\n    .directive('ngCharMinlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minlength = -1;\n                attr.$observe('ngCharMinlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    minlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minlength = function(modelValue, viewValue) {\n                    return (minlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) >= minlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-maxvalue\n    .directive('ngMaxvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        maxvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        maxvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        maxvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxvalue = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-minvalue\n    .directive('ngMinvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMinvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        minvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        minvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        minvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minvalue = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue >= minvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-maxinputnum\n    .directive('ngMaxinputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxinputvalue', function(value) {\n                    maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxinputnum = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-mininputnum\n    .directive('ngMininputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMininputnum', function(value) {\n                    minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.mininputnum = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length >= minvalue);\n                };\n            }\n        }\n    })\n;\n/**\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.dialogs', [])\n  .factory(\"$dialogs\", [\"$modal\", \"$filter\", \"$templateCache\", function ($modal, $filter, $templateCache) {\n\n    var templateName = 'voyageone.angular.factories.dialogs.tpl.html';\n    $templateCache.put(templateName, '<div class=\"vo_modal\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" ng-click=\"close()\"><span aria-hidden=\"true\"><i ng-click=\"close()\" class=\"fa fa-close\"></i></span></button><h4 class=\"modal-title\" ng-bind-html=\"title\"></h4></div><div class=\"modal-body wrapper-lg\"><div class=\"row\"><p ng-bind-html=\"content\"></p></div></div><div class=\"modal-footer\"><button class=\"btn btn-default btn-sm\" ng-if=\"!isAlert\" ng-click=\"close()\" translate=\"BTN_COM_CANCEL\"></button><button class=\"btn btn-vo btn-sm\" ng-click=\"ok()\" translate=\"BTN_COM_OK\"></button></div></div>');\n\n    function tran(translationId, values) {\n      return $filter('translate')(translationId, values);\n    }\n\n    return function (options) {\n\n      if (!_.isObject(options)) throw \"arg type must be object\";\n\n      var values;\n\n      if (_.isObject(options.content)) {\n        values = options.content.values;\n        options.content = options.content.id;\n      }\n\n      options.title = tran(options.title);\n      options.content = tran(options.content, values);\n\n      var modalInstance = $modal.open({\n        templateUrl: templateName,\n        controller: [\"$scope\", function (scope) {\n          _.extend(scope, options);\n        }],\n        size: 'md'\n      });\n\n      options.close = function () {\n        modalInstance.dismiss('close')\n      };\n\n      options.ok = function () {\n        modalInstance.close('');\n      };\n\n      return modalInstance;\n    };\n  }])\n\n  .factory(\"alert\", [\"$dialogs\", function ($dialogs) {\n    return function (content, title) {\n      return $dialogs({\n        title: title || 'TXT_COM_ALERT',\n        content: content,\n        isAlert: true\n      });\n    };\n  }])\n\n  .factory(\"confirm\", [\"$dialogs\", function vConfirm($dialogs) {\n    return function (content, title) {\n      return $dialogs({\n        title: title || 'TXT_COM_CONFIRM',\n        content: content,\n        isAlert: false\n      });\n    };\n  }]);\n/**\n * @Date:    2015-11-16 20:51:05\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.factories.interceptor', [])\n  .factory('interceptorFactory', InterceptorFactory)\n  .config([\"$httpProvider\", function ($httpProvider) {\n    $httpProvider.interceptors.push('interceptorFactory');\n  }]);\n\nfunction InterceptorFactory() {\n\n  // 未知的系统错误\n  var UNKNOWN_CODE = \"5\";\n  // 和 JAVA 同步,系统通知前端自动跳转的特殊代码\n  var CODE_SYS_REDIRECT = \"SYS_REDIRECT\";\n  // 和 JAVA 同步,回话过期的信息\n  var MSG_TIMEOUT = \"300001\";\n\n  /**\n   * 对系统自动跳转的响应,执行跳转\n   * @param {{code:string,redirectTo:string}} res\n   * @returns {boolean}\n   */\n  function autoRedirect(res) {\n    if (res.code != CODE_SYS_REDIRECT) {\n      return false;\n    }\n    // 如果跳转数据异常,则默认跳转登陆页\n    location.href = res.redirectTo || '/login.html';\n    return true;\n  }\n\n  /**\n   * 对会话超时和未登录进行特殊处理\n   * @param {{code:string}} res\n   * @returns {boolean}\n   */\n  function sessionTimeout(res) {\n    if (res.code != MSG_TIMEOUT) {\n      return false;\n    }\n    // 会话超时,默认跳转到登陆页\n    location.href = '/login.html';\n    return true;\n  }\n\n  /**\n   * 处理位置的异常\n   * @param response\n   */\n  function unknownException(response) {\n\n    if (response.data.code !== UNKNOWN_CODE) {\n      return;\n    }\n\n    window.$$lastUnknow = response;\n    console.error('Server throw unknown exceptio. Message:', response.data.message);\n  }\n\n  return {\n    request: function (config) {\n      return config;\n    },\n    response: function (res) {\n      var result = res.data;\n\n      if (autoRedirect(result) || sessionTimeout(result)) {\n        return res;\n      }\n\n      unknownException(res);\n\n      return res;\n    },\n    requestError: function (config) {\n      return config;\n    },\n    responseError: function (res) {\n    }\n  };\n}\n/**\n * Notify 的可用参数\n * {\n *    // whether to hide the notification on click\n *    clickToHide: true,\n *    // whether to auto-hide the notification\n *    autoHide: true,\n *    // if autoHide, hide after milliseconds\n *    autoHideDelay: 5000,\n *    // show the arrow pointing at the element\n *    arrowShow: true,\n *    // arrow size in pixels\n *    arrowSize: 5,\n *    // position defines the notification position though uses the defaults below\n *    position: '...',\n *    // default positions\n *    elementPosition: 'bottom left',\n *    globalPosition: 'top right',\n *    // default style\n *    style: 'bootstrap',\n *    // default class (string or [string])\n *    className: 'error',\n *    // show animation\n *    showAnimation: 'slideDown',\n *    // show animation duration\n *    showDuration: 400,\n *    // hide animation\n *    hideAnimation: 'slideUp',\n *    // hide animation duration\n *    hideDuration: 200,\n *    // padding between element and notification\n *    gap: 2\n * }\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.notify', [])\n  .factory('notify', [\"$filter\", function ($filter) {\n    function notify(options) {\n\n      if (!options) return;\n      if (_.isString(options)) options = {message: options};\n      if (!_.isObject(options)) return;\n\n      var values;\n\n      // 为 translate 的格式化提供支持，检测类型并转换\n      if (_.isObject(options.message)) {\n\n        values = options.message.values;\n        options.message = options.message.id;\n      }\n\n      options.message = $filter('translate')(options.message, values);\n\n      return $.notify(options.message, options);\n    }\n\n    notify.success = function (message) {\n      return notify({message: message, className: \"success\"});\n    };\n\n    notify.warning = function (message) {\n      return notify({message: message, className: \"warning\"});\n    };\n\n    notify.danger = function (message) {\n      return notify({message: message, className: \"danger\"});\n    };\n\n    return notify;\n  }]);\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\n\nangular.module('voyageone.angular.factories.schema', [])\n\n    // 定义schemaHeaderFactory\n    .factory('schemaHeaderFactory', function () {\n        return function (config) {\n            var _schemaHeaderInfo = config ? config : {\n                isRequired: false,\n                //size: null,\n                isMultiComplex: false,\n                isComplex: false,\n                tipMsg: []\n            };\n\n            this.isRequired = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isRequired = value : _schemaHeaderInfo.isRequired;\n            };\n\n            //this.size = function (value) {\n            //    return value !== undefined ? _schemaHeaderInfo.size = value : _schemaHeaderInfo.size;\n            //};\n\n            this.isComplex = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isComplex = value : _schemaHeaderInfo.isComplex;\n            };\n\n            this.isMultiComplex = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isMultiComplex = value : _schemaHeaderInfo.isMultiComplex;\n            };\n\n            this.tipMsg = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.tipMsg.push(value) : _schemaHeaderInfo.tipMsg;\n            };\n\n            this.schemaHearInfo = _schemaHeaderInfo;\n        }\n    })\n\n    // 定义schemaFactory\n    .factory('schemaFactory', function () {\n\n        return function (config) {\n\n            var _schemaInfo = config ? config : {\n                type: null,\n                //size: null,\n                rowNum: null,\n                isRequired: false,\n                checkValues: [],\n                tipMsg: [],\n                html: []\n            };\n\n            this.type = function (value) {\n                return value !== undefined ? _schemaInfo.type = value : _schemaInfo.type;\n            };\n\n            //this.size = function (value) {\n            //    return value !== undefined ? _schemaInfo.size = value : _schemaInfo.size;\n            //};\n\n            this.html = function (value) {\n                return value !== undefined ? _schemaInfo.html.push(value) : htmlToString(_schemaInfo.html);\n            };\n\n            this.isRequired = function (value) {\n                return value !== undefined ? _schemaInfo.isRequired = value : _schemaInfo.isRequired;\n            };\n\n            this.rowNum = function (value) {\n                return value !== undefined ? _schemaInfo.rowNum = value : _schemaInfo.rowNum;\n            };\n\n            this.tipMsg = function (value) {\n                return value !== undefined ? _schemaInfo.tipMsg.push(value) : _schemaInfo.tipMsg;\n            };\n\n            this.checkValues = function (value) {\n                return value !== undefined ? _schemaInfo.checkValues.push(value) : _schemaInfo.checkValues;\n            };\n\n            this.schemaInfo = function () {\n                return _schemaInfo;\n            };\n\n            function htmlToString (htmls) {\n                var result = \"\";\n                angular.forEach(htmls, function (html) {\n                    result += \" \" + html + \" \";\n                });\n                return result;\n            }\n        };\n    });\n/**\n * @User: Edward\n * @Version: 2.0.0, 2015-12-09\n */\n\nangular.module('voyageone.angular.factories.vpagination', [])\n    .factory('vpagination', function () {\n\n        /**\n         * 创建一个分页服务\n         * @param {{ curr: number, size: number, total: number, fetch: function }} config 配置\n         */\n        return function (config) {\n\n            var _pages, _lastTotal = 0, _showPages = [];\n\n            /**\n             * 返回总件数\n             * @returns {*}\n             */\n            this.getTotal = function () {\n                return config.total;\n            };\n\n            /**\n             * 返回当前页的开始和结束号\n             * @returns {{start: number, end: number}}\n             */\n            this.getCurr = function () {\n                return {\n                    pageNo: curr(),\n                    start: getCurrStartItems(),\n                    end: getCurrEndItems(),\n                    isFirst: isFirst(),\n                    isLast: isLast(),\n                    pages: createShowPages(),\n                    isShowStart: isShowStart(),\n                    isShowEnd: isShowEnd()\n                }\n            };\n\n            // 跳转到指定页\n            this.goPage = load;\n            // 返回总页数\n            this.getPageCount = getPages;\n            // 是否是当前页\n            this.isCurr = isCurr;\n\n            /**\n             * 跳转到指定页\n             * @param {number} page 页号\n             */\n            function load(page) {\n                page = page || config.curr;\n\n                if (page < 1 || page > getPages() || isCurr(page)) return;\n\n                config.curr = page;\n\n                config.fetch(page, config.size);\n            }\n\n            /**\n             * 初始化page列表\n             * @returns {Array}\n             */\n            function createShowPages () {\n\n                var minPage, maxPage, _showPages= [];\n                if (config.curr < config.showPageNo) {\n                    minPage = 1;\n                    if(_pages <= config.showPageNo) maxPage = _pages;\n                    else maxPage = config.showPageNo;\n                } else if (config.curr + 2 > _pages) {\n                    minPage = _pages + 1 - config.showPageNo;\n                    maxPage = _pages;\n                } else {\n                    minPage = config.curr + 3 - config.showPageNo;\n                    maxPage = config.curr + 2;\n                }\n\n                // 按照指定数量创建按钮\n                for (var i =  minPage; i <= maxPage; i++) {\n                    //scope.pages.push({num: 1, active: \"\", show: false});\n                    _showPages.push(i);\n                }\n\n                return _showPages;\n            }\n\n            /**\n             * 获取当前总页数\n             * @returns {number}\n             */\n            function getPages() {\n                if (_lastTotal != config.total) {\n                    _pages = parseInt(config.total / config.size) + ((config.total % config.size) > 0 ? 1 : 0);\n                    _lastTotal = config.total;\n                }\n                return _pages;\n            }\n\n            /**\n             * 返回当前页的起始号\n             * @returns {number}\n             */\n            function getCurrStartItems() {\n                return (config.curr - 1) * config.size + 1\n            }\n\n            /**\n             * 返回当前页的结束号\n             * @returns {number}\n             */\n            function getCurrEndItems() {\n                var currEndItems = config.curr * config.size;\n                return currEndItems <= config.total ? currEndItems : config.total;\n\n            }\n\n            /**\n             * 是否是最后一页\n             * @returns {boolean}\n             */\n            function isLast() {\n                return config.curr == getPages();\n            }\n\n            /**\n             * 是否是第一页\n             * @returns {boolean}\n             */\n            function isFirst() {\n                return config.curr == 1;\n            }\n\n            /**\n             * 是否是当前页\n             * @param page 页码\n             * @returns {boolean}\n             */\n            function isCurr(page) {\n                return config.curr == page;\n            }\n\n            function curr() {\n                return config.curr;\n            }\n\n            /**\n             * 是否显示开始...项目\n             * @returns {boolean}\n             */\n            function isShowStart () {\n                _showPages = createShowPages();\n                return _showPages[0] > 1\n            }\n\n            /**\n             * 是否显示结束...项目\n             * @returns {boolean}\n             */\n            function isShowEnd () {\n                _showPages = createShowPages();\n                return _showPages[_showPages.length - 1] < _pages;\n            }\n\n        };\n    });\n/**\n * @description\n *\n * 自动创建基于地址定义的数据访问 service.\n * 传入的定义必须是 {object}, 并且至少有 root 属性\n *\n * @User: Jonas\n * @Date: 2015-12-10 19:32:37\n * @Version: 2.0.0\n */\n\n//@Skip\nangular.module('voyageone.angular.vresources', [])\n  .provider('$vresources', [\"$provide\", function ($provide) {\n\n    /**\n     * @description 构建请求地址的 url\n     * @param {string} root 请求的根路径\n     * @param {string} action 请求的名称\n     * @returns {string}\n     */\n    function getActionUrl(root, action) {\n      return root + (root.lastIndexOf('/') === root.length - 1 ? '' : '/') + action;\n    }\n\n    /**\n     * 闭包声明一个数据访问的 Service\n     * @param {string} name Service 的名称\n     * @param {object} actions 方法和地址定义\n     * @param {AjaxService} ajaxService 封装的 ajax 发送服务\n     */\n    function closureDataService(name, actions, ajaxService) {\n      /**\n       * @description 与 actions 一同闭包的构造函数\n       * @constructor\n       */\n      function DataResource() {\n        if (!actions) {\n          return;\n        }\n\n        if (typeof actions !== \"object\") {\n          console.log(\"Failed to new DataResource: [\" + actions + \"] is not a object\");\n          return;\n        }\n\n        if (!actions.root) {\n          console.log(\"Failed to new DataResource: no root prop\" + (JSON && JSON.stringify ? \": \" + JSON.stringify(actions) : \"\"));\n          return;\n        }\n\n        // 遍历配置\n        for (var name in actions) {\n          // 不对 root 进行创建\n          if (name === \"root\") continue;\n          // 额外的检查\n          if (actions.hasOwnProperty(name)) {\n            // 闭包创建函数\n            this[name] = (function (actionUrl) {\n              return function (data) {\n                return ajaxService.post(actionUrl, data);\n              };\n            })(getActionUrl(actions.root, actions[name]));\n          }\n        }\n      }\n\n      $provide.service(name, DataResource);\n    }\n\n    this.$get = [\"ajaxService\", function (ajaxService) {\n\n      return {\n        register: function (name, actions) {\n\n          if (!actions) return;\n\n          if (typeof actions !== 'object') return;\n\n          // 如果有 root 这个属性,就创建 service\n          if (actions.root) {\n            closureDataService(name, actions, ajaxService);\n            return;\n          }\n\n          // 否则继续访问子属性\n          for (var childName in actions) {\n            // 额外的检查\n            if (actions.hasOwnProperty(childName)) {\n\n              this.register(childName, actions[childName]);\n            }\n          }\n        }\n      };\n    }];\n  }])\n\n  .run([\"$vresources\", \"$actions\", function ($vresources, $actions) {\n    $vresources.register(null, $actions);\n  }]);\n/**\n * @Date:    2015-11-16 18:48:29\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.ajax', [])\n  .service('$ajax', $Ajax)\n  .service('ajaxService', AjaxService);\n\nfunction $Ajax($http, blockUI, $q) {\n  this.$http = $http;\n  this.blockUI = blockUI;\n  this.$q = $q;\n}\n$Ajax.$inject = [\"$http\", \"blockUI\", \"$q\"];\n$Ajax.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n  this.$http.post(url, data).then(function (response) {\n    var res = response.data;\n    if (!res) {\n      alert('相应结果不存在?????');\n      defer.reject(null);\n      return;\n    }\n    if (res.message || res.code) {\n      defer.reject(res);\n      return;\n    }\n    defer.resolve(res);\n  }, function (response) {\n    defer.reject(null, response);\n  });\n  return defer.promise;\n};\n\nfunction AjaxService($q, $ajax, messageService) {\n  this.$q = $q;\n  this.$ajax = $ajax;\n  this.messageService = messageService;\n}\nAjaxService.$inject = [\"$q\", \"$ajax\", \"messageService\"];\nAjaxService.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n\n  this.$ajax.post(url, data).then(function(res) {\n    // 成功\n    defer.resolve(res);\n    return res;\n  }, (function (_this) {\n    // 失败\n    return function(res) {\n      _this.messageService.show(res);\n      defer.reject(res);\n      return res;\n    };\n  })(this));\n\n  return defer.promise;\n};\n/**\n * @Date:    2015-11-16 20:30:37\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.cookie', [])\n  .service('cookieService', CookieService);\n\nvar keys = {\n  language: 'voyageone.user.language',\n  company: 'voyageone.user.company',\n  channel: 'voyageone.user.channel',\n  application: \"voyageone.user.application\",\n};\n\nfunction gentProps(key) {\n  return function(val) {\n    if (arguments.length === 1) {\n      return this.set(key, val);\n    } else if (arguments.length > 1) {\n      return this.set(key, arguments);\n    }\n    return this.get(key);\n  };\n}\n\nfunction CookieService($cookieStore) {\n  this.$cookieStore = $cookieStore;\n}\nCookieService.$inject = [\"$cookieStore\"];\n\nCookieService.prototype.get = function(key) {\n  var result = this.$cookieStore.get(key);\n  return result == undefined || result == null ? \"\" : this.$cookieStore.get(key);\n};\n\nCookieService.prototype.set = function(key, value) {\n  return this.$cookieStore.put(key, value);\n};\n\nCookieService.prototype.language = gentProps(keys.language);\n\nCookieService.prototype.company = gentProps(keys.company);\n\nCookieService.prototype.channel = gentProps(keys.channel);\n\nCookieService.prototype.application = gentProps(keys.application);\n\nCookieService.prototype.removeAll = function () {\n  this.$cookieStore.remove(keys.language);\n  this.$cookieStore.remove(keys.company);\n  this.$cookieStore.remove(keys.channel);\n  this.$cookieStore.remove(keys.application);\n};\n\n/**\n * 对后台的信息进行自动处理\n * @Date:    2015-11-19 14:47:23\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.message', [])\n  .service('messageService', MessageService);\n\n// 同步,DisplayType 枚举\nvar DISPLAY_TYPES = {\n  /**\n   * 弹出提示\n   */\n  ALERT: 1,\n  /**\n   * 顶端弹出自动关闭\n   */\n  NOTIFY: 2,\n  /**\n   * 右下弹出自动关闭\n   */\n  POP: 3,\n  /**\n   * 用户自定义处理\n   */\n  CUSTOM: 4\n};\n\nfunction MessageService(alert, confirm, notify) {\n  this.alert = alert;\n  this.confirm = confirm;\n  this.notify = notify;\n}\nMessageService.$inject = [\"alert\", \"confirm\", \"notify\"];\n\nMessageService.prototype = {\n  /**\n   * 根据类型自动显示信息\n   * @param {{displayType:Number, message:String}} res\n   */\n  show: function(res) {\n\n    var displayType = res.displayType;\n    var message = res.message;\n\n    switch (displayType) {\n      case DISPLAY_TYPES.ALERT:\n        this.alert(message);\n        break;\n      case DISPLAY_TYPES.NOTIFY:\n        this.notify(message);\n        break;\n      case DISPLAY_TYPES.POP:\n        this.notify({message: message, position: 'right bottom'});\n        break;\n    }\n  }\n};\n/**\n * @Date:    2015-11-19 14:26:43\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.permission', [])\n  .service('permissionService', PermissionService);\n\nfunction PermissionService($rootScope) {\n  this.$rootScope = $rootScope;\n  this.permissions = [];\n}\nPermissionService.$inject = [\"$rootScope\"];\n\nPermissionService.prototype = {\n  /**\n   * set the action permissions.\n   * @param permissions\n   */\n  setPermissions: function(permissions) {\n    this.permissions = permissions;\n    this.$rootScope.$broadcast('permissionsChanged');\n  },\n  /**\n   * check the permission has been in action permissions.\n   * @param permission\n   * @returns {boolean|*}\n   */\n  has: function(permission) {\n    return _.contains(this.permissions, permission.trim());\n  }\n};\n\n/**\n * @Date:    2015-11-19 14:35:25\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.translate', [])\n  .service('translateService', TranslateService);\n\nfunction TranslateService($translate) {\n  this.$translate = $translate;\n}\nTranslateService.$inject = [\"$translate\"];\n\nTranslateService.prototype = {\n  languages: {\n    en: \"en\",\n    zh: \"zh\"\n  },\n  /**\n   * set the web side language type.\n   * @param key\n   */\n  setLanguage: function(language) {\n    if (!_.contains(this.languages, language)) {\n      language = this.getBrowserLanguage();\n    }\n    this.$translate.use(language);\n    return language;\n  },\n  /**\n   * get the browser language type.\n   * @returns {string}\n   */\n  getBrowserLanguage: function() {\n    var currentLang = navigator.language;\n    if (!currentLang)\n      currentLang = navigator.browserLanguage;\n    return currentLang.substr(0, 2);\n  }\n};\nangular.module(\"voyageone.angular.controllers\",[\"voyageone.angular.controllers.datePicker\",\"voyageone.angular.controllers.selectRows\",\"voyageone.angular.controllers.showPopover\"]);\nangular.module(\"voyageone.angular.directives\",[\"voyageone.angular.directives.dateModelFormat\",\"voyageone.angular.directives.enterClick\",\"voyageone.angular.directives.fileStyle\",\"voyageone.angular.directives.ifNoRows\",\"voyageone.angular.directives.uiNav\",\"voyageone.angular.directives.schema\",\"voyageone.angular.directives.voption\",\"voyageone.angular.directives.vpagination\",\"voyageone.angular.directives.validator\"]);\nangular.module(\"voyageone.angular.factories\",[\"voyageone.angular.factories.dialogs\",\"voyageone.angular.factories.interceptor\",\"voyageone.angular.factories.notify\",\"voyageone.angular.factories.schema\",\"voyageone.angular.factories.vpagination\"]);\nangular.module(\"voyageone.angular.services\",[\"voyageone.angular.services.ajax\",\"voyageone.angular.services.cookie\",\"voyageone.angular.services.message\",\"voyageone.angular.services.permission\",\"voyageone.angular.services.translate\"]);\nreturn angular.module(\"voyageone.angular\",[\"voyageone.angular.controllers\",\"voyageone.angular.directives\",\"voyageone.angular.factories\",\"voyageone.angular.services\"])});","/**\n * @Description:\n * 弹出日期控件\n * @User:    Edward\n * @Version: 0.2.0, 2015-10-10\n */\n\nangular.module('voyageone.angular.controllers.datePicker', [])\n    .controller('datePickerCtrl', function ($scope) {\n        var vm = this;\n\n        vm.formats = ['yyyy-MM-dd', 'yyyy-MM-dd HH:mm:ss'];\n\n        $scope.formatDate = vm.formats[0];\n        $scope.formatDateTime = vm.formats[1];\n\n        $scope.open = open;\n\n        function open($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n\n            $scope.opened = true;\n        }\n    });","/**\n * @Description:\n * select tables items\n * @User: linanbin\n * @Version: 2.0.0, 15/12/16\n */\n\nangular.module('voyageone.angular.controllers.selectRows', [])\n    .controller('selectRowsCtrl', function ($scope) {\n\n        $scope.selectAll = selectAll;\n        $scope.selectOne = selectOne;\n\n        /**\n         * 全部选中当前页数据\n         * @param objectList\n         */\n        function selectAll(objectList) {\n\n            objectList.selAllFlag = !objectList.selAllFlag;\n\n            // 循环处理全选中的数据\n            angular.forEach(objectList.currPageRows, function (object) {\n                if(objectList.selFlag.hasOwnProperty(object.id)) {\n\n                    // 单签页面所有产品选中flag被标示\n                    objectList.selFlag[object.id] = objectList.selAllFlag;\n\n                    if (objectList.hasOwnProperty('selList')) {\n                        if (objectList.selAllFlag && objectList.selList.indexOf(object) < 0) {\n                            objectList.selList.push(object);\n                        } else if (!objectList.selAllFlag && objectList.selList.indexOf(object) > -1) {\n                            objectList.selList.splice(objectList.selList.indexOf(object), 1);\n                        }\n                    }\n                }\n            });\n        }\n\n        /**\n         * 选中单条数据\n         * @param currentId\n         * @param objectList\n         */\n        function selectOne(currentId, objectList) {\n            currentId = parseInt(currentId);\n            if (objectList.hasOwnProperty('selList')) {\n\n                angular.forEach(objectList.selList, function(object) {\n\n                    if (_.isEqual(object.id, currentId)) {\n                        if (objectList.selList.indexOf(object) > -1) {\n                            objectList.selList.splice(objectList.selList.indexOf(object), 1);\n                        } else {\n                            objectList.selList.push(object);\n                        }\n                    }\n                });\n            }\n\n            objectList.selAllFlag = true;\n            angular.forEach(objectList.currPageRows, function(object) {\n                if (!objectList.selFlag[object.id]) {\n                    objectList.selAllFlag = false;\n                }\n            })\n        }\n    });","/**\n * @Description:\n * 显示html的popover的共同方法\n * @User: linanbin\n * @Version: 2.0.0, 15/12/14\n */\n\nangular.module('voyageone.angular.controllers.showPopover', [])\n    .controller('showPopoverCtrl', function ($scope) {\n\n        $scope.showInfo = showInfo;\n\n        function showInfo(values) {\n            var tempHtml = \"\";\n\n            angular.forEach(values, function (data, index) {\n                tempHtml += data;\n                if (index !== values.length) {\n                    tempHtml += \"<br>\";\n                }\n            });\n            return tempHtml\n        }\n    });\n","/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.dateModelFormat', [])\n    .directive('dateModelFormat', function ($filter) {\n        return {\n            restrict: \"A\",\n            require: 'ngModel',\n            link: function (scope, elem, attrs, ngModel) {\n                ngModel.$parsers.push(function (viewValue) {\n                    return $filter('date')(viewValue, attrs.dateModelFormat || 'yyyy-MM-dd HH:mm:ss');\n                });\n            }\n        };\n    });\n","/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.directives.enterClick', [])\n  .directive('enterClick', function() {\n    return {\n      restrict: \"A\",\n      link: function(scope, elem, attr) {\n        $(elem).keyup(function(e) {\n          if (e.keyCode !== 13) return;\n\n          var selectExp = attr.enterClick;\n\n          var targetElem, handler = function() {\n            targetElem.click();\n          };\n\n          try {\n            targetElem = angular.element(selectExp);\n          } catch (e) {\n            targetElem = null\n          }\n\n          if (!targetElem || !targetElem.length) {\n            // 如果取不到元素，则尝试作为表达式执行\n            handler = function() {\n              scope.$eval(selectExp);\n            };\n          } else if (targetElem.attr(\"disabled\")) {\n            // 如果元素存在，但是是禁用状态的，放弃执行\n            return;\n          }\n\n          handler();\n        });\n      }\n    };\n  });\n","/**\n * @Description:\n * 引入对上传框插件 fileStyle 的指令支持\n * @Date:    2015-11-19 17:35:22\n * @User:    Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.fileStyle', [])\n  .directive('fileStyle', function () {\n    return {\n      restrict: 'A',\n      controller: [\"$scope\", \"$element\", function ($scope, $element) {\n        var options = $element.data();\n        // old usage support\n        options.classInput = $element.data('classinput') || options.classInput;\n        if ($element.filestyle) {\n          $element.filestyle(options);\n        }\n      }]\n    };\n  });","/**\n * @Description:\n * table中无数据范围的数据\n * @User: linanbin\n * @Version: 2.0.0, 15/12/11\n */\n\nangular.module('voyageone.angular.directives.ifNoRows', [])\n    .directive('ifNoRows', function ($templateCache, $compile) {\n\n        var tempNoDataKey = \"voyageone.angular.directives.ifNoRows.tpl.html\";\n\n        // 没有数据显示警告\n        if (!$templateCache.get(tempNoDataKey)) {\n            $templateCache.put(tempNoDataKey,\n            '<div class=\"text-center text-hs\" id=\"noData\">\\n' +\n            '    <h4 class=\"text-vo\"><i class=\"icon fa fa-warning\"></i>&nbsp;{{\\'TXT_COM_WARNING\\' | translate}}</h4>\\n' +\n            '{{\\'TXT_COM_MSG_NO_DATE\\' | translate}}' +\n            '</dv>');\n        }\n\n        return {\n            restrict: \"A\",\n            replace: false,\n            scope: {\n                $$data: \"@ifNoRows\"\n            },\n            link: function (scope, element) {\n\n                scope.$parent.$watch(scope.$$data, function () {\n\n                    // 如果数据不存在则显示警告信息\n                    if(scope.$parent.$eval(scope.$$data)  == 0) {\n                        element.find(\"#noData\").remove();\n                        element.append($compile($templateCache.get(tempNoDataKey))(scope));\n                    } else {\n                        element.find(\"#noData\").remove();\n                    }\n                })\n            }\n        };\n    });\n","/**\n * @Description:\n * 用于菜单目录二级展开\n * @User:    Jonas\n * @Version: 0.2.0, 2015-12-07\n */\n\nangular.module('voyageone.angular.directives.uiNav', [])\n    .directive('uiNav', function () {\n\n        return {\n            restrict: 'AC',\n            link: function(scope, el) {\n                var _window = $(window),\n                    _mb = 768,\n                    wrap = $('.app-aside'),\n                    next,\n                    backdrop = '.dropdown-backdrop';\n                // unfolded\n                el.on('click', 'a', function(e) {\n                    next && next.trigger('mouseleave.nav');\n                    var _this = $(this);\n                    _this.parent().siblings( \".active\" ).toggleClass('active');\n                    _this.next().is('ul') &&  _this.parent().toggleClass('active') &&  e.preventDefault();\n                    // mobile\n                    _this.next().is('ul') || ( ( _window.width() < _mb ) && $('.app-aside').removeClass('show off-screen') );\n                });\n\n                // folded & fixed\n                el.on('mouseenter', 'a', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                    if ( !$('.app-aside-fixed.app-aside-folded').length || ( _window.width() < _mb ) || $('.app-aside-dock').length) return;\n                    var _this = $(e.target)\n                        , top\n                        , w_h = $(window).height()\n                        , offset = 50\n                        , min = 150;\n\n                    !_this.is('a') && (_this = _this.closest('a'));\n                    if( _this.next().is('ul') ){\n                        next = _this.next();\n                    }else{\n                        return;\n                    }\n\n                    _this.parent().addClass('active');\n                    top = _this.parent().position().top + offset;\n                    next.css('top', top);\n                    if( top + next.height() > w_h ){\n                        next.css('bottom', 0);\n                    }\n                    if(top + min > w_h){\n                        next.css('bottom', w_h - top - offset).css('top', 'auto');\n                    }\n                    next.appendTo(wrap);\n\n                    next.on('mouseleave.nav', function(e){\n                        $(backdrop).remove();\n                        next.appendTo(_this.parent());\n                        next.off('mouseleave.nav').css('top', 'auto').css('bottom', 'auto');\n                        _this.parent().removeClass('active');\n                    });\n\n                    $('.smart').length && $('<div class=\"dropdown-backdrop\"/>').insertAfter('.app-aside').on('click', function(next){\n                        next && next.trigger('mouseleave.nav');\n                    });\n\n                });\n\n                wrap.on('mouseleave', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                });\n            }\n        };\n    });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/24\n */\n\nangular.module('voyageone.angular.directives.schema', [])\n    // 定义fieldTypes\n    .constant('fieldTypes', {\n        INPUT: \"INPUT\",\n        DATE: \"DATE\",\n        DATETIME: \"DATETIME\",\n        TEXTAREA: \"TEXTAREA\",\n        SINGLE_CHECK: \"SINGLECHECK\",// 在complex中的显示select,以外的默认显示singlecheck,如果用户觉得select显示不方便,就将该field的type改成radio\n        RADIO: \"RADIO\",\n        MULTI_INPUT: \"MULTIINPUT\", // 没有被使用\n        MULTI_CHECK: \"MULTICHECK\",\n        COMPLEX: \"COMPLEX\", // TODO\n        MULTI_COMPLEX: \"MULTICOMPLEX\",\n        LABEL: \"LABEL\"  // 可以不显示\n    })\n    // 定义ruleTypes\n    .constant('ruleTypes', {\n        VALUE_TYPE_RULE: \"valueTypeRule\",\n        REQUIRED_RULE: \"requiredRule\",\n        DISABLE_RULE: \"disableRule\",\n        READ_ONLY_RULE: \"readOnlyRule\",\n        REGEX_RULE: \"regexRule\",\n        SET_RULE: \"setRule\", // TODO 暂时不知道怎么用\n        TIP_RULE: \"tipRule\", // TODO 不需要处理\n        DEV_TIP_RULE: \"devTipRule\", // 不需要处理\n        MIN_LENGTH_RULE: \"minLengthRule\",\n        MAX_LENGTH_RULE: \"maxLengthRule\",\n        MIN_VALUE_RULE: \"minValueRule\",\n        MAX_VALUE_RULE: \"maxValueRule\",\n        MIN_INPUT_NUM_RULE: \"minInputNumRule\",\n        MAX_INPUT_NUM_RULE: \"maxInputNumRule\",\n        MIN_DECIMAL_DIGITS_RULE: \"minDecimalDigitsRule\", // TODO\n        MAX_DECIMAL_DIGITS_RULE: \"maxDecimalDigitsRule\", // TODO\n        MIN_TARGET_SIZE_RULE: \"minTargetSizeRule\", // TODO\n        MAX_TARGET_SIZE_RULE: \"maxTargetSizeRule\", // TODO\n        MIN_IMAGE_SIZE_RULE: \"minImageSizeRule\", // TODO\n        MAX_IMAGE_SIZE_RULE: \"maxImageSizeRule\" // TODO\n    })\n    // 定义valueTypes\n    .constant('valueTypes', {\n        TEXT: \"text\",\n        DECIMAL: \"decimal\",\n        INTEGER: \"integer\",\n        LONG: \"long\",\n        DATE: \"date\",\n        TIME: \"time\",\n        URL: \"url\",\n        TEXTAREA: \"textarea\",\n        HTML: \"html\"\n    })\n\n    .directive('schemaHeader', function ($templateCache, schemaHeaderFactory, fieldTypes, ruleTypes, valueTypes) {\n\n        // 定义header\n        var templateKey_header = \"voyageone.angular.directives.schemaHeader.tpl.html\";\n        if (!$templateCache.get(templateKey_header)) {$templateCache.put(templateKey_header\n            , '<div class=\"form-group\">' +\n              '  <label class=\"col-sm-2 control-label\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" ng-bind=\"$$data.name\"></label>' +\n              '  <div class=\"col-sm-8\" ng-class=\"{\\'hierarchy_main modal-open\\' : showHtmlData.isMultiComplex, \\'hierarchy_main\\': showHtmlData.isComplex}\" ng-transclude></div>' +\n              '  <div class=\"col-sm-2\" ng-if=\"showHtmlData.isMultiComplex\"><button class=\"btn btn-success\" ng-click=\"addField($$data)\"><i class=\"fa fa-plus\"></i>{{\\'BTN_COM_ADD\\' | translate}}</button></div>' +\n              '  <div class=\"row\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><div class=\"col-sm-8 col-sm-offset-2 text-warnings\"><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div></div>' +\n              '</div>');}\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            transclude: true,\n            templateUrl: templateKey_header,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope) {\n                var schemaHeader = new schemaHeaderFactory();\n\n                _returnType (scope.$$data.type);\n                _operateRule (scope.$$data.rules);\n                scope.showHtmlData = angular.copy(schemaHeader.schemaHearInfo);\n\n                /**\n                 * 设置multi complex添加一条新记录\n                 * @param data\n                 */\n                scope.addField= function (data) {\n                    var newFieldMap = {};\n                    angular.forEach(data.fields, function (field) {\n                        eval(\"newFieldMap.\" + field.id + \"=field\");\n                    });\n\n                    scope.$$data.values.push({fieldMap: angular.copy(newFieldMap)});\n                };\n\n                /**\n                 * 返回需要展示的页面样式\n                 * @param type\n                 * @param valueTypeRule\n                 * @private\n                 */\n                function _returnType (type) {\n\n                    switch (type) {\n                        case fieldTypes.MULTI_COMPLEX:\n                            schemaHeader.isMultiComplex(true);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            schemaHeader.isComplex(true);\n                            break;\n                    }\n                }\n\n                /**\n                 * 处理rules\n                 * @param rules\n                 * @private\n                 */\n                function _operateRule (rules) {\n                    angular.forEach(rules, function (rule) {\n                        switch (rule.name) {\n                            case ruleTypes.REQUIRED_RULE:\n                                _requiredRule(rule);\n                                break;\n                            case ruleTypes.TIP_RULE:\n                                _tipRule(rule);\n                                break;\n                        }\n                    })\n\n                }\n\n                /**\n                 * 处理requiredRule\n                 * @param requiredRule\n                 * @private\n                 */\n                function _requiredRule (requiredRule) {\n                    if (\"true\" == requiredRule.value) {\n                        schemaHeader.isRequired(true);\n                    }\n                }\n\n                /**\n                * 处理tipRule\n                * @param tipRule\n                * @private\n                */\n                function _tipRule (tipRule) {\n                    schemaHeader.tipMsg(tipRule.value);\n                }\n            }\n        }\n    })\n\n    .directive('schemaItem', function ($templateCache, $compile, schemaFactory, fieldTypes, ruleTypes, valueTypes) {\n\n        // label\n        var templateKey_label = \"voyageone.angular.directives.schemaLabel.tpl.html\";\n        if (!$templateCache.get(templateKey_label)) {$templateCache.put(templateKey_label,\n            '<input style=\"min-width: 150px; max-width: 250px;\" type=\"text\" readonly ng-model=\"$$data.value\" class=\"form-control inherited\">');}\n\n        // input\n        var templateKey_input = \"voyageone.angular.directives.schemaInput.tpl.html\";\n        if (!$templateCache.get(templateKey_input)) {$templateCache.put(templateKey_input,\n            '<input style=\"min-width: 150px; max-width: 250px;\" ng-model=\"$$data.value\" class=\"form-control inherited\" replaceInfo>');}\n\n        // data\n        var templateKey_date = \"voyageone.angular.directives.schemaDate.tpl.html\";\n        if (!$templateCache.get(templateKey_date)) {$templateCache.put(templateKey_date,\n            '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input replaceInfo type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDate}}\" ng-model=\"$parent.$$data.value\" date-model-format=\"{{formatDate}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button replaceInfo type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>');}\n\n        // datetime\n        var templateKey_datetime = \"voyageone.angular.directives.schemaDatetime.tpl.html\";\n        if (!$templateCache.get(templateKey_datetime)) {$templateCache.put(templateKey_datetime,\n            '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input replaceInfo type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDateTime}}\" ng-model=\"$parent.$$data.value\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button replaceInfo type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>');}\n\n        // textarea\n        var templateKey_textarea = \"voyageone.angular.directives.schemaTextarea.tpl.html\";\n        if (!$templateCache.get(templateKey_textarea)) {$templateCache.put(templateKey_textarea,\n            '<textarea style=\"min-width: 150px; max-width: 650px;\" class=\"form-control no-resize\" ng-model=\"$$data.value\" rows=\"{{showHtmlData.rowNum}}\" replaceInfo></textarea>');}\n\n        // single check-select\n        var templateKey_select = \"voyageone.angular.directives.schemaSelect.tpl.html\";\n        if (!$templateCache.get(templateKey_select)) {$templateCache.put(templateKey_select,\n            '<select style=\"min-width: 150px; max-width: 250px;\" replaceInfo class=\"form-control\" ng-model=\"$$data.value.value\" ng-options=\"option.value as option.displayName for option in $$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');}\n\n        // single check-radio\n        var templateKey_radio = \"voyageone.angular.directives.schemaRadio.tpl.html\";\n        if (!$templateCache.get(templateKey_radio)) {$templateCache.put(templateKey_radio,\n            '<label class=\"checkbox-inline c-radio\" ng-repeat=\"option in $$data.options\"><input name=\"{{$$data.id}}\" type=\"radio\" ng-value=\"option.value\" ng-model=\"$$data.value.value\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>');}\n\n        // multi check-checkbox\n        var templateKey_checkbox = \"voyageone.angular.directives.schemaCheckbox.tpl.html\";\n        if (!$templateCache.get(templateKey_checkbox)) {$templateCache.put(templateKey_checkbox,\n            '<label class=\"checkbox-inline c-checkbox\" ng-repeat=\"option in $$data.options\"><input type=\"checkbox\" ng-value=\"option.value\" ng-click=\"checkboxValue(option.value)\" ng-checked=\"isSelected(option.value)\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>');}\n\n        // multi complex\n        var templateKey_multiComplex = \"voyageone.angular.directives.schemaMultiComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_multiComplex)) {$templateCache.put(templateKey_multiComplex,\n            '<table class=\"table text-center\">' +\n            '<thead><tr>' +\n            //'<schema-header ng-repeat=\"field in $$data.fields\" data=\"field\" is-complex=\"true\"></schema-header>' +\n            '<th ng-repeat=\"field in $$data.fields\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" class=\"text-center\" style=\"min-width: 180px;\">{{field.name}}</th>' +\n            '<th style=\"min-width: 60px;\" class=\"text-center\" translate=\"TXT_COM_EDIT\"></th>' +\n            '</tr></thead>' +\n            '<tbody><tr ng-repeat=\"value in $$data.values\">' +\n            '<td class=\"text-left\" ng-repeat=\"field in value.fieldMap\"><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></td>' +\n            '<td style=\"min-width: 60px;\"><button title=\"{\\'BTN_COM_DELETE\\' | translate}\" class=\"btn btn-danger btn-xs\" ng-click=\"delField($index)\"><i class=\"fa  fa-trash-o\"></i></button></td>' +\n            '</tr></tbody>' +\n            '</table>');}\n\n        // complex\n        var templateKey_complex = \"voyageone.angular.directives.schemaComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_complex)) {$templateCache.put(templateKey_complex,\n            '<schema-header ng-repeat=\"field in $$data.fields\" data=\"field\"><schema-item data=\"field\"></schema-item></schema-header>');}\n\n        // multi complex tip\n        var templateKey_multiComplex_tip = \"voyageone.angular.directives.schemaMultiComplexTip.tpl.html\";\n        if (!$templateCache.get(templateKey_multiComplex_tip)) {$templateCache.put(templateKey_multiComplex_tip,\n            '<div class=\"text-warnings\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><br><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div>');}\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                $$data: \"=data\",\n                $$hastip: \"=hastip\",\n                $$complex: \"=complex\"\n            },\n            link: function (scope, element) {\n\n                var schema = new schemaFactory();\n\n                _returnType (scope.$$data.type);\n                _operateRule (scope.$$data.rules);\n\n                var tempHtml = \"\";\n                // 拼接body\n                switch (schema.type()) {\n                    case fieldTypes.INPUT:\n                        tempHtml = $templateCache.get(templateKey_input).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.DATE:\n                        tempHtml = $templateCache.get(templateKey_date).replace(\"replaceInfo\", schema.html()).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.DATETIME:\n                        tempHtml = $templateCache.get(templateKey_datetime).replace(\"replaceInfo\", schema.html()).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.TEXTAREA:\n                        tempHtml = $templateCache.get(templateKey_textarea).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.SINGLE_CHECK:\n                        tempHtml = $templateCache.get(templateKey_select).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.RADIO:\n                        tempHtml = $templateCache.get(templateKey_radio).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.MULTI_CHECK:\n                        tempHtml = $templateCache.get(templateKey_checkbox).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.LABEL:\n                        tempHtml = $templateCache.get(templateKey_label);\n                        break;\n                    case fieldTypes.MULTI_COMPLEX:\n                        tempHtml = $templateCache.get(templateKey_multiComplex);\n                        break;\n                    case fieldTypes.COMPLEX:\n                        tempHtml = $templateCache.get(templateKey_complex);\n                        break;\n                }\n\n                // 添加规则说明\n                if (schema.tipMsg() != null && scope.$$hastip) {\n                    tempHtml += $templateCache.get(templateKey_multiComplex_tip);\n                }\n                scope.showHtmlData = angular.copy(schema.schemaInfo());\n                element.html($compile(tempHtml)(scope));\n\n                /**\n                * 设置checkbox被选中的value值处理\n                * @param value\n                */\n                scope.checkboxValue = function (value) {\n                    if (_.contains(scope.showHtmlData.checkValues, value)) {\n                        scope.showHtmlData.checkValues.splice(_.indexOf(scope.showHtmlData.checkValues, value), 1);\n                    } else {\n                        scope.showHtmlData.checkValues.push(value);\n                    }\n                    scope.$$data.values = [];\n                    angular.forEach(scope.showHtmlData.checkValues, function (obj) {\n                        scope.$$data.values.push({id: null, value: obj});\n                    })\n                };\n\n                /**\n                 * 判断是否被选中\n                 * @param value\n                 */\n                scope.isSelected = function (value) {\n                    return _.contains(scope.showHtmlData.checkValues, value)\n                };\n\n                /**\n                * 设置multi complex删除该条记录\n                * @param index\n                */\n                scope.delField = function (index) {\n                    scope.$$data.values.splice(index, 1);\n                };\n\n                /**\n                * 返回需要展示的页面样式\n                * @param type\n                * @param valueTypeRule\n                * @private\n                */\n                function _returnType (type) {\n                    schema.type(type);\n                    switch (type) {\n                        case fieldTypes.RADIO:\n                            if (scope.$$complex)\n                                schema.type(fieldTypes.SINGLE_CHECK);\n                            break;\n                        case fieldTypes.MULTI_CHECK:\n                            _setCheckValues(scope.$$data.values);\n                            break;\n                        case fieldTypes.MULTI_COMPLEX:\n                            scope.$$data.values = _resetMultiComplex(scope.$$data);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            scope.$$data.values = _resetComplex(scope.$$data);\n                            break;\n                    }\n                }\n\n                /**\n                * 设置checkvalues\n                * @param values\n                * @private\n                */\n                function _setCheckValues (values) {\n                    if (values != undefined && values != null) {\n                        angular.forEach(values, function (obj) {\n                            schema.checkValues(obj.value);\n                        })\n                    }\n                }\n\n                /**\n                * 重新设置multicomplex的一些属性\n                * @param fields\n                * @private\n                */\n                function _resetMultiComplex (data) {\n                    var tempValues = [];\n                    angular.forEach(data.values, function (value) {\n                        var tempFieldMap = {};\n                        angular.forEach(data.fields, function (field) {\n                            var tempField = angular.copy(field);\n                            if (value.fieldMap[field.id] != undefined) {\n                                tempField.value = value.fieldMap[field.id].value;\n                            }\n                            tempFieldMap[field.id] = tempField;\n                        });\n                        tempValues.push({fieldMap: angular.copy(tempFieldMap)});\n                    });\n\n                    // 如果values为空,默认添加空白行\n                    if (_.isEmpty(data.values)) {\n                        var newFieldMap = {};\n                        angular.forEach(data.fields, function (field) {\n                            eval(\"newFieldMap.\" + field.id + \"=field\");\n                        });\n\n                        tempValues.push({fieldMap: angular.copy(newFieldMap)});\n                    }\n\n                    return tempValues;\n                }\n\n                /**\n                 * 重新\n                 * @param data\n                 * @private\n                 */\n                function _resetComplex (data) {\n                    return data.values;\n                    //var tempValues = {};\n                    //angular.forEach(data.fields, function (value) {\n                    //    if (value.type === fieldTypes.COMPLEX) {\n                    //        tempValues[]\n                    //    } else if (value.type === fieldTypes.MULTI_COMPLEX) {\n                    //        tempValues[value.id] =\n                    //    }\n                    //})\n                }\n\n                /**\n                * 处理rules\n                * @param rules\n                * @private\n                */\n                function _operateRule (rules) {\n                    angular.forEach(rules, function (rule) {\n                        switch (rule.name) {\n                            case ruleTypes.VALUE_TYPE_RULE:\n                                _valueTypeRule(rule);\n                                break;\n                            case ruleTypes.REQUIRED_RULE:\n                                _requiredRule(rule);\n                                break;\n                            case ruleTypes.DISABLE_RULE:\n                                _disableRule(rule);\n                                break;\n                            case ruleTypes.READ_ONLY_RULE:\n                                _readOnlyRule(rule);\n                                break;\n                            case ruleTypes.REGEX_RULE:\n                                _regexRule(rule);\n                                break;\n                            case ruleTypes.TIP_RULE:\n                                _tipRule(rule);\n                                break;\n                            case ruleTypes.MIN_LENGTH_RULE:\n                                _minLengthRule(rule);\n                                break;\n                            case ruleTypes.MAX_LENGTH_RULE:\n                                _maxLengthRule(rule);\n                                break;\n                            case ruleTypes.MIN_VALUE_RULE:\n                                _minValueRule(rule);\n                                break;\n                            case ruleTypes.MAX_VALUE_RULE:\n                                _maxValueRule(rule);\n                                break;\n                            case ruleTypes.MIN_INPUT_NUM_RULE:\n                                _minInputNumRule(rule);\n                                break;\n                            case ruleTypes.MAX_INPUT_NUM_RULE:\n                                _maxInputNumRule(rule);\n                                break;\n                        }\n                    })\n                }\n\n                /**\n                 * 处理valueTypeRule\n                 * @param valueTypeRule\n                 * @private\n                 */\n                function _valueTypeRule (valueTypeRule) {\n                    switch (valueTypeRule.value) {\n                        case valueTypes.TEXT:\n                        case valueTypes.DECIMAL:\n                        case valueTypes.INTEGER:\n                        case valueTypes.LONG:\n                            schema.type(fieldTypes.INPUT);\n                            schema.html(\"type=\\\"text\\\"\");\n                            break;\n                        case valueTypes.DATE:\n                            schema.type(fieldTypes.DATE);\n                            break;\n                        case valueTypes.TIME:\n                            schema.type(fieldTypes.DATETIME);\n                            break;\n                        case valueTypes.URL:\n                            schema.type(fieldTypes.INPUT);\n                            schema.html(\"type=\\\"url\\\"\");\n                            break;\n                        case valueTypes.TEXTAREA:\n                            schema.type(fieldTypes.TEXTAREA);\n                            schema.rowNum(4);\n                            break;\n                        case valueTypes.HTML:\n                            schema.type(fieldTypes.TEXTAREA);\n                            schema.rowNum(10);\n                            break;\n                    }\n                }\n\n                /**\n                 * 处理requiredRule\n                 * @param requiredRule\n                 * @private\n                 */\n                function _requiredRule (requiredRule) {\n                    if (\"true\" == requiredRule.value) {\n                        schema.isRequired(true);\n                        schema.html(\"required\");\n                    }\n                }\n\n                /**\n                 * 处理disableRule\n                 * @param disableRule\n                 * @private\n                 */\n                function _disableRule (disableRule) {\n                    if (\"true\" == disableRule.value\n                    && disableRule.dependGroup == null) {\n                        schema.html(\"ng-disabled=\\\"true\\\"\");\n                    }\n                }\n\n                /**\n                 * 处理readOnlyRule\n                 * @param readOnlyRule\n                 * @private\n                 */\n                function _readOnlyRule (readOnlyRule) {\n                    if (\"true\" == readOnlyRule.value) {\n                        schema.html(\"readonly\");\n                    }\n                }\n\n                /**\n                 * 处理regexRule\n                 * @param regexRule\n                 * @private\n                 */\n                function _regexRule (regexRule) {\n                    schema.html(\"ng-pattern=\\\"/\" + regexRule.value +\"/\\\"\");\n                }\n\n                /**\n                 * 处理tipRule\n                 * @param tipRule\n                 * @private\n                 */\n                function _tipRule (tipRule) {\n                    schema.tipMsg(tipRule.value);\n                }\n\n                /**\n                 * 处理minLengthRule\n                 * @param minLengthRule\n                 * @private\n                 */\n                function _minLengthRule (minLengthRule) {\n                    var value = isNaN(parseInt(minLengthRule.value)) ? 0 : minLengthRule.value;\n\n                    if (\"not include\" === minLengthRule.exProperty)\n                        value = (value > 0) ? value -1 : 0;\n\n                    if (\"character\" == minLengthRule.unit)\n                        schema.html(\"ng-minlength=\\\"\" + value +\"\\\"\");\n                    else\n                        schema.html(\"ng-char-minlength=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 处理maxLengthRule\n                 * @param maxLengthRule\n                 * @private\n                 */\n                function _maxLengthRule (maxLengthRule) {\n                    var value = isNaN(parseInt(maxLengthRule.value)) ? 0 : maxLengthRule.value;\n\n                    if (\"not include\" === maxLengthRule.exProperty)\n                        value = (value > 0) ? value -1 : 0;\n\n                    if (\"character\" == maxLengthRule.unit)\n                        schema.html(\"ng-maxlength=\\\"\" + value +\"\\\"\");\n                    else\n                        schema.html(\"ng-char-maxlength=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 处理minValueRule\n                 * @param minValueRule\n                 * @private\n                 */\n                function _minValueRule (minValueRule) {\n                    var value = isNaN(parseFloat(minValueRule.value)) || 0;\n\n                    if (\"not include\" === minValueRule.exProperty)\n                        value = (value > 0) ? value - 0.01 : 0;\n\n                    schema.html(\"ng-minvalue=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 处理maxValueRule\n                 * @param maxValueRule\n                 * @private\n                 */\n                function _maxValueRule (maxValueRule) {\n                    var value = isNaN(parseFloat(maxValueRule.value)) || 0;\n\n                    if (\"not include\" === maxValueRule.exProperty)\n                        value = (value > 0) ? value - 0.01 : 0;\n\n                    schema.html(\"ng-maxvalue=\\\"\" + value +\"\\\"\");\n\n                }\n\n                /**\n                 * 处理minInputNumRule\n                 * @param minInputNumRule\n                 * @private\n                 */\n                function _minInputNumRule (minInputNumRule) {\n                    var value = isNaN(parseInt(minInputNumRule.value)) || 0;\n\n                    if (\"not include\" === minInputNumRule.exProperty)\n                        value = (value > 0) ? value - 1 : 0;\n\n                    schema.html(\"ng-mininputnum=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 处理maxInputNumRule\n                 * @param maxInputNumRule\n                 * @private\n                 */\n                function _maxInputNumRule (maxInputNumRule) {\n                    var value = isNaN(parseInt(maxInputNumRule.value)) || 0;\n\n                    if (\"not include\" === maxInputNumRule.exProperty)\n                        value = (value > 0) ? value - 1 : 0;\n\n                    schema.html(\"ng-maxinputnum=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 如果checkbox被选中,返回被选中的value.\n                 * eg.[{new: true, pending: false, approved: true}] -> [new, approved]\n                 * @param object\n                 * @returns {*}\n                 */\n                //function _returnKey(object) {\n                //    var result = [];\n                //    angular.forEach(object, function(value, index) {\n                //        if (value) result.push(index);\n                //    });\n                //    return result;\n                //}\n            }\n        }\n    });\n","/**\n * @Description:\n * 用于动态显示options\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-22\n */\n\nangular.module('voyageone.angular.directives.voption', [])\n    .directive('voption', function ($templateCache, $compile) {\n\n        var templateKey_select = \"voyageone.angular.directives.optionSelect.tpl.html\";\n\n        // 显示成select样式\n        if (!$templateCache.get(templateKey_select)) {\n            $templateCache.put(templateKey_select,\n                '<select class=\"form-control\" ng-model=\"$$data.value.value\" ng-options=\"option.value as option.displayName for option in $$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');\n        }\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope, element) {\n\n                // 定义不同的展示种类\n                var typeList = {\n                    SINGLE_CHECK: \"SINGLECHECK\"\n                };\n\n                // 监视配置变动\n                scope.$watch('$$data', function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 根据type选择展示不同的控件\n                 */\n                function refresh() {\n                    var tempHtml;\n                    switch (scope.$$data.type) {\n                        case typeList.SINGLE_CHECK:\n                            tempHtml = $compile($templateCache.get(templateKey_select))(scope);\n                            break;\n                    }\n                    element.html(tempHtml);\n                }\n            }\n        };\n    });","/**\n * @Description:\n * 用于分页\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-08\n */\n\nangular.module('voyageone.angular.directives.vpagination', [])\n    .directive('vpagination', function ($templateCache, $compile, vpagination) {\n\n        var templateKey = \"voyageone.angular.directives.pagination.tpl.html\";\n        var templateKeyNoData = \"voyageone.angular.directives.paginationNoData.tpl.html\";\n\n        // 有数据分页样式\n        if (!$templateCache.get(templateKey)) {\n            $templateCache.put(templateKey,\n                '<div class=\"col-sm-2\">\\n' +\n                '    <div class=\"page-main form-inline\">{{\\'TXT_COM_SHOWING_NO\\' | translate}}&nbsp;<input class=\"text-center\" type=\"text\" ng-model=\"curr.pageNo\"/>&nbsp;/&nbsp;{{totalPages}}&nbsp;{{\\'TXT_COM_PAGE\\' | translate}}&nbsp;' +\n                '        <button class=\"btn btn-xs btn-default\" type=\"button\" ng-click=\"goPage(curr.pageNo)\" translate=\"BTN_GO\"></button>\\n' +\n                '    </div>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-7 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_COM_SHOWING\\' | translate}}&nbsp;{{curr.start}}-{{curr.end}}&nbsp;{{\\'TXT_COM_OF\\' | translate}}&nbsp;{{totalItems}}&nbsp{{\\'TXT_COM_ITEMS\\' | translate}}</small>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-3 text-right text-center-xs\"><div>' +\n                '    <ul class=\"pagination-sm m-t-none m-b pagination ng-isolate-scope ng-valid ng-dirty ng-valid-parse\">\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-first\"><a href ng-click=\"goPage(1)\" ng-disabled=\"curr.isFirst\">&laquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-prev\"><a href ng-click=\"goPage(curr.pageNo - 1)\" ng-disabled=\"curr.isFirst\">&lsaquo;</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowStart\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-repeat=\"page in curr.pages track by $index\" ng-class=\"{active: isCurr(page)}\" class=\"pagination-page\"><a href ng-click=\"goPage(page)\">{{page}}</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowEnd\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-next\"><a href ng-click=\"goPage(curr.pageNo + 1)\" ng-disabled=\"curr.isLast\">&rsaquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-last\"><a href ng-click=\"goPage(totalPages)\" ng-disabled=\"curr.isLast\">&raquo;</a></li>\\n' +\n                '    </ul>\\n' +\n                '</div>');\n        }\n\n        // 无数据分页样式\n        if (!$templateCache.get(templateKeyNoData)) {\n            $templateCache.put(templateKeyNoData,\n                '<div class=\"col-sm-7 col-sm-offset-2 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_COM_SHOWING\\' | translate}}&nbsp;0-0&nbsp;{{\\'TXT_COM_OF\\' | translate}}&nbsp;0&nbsp{{\\'TXT_COM_ITEMS\\' | translate}}</small>\\n' +\n                '</div>');\n        }\n\n        var defConfig = {curr: 1, total: 0, size: 20, showPageNo:5};\n\n        return {\n            restrict: \"AE\",\n            //templateUrl: templateKey,\n            replace: false,\n            scope: {\n                $$configNameForA: \"@vpagination\",\n                $$configNameForE: \"@config\"\n            },\n            link: function (scope, element) {\n\n                // 获取用户的config配置\n                var userConfigName = scope.$$configNameForA || scope.$$configNameForE;\n                var userConfig = scope.$parent.$eval(userConfigName);\n\n                // 将用户配置覆盖到默认配置后，在重新覆盖到用户配置上，用于补全配置属性\n                var userWithDefConfig = angular.extend({}, defConfig, userConfig);\n                scope.config = angular.extend(userConfig, userWithDefConfig);\n\n                var p = new vpagination(scope.config);\n\n                // 监视配置变动\n                scope.$parent.$watch(userConfigName, function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 跳转到指定页\n                 * @param num\n                 */\n                scope.goPage = function (num) {\n                    p.goPage(isNaN(Number(num)) ? 1 : Number(num));\n                };\n\n                /**\n                 * 判断是否是当前页\n                 * @param num\n                 * @returns {*|boolean}\n                 */\n                scope.isCurr = function (num) {\n                    return p.isCurr(num);\n                };\n\n                function refresh() {\n\n                    // 获取总页数\n                    scope.totalPages = p.getPageCount();\n                    // 获取总items数\n                    scope.totalItems = p.getTotal();\n                    // 获取当前页的信息\n                    scope.curr = p.getCurr();\n\n                    // 根据总数量显示不同的分页样式\n                    var tempHtml;\n                    if(p.getTotal() == 0) {\n                        tempHtml = $compile($templateCache.get(templateKeyNoData))(scope);\n                    } else {\n                        tempHtml = $compile($templateCache.get(templateKey))(scope);\n                    }\n                    element.html(tempHtml);\n\n                }\n            }\n        };\n    });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\nangular.module('voyageone.angular.directives.validator', [])\n\n    // 定义ng-char-maxlength\n    .directive('ngCharMaxlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxlength = -1;\n                attr.$observe('ngCharMaxlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    maxlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxlength = function(modelValue, viewValue) {\n                    return (maxlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) <= maxlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-char-minlength\n    .directive('ngCharMinlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minlength = -1;\n                attr.$observe('ngCharMinlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    minlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minlength = function(modelValue, viewValue) {\n                    return (minlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) >= minlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-maxvalue\n    .directive('ngMaxvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        maxvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        maxvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        maxvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxvalue = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-minvalue\n    .directive('ngMinvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMinvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        minvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        minvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        minvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minvalue = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue >= minvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-maxinputnum\n    .directive('ngMaxinputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxinputvalue', function(value) {\n                    maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxinputnum = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-mininputnum\n    .directive('ngMininputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMininputnum', function(value) {\n                    minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.mininputnum = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length >= minvalue);\n                };\n            }\n        }\n    })\n;","/**\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.dialogs', [])\n  .factory(\"$dialogs\", function ($modal, $filter, $templateCache) {\n\n    var templateName = 'voyageone.angular.factories.dialogs.tpl.html';\n    $templateCache.put(templateName, '<div class=\"vo_modal\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" ng-click=\"close()\"><span aria-hidden=\"true\"><i ng-click=\"close()\" class=\"fa fa-close\"></i></span></button><h4 class=\"modal-title\" ng-bind-html=\"title\"></h4></div><div class=\"modal-body wrapper-lg\"><div class=\"row\"><p ng-bind-html=\"content\"></p></div></div><div class=\"modal-footer\"><button class=\"btn btn-default btn-sm\" ng-if=\"!isAlert\" ng-click=\"close()\" translate=\"BTN_COM_CANCEL\"></button><button class=\"btn btn-vo btn-sm\" ng-click=\"ok()\" translate=\"BTN_COM_OK\"></button></div></div>');\n\n    function tran(translationId, values) {\n      return $filter('translate')(translationId, values);\n    }\n\n    return function (options) {\n\n      if (!_.isObject(options)) throw \"arg type must be object\";\n\n      var values;\n\n      if (_.isObject(options.content)) {\n        values = options.content.values;\n        options.content = options.content.id;\n      }\n\n      options.title = tran(options.title);\n      options.content = tran(options.content, values);\n\n      var modalInstance = $modal.open({\n        templateUrl: templateName,\n        controller: [\"$scope\", function (scope) {\n          _.extend(scope, options);\n        }],\n        size: 'md'\n      });\n\n      options.close = function () {\n        modalInstance.dismiss('close')\n      };\n\n      options.ok = function () {\n        modalInstance.close('');\n      };\n\n      return modalInstance;\n    };\n  })\n\n  .factory(\"alert\", function ($dialogs) {\n    return function (content, title) {\n      return $dialogs({\n        title: title || 'TXT_COM_ALERT',\n        content: content,\n        isAlert: true\n      });\n    };\n  })\n\n  .factory(\"confirm\", function vConfirm($dialogs) {\n    return function (content, title) {\n      return $dialogs({\n        title: title || 'TXT_COM_CONFIRM',\n        content: content,\n        isAlert: false\n      });\n    };\n  });","/**\n * @Date:    2015-11-16 20:51:05\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.factories.interceptor', [])\n  .factory('interceptorFactory', InterceptorFactory)\n  .config(function ($httpProvider) {\n    $httpProvider.interceptors.push('interceptorFactory');\n  });\n\nfunction InterceptorFactory() {\n\n  // 未知的系统错误\n  var UNKNOWN_CODE = \"5\";\n  // 和 JAVA 同步,系统通知前端自动跳转的特殊代码\n  var CODE_SYS_REDIRECT = \"SYS_REDIRECT\";\n  // 和 JAVA 同步,回话过期的信息\n  var MSG_TIMEOUT = \"300001\";\n\n  /**\n   * 对系统自动跳转的响应,执行跳转\n   * @param {{code:string,redirectTo:string}} res\n   * @returns {boolean}\n   */\n  function autoRedirect(res) {\n    if (res.code != CODE_SYS_REDIRECT) {\n      return false;\n    }\n    // 如果跳转数据异常,则默认跳转登陆页\n    location.href = res.redirectTo || '/login.html';\n    return true;\n  }\n\n  /**\n   * 对会话超时和未登录进行特殊处理\n   * @param {{code:string}} res\n   * @returns {boolean}\n   */\n  function sessionTimeout(res) {\n    if (res.code != MSG_TIMEOUT) {\n      return false;\n    }\n    // 会话超时,默认跳转到登陆页\n    location.href = '/login.html';\n    return true;\n  }\n\n  /**\n   * 处理位置的异常\n   * @param response\n   */\n  function unknownException(response) {\n\n    if (response.data.code !== UNKNOWN_CODE) {\n      return;\n    }\n\n    window.$$lastUnknow = response;\n    console.error('Server throw unknown exceptio. Message:', response.data.message);\n  }\n\n  return {\n    request: function (config) {\n      return config;\n    },\n    response: function (res) {\n      var result = res.data;\n\n      if (autoRedirect(result) || sessionTimeout(result)) {\n        return res;\n      }\n\n      unknownException(res);\n\n      return res;\n    },\n    requestError: function (config) {\n      return config;\n    },\n    responseError: function (res) {\n    }\n  };\n}","/**\n * Notify 的可用参数\n * {\n *    // whether to hide the notification on click\n *    clickToHide: true,\n *    // whether to auto-hide the notification\n *    autoHide: true,\n *    // if autoHide, hide after milliseconds\n *    autoHideDelay: 5000,\n *    // show the arrow pointing at the element\n *    arrowShow: true,\n *    // arrow size in pixels\n *    arrowSize: 5,\n *    // position defines the notification position though uses the defaults below\n *    position: '...',\n *    // default positions\n *    elementPosition: 'bottom left',\n *    globalPosition: 'top right',\n *    // default style\n *    style: 'bootstrap',\n *    // default class (string or [string])\n *    className: 'error',\n *    // show animation\n *    showAnimation: 'slideDown',\n *    // show animation duration\n *    showDuration: 400,\n *    // hide animation\n *    hideAnimation: 'slideUp',\n *    // hide animation duration\n *    hideDuration: 200,\n *    // padding between element and notification\n *    gap: 2\n * }\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.notify', [])\n  .factory('notify', function ($filter) {\n    function notify(options) {\n\n      if (!options) return;\n      if (_.isString(options)) options = {message: options};\n      if (!_.isObject(options)) return;\n\n      var values;\n\n      // 为 translate 的格式化提供支持，检测类型并转换\n      if (_.isObject(options.message)) {\n\n        values = options.message.values;\n        options.message = options.message.id;\n      }\n\n      options.message = $filter('translate')(options.message, values);\n\n      return $.notify(options.message, options);\n    }\n\n    notify.success = function (message) {\n      return notify({message: message, className: \"success\"});\n    };\n\n    notify.warning = function (message) {\n      return notify({message: message, className: \"warning\"});\n    };\n\n    notify.danger = function (message) {\n      return notify({message: message, className: \"danger\"});\n    };\n\n    return notify;\n  });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\n\nangular.module('voyageone.angular.factories.schema', [])\n\n    // 定义schemaHeaderFactory\n    .factory('schemaHeaderFactory', function () {\n        return function (config) {\n            var _schemaHeaderInfo = config ? config : {\n                isRequired: false,\n                //size: null,\n                isMultiComplex: false,\n                isComplex: false,\n                tipMsg: []\n            };\n\n            this.isRequired = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isRequired = value : _schemaHeaderInfo.isRequired;\n            };\n\n            //this.size = function (value) {\n            //    return value !== undefined ? _schemaHeaderInfo.size = value : _schemaHeaderInfo.size;\n            //};\n\n            this.isComplex = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isComplex = value : _schemaHeaderInfo.isComplex;\n            };\n\n            this.isMultiComplex = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isMultiComplex = value : _schemaHeaderInfo.isMultiComplex;\n            };\n\n            this.tipMsg = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.tipMsg.push(value) : _schemaHeaderInfo.tipMsg;\n            };\n\n            this.schemaHearInfo = _schemaHeaderInfo;\n        }\n    })\n\n    // 定义schemaFactory\n    .factory('schemaFactory', function () {\n\n        return function (config) {\n\n            var _schemaInfo = config ? config : {\n                type: null,\n                //size: null,\n                rowNum: null,\n                isRequired: false,\n                checkValues: [],\n                tipMsg: [],\n                html: []\n            };\n\n            this.type = function (value) {\n                return value !== undefined ? _schemaInfo.type = value : _schemaInfo.type;\n            };\n\n            //this.size = function (value) {\n            //    return value !== undefined ? _schemaInfo.size = value : _schemaInfo.size;\n            //};\n\n            this.html = function (value) {\n                return value !== undefined ? _schemaInfo.html.push(value) : htmlToString(_schemaInfo.html);\n            };\n\n            this.isRequired = function (value) {\n                return value !== undefined ? _schemaInfo.isRequired = value : _schemaInfo.isRequired;\n            };\n\n            this.rowNum = function (value) {\n                return value !== undefined ? _schemaInfo.rowNum = value : _schemaInfo.rowNum;\n            };\n\n            this.tipMsg = function (value) {\n                return value !== undefined ? _schemaInfo.tipMsg.push(value) : _schemaInfo.tipMsg;\n            };\n\n            this.checkValues = function (value) {\n                return value !== undefined ? _schemaInfo.checkValues.push(value) : _schemaInfo.checkValues;\n            };\n\n            this.schemaInfo = function () {\n                return _schemaInfo;\n            };\n\n            function htmlToString (htmls) {\n                var result = \"\";\n                angular.forEach(htmls, function (html) {\n                    result += \" \" + html + \" \";\n                });\n                return result;\n            }\n        };\n    });","/**\n * @User: Edward\n * @Version: 2.0.0, 2015-12-09\n */\n\nangular.module('voyageone.angular.factories.vpagination', [])\n    .factory('vpagination', function () {\n\n        /**\n         * 创建一个分页服务\n         * @param {{ curr: number, size: number, total: number, fetch: function }} config 配置\n         */\n        return function (config) {\n\n            var _pages, _lastTotal = 0, _showPages = [];\n\n            /**\n             * 返回总件数\n             * @returns {*}\n             */\n            this.getTotal = function () {\n                return config.total;\n            };\n\n            /**\n             * 返回当前页的开始和结束号\n             * @returns {{start: number, end: number}}\n             */\n            this.getCurr = function () {\n                return {\n                    pageNo: curr(),\n                    start: getCurrStartItems(),\n                    end: getCurrEndItems(),\n                    isFirst: isFirst(),\n                    isLast: isLast(),\n                    pages: createShowPages(),\n                    isShowStart: isShowStart(),\n                    isShowEnd: isShowEnd()\n                }\n            };\n\n            // 跳转到指定页\n            this.goPage = load;\n            // 返回总页数\n            this.getPageCount = getPages;\n            // 是否是当前页\n            this.isCurr = isCurr;\n\n            /**\n             * 跳转到指定页\n             * @param {number} page 页号\n             */\n            function load(page) {\n                page = page || config.curr;\n\n                if (page < 1 || page > getPages() || isCurr(page)) return;\n\n                config.curr = page;\n\n                config.fetch(page, config.size);\n            }\n\n            /**\n             * 初始化page列表\n             * @returns {Array}\n             */\n            function createShowPages () {\n\n                var minPage, maxPage, _showPages= [];\n                if (config.curr < config.showPageNo) {\n                    minPage = 1;\n                    if(_pages <= config.showPageNo) maxPage = _pages;\n                    else maxPage = config.showPageNo;\n                } else if (config.curr + 2 > _pages) {\n                    minPage = _pages + 1 - config.showPageNo;\n                    maxPage = _pages;\n                } else {\n                    minPage = config.curr + 3 - config.showPageNo;\n                    maxPage = config.curr + 2;\n                }\n\n                // 按照指定数量创建按钮\n                for (var i =  minPage; i <= maxPage; i++) {\n                    //scope.pages.push({num: 1, active: \"\", show: false});\n                    _showPages.push(i);\n                }\n\n                return _showPages;\n            }\n\n            /**\n             * 获取当前总页数\n             * @returns {number}\n             */\n            function getPages() {\n                if (_lastTotal != config.total) {\n                    _pages = parseInt(config.total / config.size) + ((config.total % config.size) > 0 ? 1 : 0);\n                    _lastTotal = config.total;\n                }\n                return _pages;\n            }\n\n            /**\n             * 返回当前页的起始号\n             * @returns {number}\n             */\n            function getCurrStartItems() {\n                return (config.curr - 1) * config.size + 1\n            }\n\n            /**\n             * 返回当前页的结束号\n             * @returns {number}\n             */\n            function getCurrEndItems() {\n                var currEndItems = config.curr * config.size;\n                return currEndItems <= config.total ? currEndItems : config.total;\n\n            }\n\n            /**\n             * 是否是最后一页\n             * @returns {boolean}\n             */\n            function isLast() {\n                return config.curr == getPages();\n            }\n\n            /**\n             * 是否是第一页\n             * @returns {boolean}\n             */\n            function isFirst() {\n                return config.curr == 1;\n            }\n\n            /**\n             * 是否是当前页\n             * @param page 页码\n             * @returns {boolean}\n             */\n            function isCurr(page) {\n                return config.curr == page;\n            }\n\n            function curr() {\n                return config.curr;\n            }\n\n            /**\n             * 是否显示开始...项目\n             * @returns {boolean}\n             */\n            function isShowStart () {\n                _showPages = createShowPages();\n                return _showPages[0] > 1\n            }\n\n            /**\n             * 是否显示结束...项目\n             * @returns {boolean}\n             */\n            function isShowEnd () {\n                _showPages = createShowPages();\n                return _showPages[_showPages.length - 1] < _pages;\n            }\n\n        };\n    });","/**\n * @description\n *\n * 自动创建基于地址定义的数据访问 service.\n * 传入的定义必须是 {object}, 并且至少有 root 属性\n *\n * @User: Jonas\n * @Date: 2015-12-10 19:32:37\n * @Version: 2.0.0\n */\n\n//@Skip\nangular.module('voyageone.angular.vresources', [])\n  .provider('$vresources', function ($provide) {\n\n    /**\n     * @description 构建请求地址的 url\n     * @param {string} root 请求的根路径\n     * @param {string} action 请求的名称\n     * @returns {string}\n     */\n    function getActionUrl(root, action) {\n      return root + (root.lastIndexOf('/') === root.length - 1 ? '' : '/') + action;\n    }\n\n    /**\n     * 闭包声明一个数据访问的 Service\n     * @param {string} name Service 的名称\n     * @param {object} actions 方法和地址定义\n     * @param {AjaxService} ajaxService 封装的 ajax 发送服务\n     */\n    function closureDataService(name, actions, ajaxService) {\n      /**\n       * @description 与 actions 一同闭包的构造函数\n       * @constructor\n       */\n      function DataResource() {\n        if (!actions) {\n          return;\n        }\n\n        if (typeof actions !== \"object\") {\n          console.log(\"Failed to new DataResource: [\" + actions + \"] is not a object\");\n          return;\n        }\n\n        if (!actions.root) {\n          console.log(\"Failed to new DataResource: no root prop\" + (JSON && JSON.stringify ? \": \" + JSON.stringify(actions) : \"\"));\n          return;\n        }\n\n        // 遍历配置\n        for (var name in actions) {\n          // 不对 root 进行创建\n          if (name === \"root\") continue;\n          // 额外的检查\n          if (actions.hasOwnProperty(name)) {\n            // 闭包创建函数\n            this[name] = (function (actionUrl) {\n              return function (data) {\n                return ajaxService.post(actionUrl, data);\n              };\n            })(getActionUrl(actions.root, actions[name]));\n          }\n        }\n      }\n\n      $provide.service(name, DataResource);\n    }\n\n    this.$get = function (ajaxService) {\n\n      return {\n        register: function (name, actions) {\n\n          if (!actions) return;\n\n          if (typeof actions !== 'object') return;\n\n          // 如果有 root 这个属性,就创建 service\n          if (actions.root) {\n            closureDataService(name, actions, ajaxService);\n            return;\n          }\n\n          // 否则继续访问子属性\n          for (var childName in actions) {\n            // 额外的检查\n            if (actions.hasOwnProperty(childName)) {\n\n              this.register(childName, actions[childName]);\n            }\n          }\n        }\n      };\n    };\n  })\n\n  .run(function ($vresources, $actions) {\n    $vresources.register(null, $actions);\n  });","/**\n * @Date:    2015-11-16 18:48:29\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.ajax', [])\n  .service('$ajax', $Ajax)\n  .service('ajaxService', AjaxService);\n\nfunction $Ajax($http, blockUI, $q) {\n  this.$http = $http;\n  this.blockUI = blockUI;\n  this.$q = $q;\n}\n$Ajax.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n  this.$http.post(url, data).then(function (response) {\n    var res = response.data;\n    if (!res) {\n      alert('相应结果不存在?????');\n      defer.reject(null);\n      return;\n    }\n    if (res.message || res.code) {\n      defer.reject(res);\n      return;\n    }\n    defer.resolve(res);\n  }, function (response) {\n    defer.reject(null, response);\n  });\n  return defer.promise;\n};\n\nfunction AjaxService($q, $ajax, messageService) {\n  this.$q = $q;\n  this.$ajax = $ajax;\n  this.messageService = messageService;\n}\nAjaxService.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n\n  this.$ajax.post(url, data).then(function(res) {\n    // 成功\n    defer.resolve(res);\n    return res;\n  }, (function (_this) {\n    // 失败\n    return function(res) {\n      _this.messageService.show(res);\n      defer.reject(res);\n      return res;\n    };\n  })(this));\n\n  return defer.promise;\n};","/**\n * @Date:    2015-11-16 20:30:37\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.cookie', [])\n  .service('cookieService', CookieService);\n\nvar keys = {\n  language: 'voyageone.user.language',\n  company: 'voyageone.user.company',\n  channel: 'voyageone.user.channel',\n  application: \"voyageone.user.application\",\n};\n\nfunction gentProps(key) {\n  return function(val) {\n    if (arguments.length === 1) {\n      return this.set(key, val);\n    } else if (arguments.length > 1) {\n      return this.set(key, arguments);\n    }\n    return this.get(key);\n  };\n}\n\nfunction CookieService($cookieStore) {\n  this.$cookieStore = $cookieStore;\n}\n\nCookieService.prototype.get = function(key) {\n  var result = this.$cookieStore.get(key);\n  return result == undefined || result == null ? \"\" : this.$cookieStore.get(key);\n};\n\nCookieService.prototype.set = function(key, value) {\n  return this.$cookieStore.put(key, value);\n};\n\nCookieService.prototype.language = gentProps(keys.language);\n\nCookieService.prototype.company = gentProps(keys.company);\n\nCookieService.prototype.channel = gentProps(keys.channel);\n\nCookieService.prototype.application = gentProps(keys.application);\n\nCookieService.prototype.removeAll = function () {\n  this.$cookieStore.remove(keys.language);\n  this.$cookieStore.remove(keys.company);\n  this.$cookieStore.remove(keys.channel);\n  this.$cookieStore.remove(keys.application);\n};\n","/**\n * 对后台的信息进行自动处理\n * @Date:    2015-11-19 14:47:23\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.message', [])\n  .service('messageService', MessageService);\n\n// 同步,DisplayType 枚举\nvar DISPLAY_TYPES = {\n  /**\n   * 弹出提示\n   */\n  ALERT: 1,\n  /**\n   * 顶端弹出自动关闭\n   */\n  NOTIFY: 2,\n  /**\n   * 右下弹出自动关闭\n   */\n  POP: 3,\n  /**\n   * 用户自定义处理\n   */\n  CUSTOM: 4\n};\n\nfunction MessageService(alert, confirm, notify) {\n  this.alert = alert;\n  this.confirm = confirm;\n  this.notify = notify;\n}\n\nMessageService.prototype = {\n  /**\n   * 根据类型自动显示信息\n   * @param {{displayType:Number, message:String}} res\n   */\n  show: function(res) {\n\n    var displayType = res.displayType;\n    var message = res.message;\n\n    switch (displayType) {\n      case DISPLAY_TYPES.ALERT:\n        this.alert(message);\n        break;\n      case DISPLAY_TYPES.NOTIFY:\n        this.notify(message);\n        break;\n      case DISPLAY_TYPES.POP:\n        this.notify({message: message, position: 'right bottom'});\n        break;\n    }\n  }\n};","/**\n * @Date:    2015-11-19 14:26:43\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.permission', [])\n  .service('permissionService', PermissionService);\n\nfunction PermissionService($rootScope) {\n  this.$rootScope = $rootScope;\n  this.permissions = [];\n}\n\nPermissionService.prototype = {\n  /**\n   * set the action permissions.\n   * @param permissions\n   */\n  setPermissions: function(permissions) {\n    this.permissions = permissions;\n    this.$rootScope.$broadcast('permissionsChanged');\n  },\n  /**\n   * check the permission has been in action permissions.\n   * @param permission\n   * @returns {boolean|*}\n   */\n  has: function(permission) {\n    return _.contains(this.permissions, permission.trim());\n  }\n};\n","/**\n * @Date:    2015-11-19 14:35:25\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.translate', [])\n  .service('translateService', TranslateService);\n\nfunction TranslateService($translate) {\n  this.$translate = $translate;\n}\n\nTranslateService.prototype = {\n  languages: {\n    en: \"en\",\n    zh: \"zh\"\n  },\n  /**\n   * set the web side language type.\n   * @param key\n   */\n  setLanguage: function(language) {\n    if (!_.contains(this.languages, language)) {\n      language = this.getBrowserLanguage();\n    }\n    this.$translate.use(language);\n    return language;\n  },\n  /**\n   * get the browser language type.\n   * @returns {string}\n   */\n  getBrowserLanguage: function() {\n    var currentLang = navigator.language;\n    if (!currentLang)\n      currentLang = navigator.browserLanguage;\n    return currentLang.substr(0, 2);\n  }\n};\n"],"sourceRoot":"components/angular"}