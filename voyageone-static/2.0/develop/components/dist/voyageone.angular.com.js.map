{"version":3,"sources":["voyageone.angular.com.js","controllers/datePicker.ctrl.js","controllers/selectRows.ctrl.js","controllers/showPopover.ctrl.js","factories/dialogs.factory.js","factories/interceptor.factory.js","factories/notify.factory.js","factories/schema.factory.js","factories/selectRows.factory.js","factories/vpagination.factory.js","directives/dateModelFormat.directive.js","directives/enterClick.directive.js","directives/filestyle.directive.js","directives/ifNoRows.directive.js","directives/navigation.directive.js","directives/schema.directive.js","directives/voption.directive.js","directives/vpagination.directive.js","directives/vvalidator.directive.js","providers/vresources.js","services/ajax.service.js","services/cookie.service.js","services/message.service.js","services/permission.service.js","services/translate.service.js"],"names":["define","angular","module","controller","$scope","vm","this","formats","formatDate","formatDateTime","open","$event","preventDefault","stopPropagation","opened","selectAll","selectOne","isAllSelected","objectList","id","selAllFlag","forEach","currPageRows","object","selFlag","hasOwnProperty","tempList","_","pluck","selList","indexOf","push","splice","currentId","isEqual","undefined","showInfo","values","tempHtml","data","index","length","factory","$modal","$filter","$templateCache","templateName","put","tran","translationId","options","isObject","content","title","modalInstance","templateUrl","scope","extend","size","close","dismiss","ok","$dialogs","isAlert","vConfirm","UNKNOWN_CODE","CODE_SYS_REDIRECT","MSG_TIMEOUT","autoRedirect","res","code","location","href","redirectTo","sessionTimeout","unknownException","response","window","$$lastUnknow","console","error","message","request","config","result","requestError","responseError","$httpProvider","interceptors","notify","isString","$","success","className","warning","danger","_schemaHeaderInfo","isRequired","isMultiComplex","isComplex","tipMsg","value","schemaHearInfo","_schemaInfo","type","name","rowNum","checkValues","html","htmlToString","schemaInfo","htmls","_selectRowsInfo","clearCurrPageRows","selectRowsInfo","_pages","_lastTotal","_showPages","getTotal","total","getCurr","pageNo","curr","start","getCurrStartItems","end","getCurrEndItems","isFirst","isLast","pages","createShowPages","isShowStart","isShowEnd","goPage","load","getPageCount","getPages","isCurr","page","fetch","minPage","maxPage","showPageNo","i","parseInt","currEndItems","directive","restrict","require","link","elem","attrs","ngModel","$parsers","viewValue","dateModelFormat","attr","keyup","e","keyCode","selectExp","enterClick","targetElem","handler","click","element","$eval","$element","classInput","filestyle","$compile","tempNoDataKey","get","replace","$$data","$parent","$watch","find","remove","append","el","_window","_mb","wrap","next","backdrop","on","trigger","_this","parent","siblings","toggleClass","is","width","removeClass","target","top","w_h","height","offset","min","closest","addClass","position","css","appendTo","off","insertAfter","constant","INPUT","DATE","DATETIME","TEXTAREA","SINGLE_CHECK","RADIO","MULTI_INPUT","MULTI_CHECK","COMPLEX","MULTI_COMPLEX","LABEL","VALUE_TYPE_RULE","REQUIRED_RULE","DISABLE_RULE","READ_ONLY_RULE","REGEX_RULE","SET_RULE","TIP_RULE","DEV_TIP_RULE","MIN_LENGTH_RULE","MAX_LENGTH_RULE","MIN_VALUE_RULE","MAX_VALUE_RULE","MIN_INPUT_NUM_RULE","MAX_INPUT_NUM_RULE","MIN_DECIMAL_DIGITS_RULE","MAX_DECIMAL_DIGITS_RULE","MIN_TARGET_SIZE_RULE","MAX_TARGET_SIZE_RULE","MIN_IMAGE_SIZE_RULE","MAX_IMAGE_SIZE_RULE","TEXT","DECIMAL","INTEGER","LONG","TIME","URL","HTML","schemaHeaderFactory","fieldTypes","ruleTypes","valueTypes","templateKey_header","transclude","schemaHeader","_returnType","_operateRule","rules","showHtmlData","copy","addField","newFieldMap","fields","field","eval","complexValues","fieldMap","rule","_requiredRule","_tipRule","requiredRule","tipRule","schemaFactory","templateKey_label","templateKey_input","templateKey_date","templateKey_datetime","templateKey_textarea","templateKey_select","templateKey_radio","templateKey_checkbox","templateKey_multiComplex","templateKey_complex","templateKey_multiComplex_tip","bindToController","controllerAs","$$hastip","$$complex","ctrl","refresh","schema","$$from","checkboxValue","contains","obj","isSelected","delField","_setCheckValues","_resetMultiComplex","_resetComplex","tempValues","tempFieldMap","tempField","complexValue","isEmpty","log","_valueTypeRule","_disableRule","_readOnlyRule","_regexRule","_minLengthRule","_maxLengthRule","_minValueRule","_maxValueRule","_minInputNumRule","_maxInputNumRule","valueTypeRule","disableRule","dependGroup","readOnlyRule","regexRule","minLengthRule","isNaN","exProperty","unit","maxLengthRule","minValueRule","parseFloat","maxValueRule","minInputNumRule","maxInputNumRule","typeList","vpagination","templateKey","templateKeyNoData","defConfig","$$configNameForA","$$configNameForE","userConfigName","userConfig","userWithDefConfig","p","num","Number","totalPages","totalItems","elm","maxlength","$observe","intVal","$validate","$validators","modelValue","$isEmpty","getByteLength","byteLen","len","charCodeAt","minlength","maxvalue","test","Date","minvalue","maxinputnum","mininputnum","provider","$provide","getActionUrl","root","action","lastIndexOf","closureDataService","actions","ajaxService","DataResource","JSON","stringify","actionUrl","post","service","$get","register","childName","run","$vresources","$actions","$Ajax","AjaxService","$http","blockUI","$q","$inject","prototype","url","defer","then","alert","reject","resolve","promise","$ajax","messageService","show","CookieService","keys","language","company","channel","application","gentProps","key","val","arguments","set","$cookieStore","removeAll","MessageService","DISPLAY_TYPES","ALERT","NOTIFY","POP","CUSTOM","confirm","displayType","PermissionService","$rootScope","permissions","setPermissions","$broadcast","has","permission","trim","TranslateService","$translate","languages","en","zh","setLanguage","getBrowserLanguage","use","currentLang","navigator","browserLanguage","substr"],"mappings":"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","file":"voyageone.angular.com.js","sourcesContent":["define(function(){\n/**\n * @Description:\n * 弹出日期控件\n * @User:    Edward\n * @Version: 0.2.0, 2015-10-10\n */\n\nangular.module('voyageone.angular.controllers.datePicker', [])\n    .controller('datePickerCtrl', [\"$scope\", function ($scope) {\n        var vm = this;\n\n        vm.formats = ['yyyy-MM-dd', 'yyyy-MM-dd HH:mm:ss'];\n\n        $scope.formatDate = vm.formats[0];\n        $scope.formatDateTime = vm.formats[1];\n\n        $scope.open = open;\n\n        function open($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n\n            $scope.opened = true;\n        }\n    }]);\n/**\n * @Description:\n * select tables items\n * @User: linanbin\n * @Version: 2.0.0, 15/12/16\n */\n\nangular.module('voyageone.angular.controllers.selectRows', [])\n    .controller('selectRowsCtrl', [\"$scope\", function ($scope) {\n\n        $scope.selectAll = selectAll;\n        $scope.selectOne = selectOne;\n        $scope.isAllSelected = isAllSelected;\n\n        /**\n         * 全部选中当前页数据\n         * @param objectList\n         */\n        function selectAll(objectList, id) {\n\n            objectList.selAllFlag = !objectList.selAllFlag;\n            if(!id){\n                id=\"id\";\n            }\n\n            // 循环处理全选中的数据\n            angular.forEach(objectList.currPageRows, function (object) {\n\n                // 单签页面所有产品选中flag被标示\n                objectList.selFlag[object[id]] = objectList.selAllFlag;\n\n                if (objectList.hasOwnProperty('selList')) {\n\n                    var tempList = _.pluck(objectList.selList, id);\n                    if (objectList.selAllFlag && tempList.indexOf(object[id]) < 0) {\n                        objectList.selList.push(object);\n                    } else if (!objectList.selAllFlag && tempList.indexOf(object[id]) > -1) {\n                        objectList.selList.splice(tempList.indexOf(object[id]), 1);\n                    }\n                }\n            });\n        }\n\n        /**\n         * 选中单条数据\n         * @param currentId\n         * @param objectList\n         */\n        function selectOne(currentId, objectList, id) {\n            if(!id){\n                id=\"id\";\n            }\n            if (objectList.hasOwnProperty('selList')) {\n\n                angular.forEach(objectList.currPageRows, function(object) {\n\n                    var tempList = _.pluck(objectList.selList, id);\n                    if (_.isEqual(object[id], currentId)) {\n                        if (tempList.indexOf(object[id]) > -1) {\n                            objectList.selList.splice(tempList.indexOf(object[id]), 1);\n                        } else {\n                            objectList.selList.push(object);\n                        }\n                    }\n                });\n            }\n\n            objectList.selAllFlag = true;\n            tempList = _.pluck(objectList.selList, id);\n            angular.forEach(objectList.currPageRows, function(object) {\n                if (tempList.indexOf(object[id]) == -1) {\n                    objectList.selAllFlag = false;\n                }\n            })\n        }\n\n        /**\n         * 判断当前页是否为全选中\n         * @param objectList\n         * @param id\n         */\n        function isAllSelected (objectList, id) {\n            if(!id){\n                id=\"id\";\n            }\n\n            if (objectList != undefined) {\n\n                objectList.selAllFlag = true;\n                var tempList = _.pluck(objectList.selList, id);\n                angular.forEach(objectList.currPageRows, function(object) {\n                    if (tempList.indexOf(object[id]) == -1) {\n                        objectList.selAllFlag = false;\n                    }\n                });\n                return objectList.selAllFlag;\n            }\n\n            return false;\n        }\n    }]);\n/**\n * @Description:\n * 显示html的popover的共同方法\n * @User: linanbin\n * @Version: 2.0.0, 15/12/14\n */\n\nangular.module('voyageone.angular.controllers.showPopover', [])\n    .controller('showPopoverCtrl', [\"$scope\", function ($scope) {\n\n        $scope.showInfo = showInfo;\n\n        function showInfo(values) {\n            var tempHtml = \"\";\n\n            angular.forEach(values, function (data, index) {\n                tempHtml += data;\n                if (index !== values.length) {\n                    tempHtml += \"<br>\";\n                }\n            });\n            return tempHtml\n        }\n    }]);\n\n/**\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.dialogs', [])\n  .factory(\"$dialogs\", [\"$modal\", \"$filter\", \"$templateCache\", function ($modal, $filter, $templateCache) {\n\n    var templateName = 'voyageone.angular.factories.dialogs.tpl.html';\n    $templateCache.put(templateName, '<div class=\"vo_modal\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" ng-click=\"close()\"><span aria-hidden=\"true\"><i ng-click=\"close()\" class=\"fa fa-close\"></i></span></button><h4 class=\"modal-title\" ng-bind-html=\"title\"></h4></div><div class=\"modal-body wrapper-lg\"><div class=\"row\"><p ng-bind-html=\"content\"></p></div></div><div class=\"modal-footer\"><button class=\"btn btn-default btn-sm\" ng-if=\"!isAlert\" ng-click=\"close()\" translate=\"BTN_COM_CANCEL\"></button><button class=\"btn btn-vo btn-sm\" ng-click=\"ok()\" translate=\"BTN_COM_OK\"></button></div></div>');\n\n    function tran(translationId, values) {\n      return $filter('translate')(translationId, values);\n    }\n\n    return function (options) {\n\n      if (!_.isObject(options)) throw \"arg type must be object\";\n\n      var values;\n\n      if (_.isObject(options.content)) {\n        values = options.content.values;\n        options.content = options.content.id;\n      }\n\n      options.title = tran(options.title);\n      options.content = tran(options.content, values);\n\n      var modalInstance = $modal.open({\n        templateUrl: templateName,\n        controller: [\"$scope\", function (scope) {\n          _.extend(scope, options);\n        }],\n        size: 'md'\n      });\n\n      options.close = function () {\n        modalInstance.dismiss('close')\n      };\n\n      options.ok = function () {\n        modalInstance.close('');\n      };\n\n      return modalInstance;\n    };\n  }])\n\n  .factory(\"alert\", [\"$dialogs\", function ($dialogs) {\n    return function (content, title) {\n      return $dialogs({\n        title: title || 'TXT_COM_ALERT',\n        content: content,\n        isAlert: true\n      });\n    };\n  }])\n\n  .factory(\"confirm\", [\"$dialogs\", function vConfirm($dialogs) {\n    return function (content, title) {\n      return $dialogs({\n        title: title || 'TXT_COM_CONFIRM',\n        content: content,\n        isAlert: false\n      });\n    };\n  }]);\n/**\n * @Date:    2015-11-16 20:51:05\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.factories.interceptor', [])\n    .factory('interceptorFactory', function () {\n\n        // 未知的系统错误\n        var UNKNOWN_CODE = \"5\";\n        // 和 JAVA 同步,系统通知前端自动跳转的特殊代码\n        var CODE_SYS_REDIRECT = \"SYS_REDIRECT\";\n        // 和 JAVA 同步,回话过期的信息\n        var MSG_TIMEOUT = \"300001\";\n\n        /**\n         * 对系统自动跳转的响应,执行跳转\n         * @param {{code:string,redirectTo:string}} res\n         * @returns {boolean}\n         */\n        function autoRedirect(res) {\n            if (res.code != CODE_SYS_REDIRECT) {\n                return false;\n            }\n            // 如果跳转数据异常,则默认跳转登陆页\n            location.href = res.redirectTo || '/login.html';\n            return true;\n        }\n\n        /**\n         * 对会话超时和未登录进行特殊处理\n         * @param {{code:string}} res\n         * @returns {boolean}\n         */\n        function sessionTimeout(res) {\n            if (res.code != MSG_TIMEOUT) {\n                return false;\n            }\n            // 会话超时,默认跳转到登陆页\n            location.href = '/login.html';\n            return true;\n        }\n\n        /**\n         * 处理位置的异常\n         * @param response\n         */\n        function unknownException(response) {\n\n            if (response.data.code !== UNKNOWN_CODE) {\n                return;\n            }\n\n            window.$$lastUnknow = response;\n            console.error('Server throw unknown exceptio. Message:', response.data.message);\n        }\n\n        return {\n            request: function (config) {\n                return config;\n            },\n            /**\n             * 响应拦截\n             * @param {{config:object, data:*, headers:function, status:number, statusText:string}} res\n             * @returns {*}\n             */\n            response: function (res) {\n                var result = res.data;\n\n                // 特殊处理部分内容\n                if (autoRedirect(result) || sessionTimeout(result)) {\n                    return res;\n                }\n\n                unknownException(res);\n\n                return res;\n            },\n            requestError: function (config) {\n                return config;\n            },\n            responseError: function (res) {\n            }\n        };\n    })\n    .config([\"$httpProvider\", function ($httpProvider) {\n        $httpProvider.interceptors.push('interceptorFactory');\n    }]);\n/**\n * Notify 的可用参数\n * {\n *    // whether to hide the notification on click\n *    clickToHide: true,\n *    // whether to auto-hide the notification\n *    autoHide: true,\n *    // if autoHide, hide after milliseconds\n *    autoHideDelay: 5000,\n *    // show the arrow pointing at the element\n *    arrowShow: true,\n *    // arrow size in pixels\n *    arrowSize: 5,\n *    // position defines the notification position though uses the defaults below\n *    position: '...',\n *    // default positions\n *    elementPosition: 'bottom left',\n *    globalPosition: 'top right',\n *    // default style\n *    style: 'bootstrap',\n *    // default class (string or [string])\n *    className: 'error',\n *    // show animation\n *    showAnimation: 'slideDown',\n *    // show animation duration\n *    showDuration: 400,\n *    // hide animation\n *    hideAnimation: 'slideUp',\n *    // hide animation duration\n *    hideDuration: 200,\n *    // padding between element and notification\n *    gap: 2\n * }\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.notify', [])\n\n    .factory('notify', [\"$filter\", function ($filter) {\n\n        /**\n         * @ngdoc function\n         * @name voNotify\n         * @description\n         * 自动关闭的弹出提示框\n         */\n        function notify(options) {\n\n            if (!options) return;\n            if (_.isString(options)) options = {message: options};\n            if (!_.isObject(options)) return;\n\n            var values;\n\n            // 为 translate 的格式化提供支持，检测类型并转换\n            if (_.isObject(options.message)) {\n\n                values = options.message.values;\n                options.message = options.message.id;\n            }\n\n            options.message = $filter('translate')(options.message, values);\n\n            return $.notify(options.message, options);\n        }\n\n        notify.success = function (message) {\n            return notify({message: message, className: \"success\"});\n        };\n\n        notify.warning = function (message) {\n            return notify({message: message, className: \"warning\"});\n        };\n\n        notify.danger = function (message) {\n            return notify({message: message, className: \"danger\"});\n        };\n\n        return notify;\n    }]);\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\nangular.module('voyageone.angular.factories.schema', [])\n\n    // 定义schemaHeaderFactory\n    .factory('schemaHeaderFactory', function () {\n        return function (config) {\n            var _schemaHeaderInfo = config ? config : {\n                isRequired: false,\n                //size: null,\n                isMultiComplex: false,\n                isComplex: false,\n                tipMsg: []\n            };\n\n            this.isRequired = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isRequired = value : _schemaHeaderInfo.isRequired;\n            };\n\n            //this.size = function (value) {\n            //    return value !== undefined ? _schemaHeaderInfo.size = value : _schemaHeaderInfo.size;\n            //};\n\n            this.isComplex = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isComplex = value : _schemaHeaderInfo.isComplex;\n            };\n\n            this.isMultiComplex = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isMultiComplex = value : _schemaHeaderInfo.isMultiComplex;\n            };\n\n            this.tipMsg = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.tipMsg.push(value) : _schemaHeaderInfo.tipMsg;\n            };\n\n            this.schemaHearInfo = _schemaHeaderInfo;\n        }\n    })\n\n    // 定义schemaFactory\n    .factory('schemaFactory', function () {\n\n        return function (config) {\n\n            var _schemaInfo = config ? config : {\n                type: null,\n                name: null,\n                rowNum: null,\n                isRequired: false,\n                checkValues: [],\n                tipMsg: [],\n                html: []\n            };\n\n            this.type = function (value) {\n                return value !== undefined ? _schemaInfo.type = value : _schemaInfo.type;\n            };\n\n            this.name = function (value) {\n                return value !== undefined ? _schemaInfo.name = value : _schemaInfo.name;\n            };\n\n            this.html = function (value) {\n                return value !== undefined ? _schemaInfo.html.push(value) : htmlToString(_schemaInfo.html);\n            };\n\n            this.isRequired = function (value) {\n                return value !== undefined ? _schemaInfo.isRequired = value : _schemaInfo.isRequired;\n            };\n\n            this.rowNum = function (value) {\n                return value !== undefined ? _schemaInfo.rowNum = value : _schemaInfo.rowNum;\n            };\n\n            this.tipMsg = function (value) {\n                return value !== undefined ? _schemaInfo.tipMsg.push(value) : _schemaInfo.tipMsg;\n            };\n\n            this.checkValues = function (value) {\n                return value !== undefined ? _schemaInfo.checkValues.push(value) : _schemaInfo.checkValues;\n            };\n\n            this.schemaInfo = function () {\n                return _schemaInfo;\n            };\n\n            function htmlToString (htmls) {\n                var result = \"\";\n                angular.forEach(htmls, function (html) {\n                    result += \" \" + html + \" \";\n                });\n                return result;\n            }\n        };\n    });\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 16/1/11\n */\n\nangular.module('voyageone.angular.factories.selectRows', [])\n\n    // selectRowsFactory\n    .factory('selectRowsFactory', function () {\n        return function (config) {\n            var _selectRowsInfo = config ? config : {\n                selAllFlag: false,\n                currPageRows: [],// [{id: \"12345\"}], [{id: \"123456\", name: \"test1\"}]\n                selFlag:[], // [{\"12345\": true}, {\"12346\": false}]\n                selList: [] // [{id: \"12345\"}], [{id: \"123456\", name: \"test1\"}]\n            };\n\n            this.selAllFlag = function (value) {\n                return value !== undefined ? _selectRowsInfo.selAllFlag = value : _selectRowsInfo.selAllFlag;\n            };\n\n            this.clearCurrPageRows = function () {\n                _selectRowsInfo.currPageRows = [];\n            };\n\n            this.currPageRows = function (value) {\n                return value !== undefined ? _selectRowsInfo.currPageRows.push(value) : _selectRowsInfo.currPageRows;\n            };\n\n            this.selFlag = function (value) {\n                return value !== undefined ? _selectRowsInfo.selFlag.push(value) : _selectRowsInfo.selFlag;\n            };\n\n            this.selList = function (value) {\n                return value !== undefined ? _selectRowsInfo.selList.push(value) : _selectRowsInfo.selList;\n            };\n\n            this.selectRowsInfo = _selectRowsInfo;\n        }\n    });\n/**\n * @User: Edward\n * @Version: 2.0.0, 2015-12-09\n */\n\nangular.module('voyageone.angular.factories.vpagination', [])\n    .factory('vpagination', function () {\n\n        /**\n         * 创建一个分页服务\n         * @param {{ curr: number, size: number, total: number, fetch: function }} config 配置\n         */\n        return function (config) {\n\n            var _pages, _lastTotal = 0, _showPages = [];\n\n            /**\n             * 返回总件数\n             * @returns {*}\n             */\n            this.getTotal = function () {\n                return config.total;\n            };\n\n            /**\n             * 返回当前页的开始和结束号\n             * @returns {{start: number, end: number}}\n             */\n            this.getCurr = function () {\n                return {\n                    pageNo: curr(),\n                    start: getCurrStartItems(),\n                    end: getCurrEndItems(),\n                    isFirst: isFirst(),\n                    isLast: isLast(),\n                    pages: createShowPages(),\n                    isShowStart: isShowStart(),\n                    isShowEnd: isShowEnd()\n                }\n            };\n\n            // 跳转到指定页\n            this.goPage = load;\n            // 返回总页数\n            this.getPageCount = getPages;\n            // 是否是当前页\n            this.isCurr = isCurr;\n\n            /**\n             * 跳转到指定页\n             * @param {number} page 页号\n             */\n            function load(page) {\n                page = page || config.curr;\n\n                if (page < 1 || page > getPages() || isCurr(page)) return;\n\n                config.curr = page;\n\n                config.fetch(page, config.size);\n            }\n\n            /**\n             * 初始化page列表\n             * @returns {Array}\n             */\n            function createShowPages () {\n\n                var minPage, maxPage, _showPages= [];\n                if (config.curr < config.showPageNo) {\n                    minPage = 1;\n                    if(_pages <= config.showPageNo) maxPage = _pages;\n                    else maxPage = config.showPageNo;\n                } else if (config.curr + 2 > _pages) {\n                    minPage = _pages + 1 - config.showPageNo;\n                    maxPage = _pages;\n                } else {\n                    minPage = config.curr + 3 - config.showPageNo;\n                    maxPage = config.curr + 2;\n                }\n\n                // 按照指定数量创建按钮\n                for (var i =  minPage; i <= maxPage; i++) {\n                    //scope.pages.push({num: 1, active: \"\", show: false});\n                    _showPages.push(i);\n                }\n\n                return _showPages;\n            }\n\n            /**\n             * 获取当前总页数\n             * @returns {number}\n             */\n            function getPages() {\n                if (_lastTotal != config.total) {\n                    _pages = parseInt(config.total / config.size) + ((config.total % config.size) > 0 ? 1 : 0);\n                    _lastTotal = config.total;\n                }\n                return _pages;\n            }\n\n            /**\n             * 返回当前页的起始号\n             * @returns {number}\n             */\n            function getCurrStartItems() {\n                return (config.curr - 1) * config.size + 1\n            }\n\n            /**\n             * 返回当前页的结束号\n             * @returns {number}\n             */\n            function getCurrEndItems() {\n                var currEndItems = config.curr * config.size;\n                return currEndItems <= config.total ? currEndItems : config.total;\n\n            }\n\n            /**\n             * 是否是最后一页\n             * @returns {boolean}\n             */\n            function isLast() {\n                return config.curr == getPages();\n            }\n\n            /**\n             * 是否是第一页\n             * @returns {boolean}\n             */\n            function isFirst() {\n                return config.curr == 1;\n            }\n\n            /**\n             * 是否是当前页\n             * @param page 页码\n             * @returns {boolean}\n             */\n            function isCurr(page) {\n                return config.curr == page;\n            }\n\n            function curr() {\n                return config.curr;\n            }\n\n            /**\n             * 是否显示开始...项目\n             * @returns {boolean}\n             */\n            function isShowStart () {\n                _showPages = createShowPages();\n                return _showPages[0] > 1\n            }\n\n            /**\n             * 是否显示结束...项目\n             * @returns {boolean}\n             */\n            function isShowEnd () {\n                _showPages = createShowPages();\n                return _showPages[_showPages.length - 1] < _pages;\n            }\n\n        };\n    });\n/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.dateModelFormat', [])\n    .directive('dateModelFormat', [\"$filter\", function ($filter) {\n        return {\n            restrict: \"A\",\n            require: 'ngModel',\n            link: function (scope, elem, attrs, ngModel) {\n                ngModel.$parsers.push(function (viewValue) {\n                    return $filter('date')(viewValue, attrs.dateModelFormat || 'yyyy-MM-dd HH:mm:ss');\n                });\n            }\n        };\n    }]);\n\n/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.directives.enterClick', [])\n  .directive('enterClick', function() {\n    return {\n      restrict: \"A\",\n      link: function(scope, elem, attr) {\n        $(elem).keyup(function(e) {\n          if (e.keyCode !== 13) return;\n\n          var selectExp = attr.enterClick;\n\n          var targetElem, handler = function() {\n            targetElem.click();\n          };\n\n          try {\n            targetElem = angular.element(selectExp);\n          } catch (e) {\n            targetElem = null\n          }\n\n          if (!targetElem || !targetElem.length) {\n            // 如果取不到元素，则尝试作为表达式执行\n            handler = function() {\n              scope.$eval(selectExp);\n            };\n          } else if (targetElem.attr(\"disabled\")) {\n            // 如果元素存在，但是是禁用状态的，放弃执行\n            return;\n          }\n\n          handler();\n        });\n      }\n    };\n  });\n\n/**\n * @Description:\n * 引入对上传框插件 fileStyle 的指令支持\n * @Date:    2015-11-19 17:35:22\n * @User:    Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.fileStyle', [])\n  .directive('fileStyle', function () {\n    return {\n      restrict: 'A',\n      controller: [\"$scope\", \"$element\", function ($scope, $element) {\n        var options = $element.data();\n        // old usage support\n        options.classInput = $element.data('classinput') || options.classInput;\n        if ($element.filestyle) {\n          $element.filestyle(options);\n        }\n      }]\n    };\n  });\n/**\n * @Description:\n * table中无数据范围的数据\n * @User: linanbin\n * @Version: 2.0.0, 15/12/11\n */\n\nangular.module('voyageone.angular.directives.ifNoRows', [])\n    .directive('ifNoRows', [\"$templateCache\", \"$compile\", function ($templateCache, $compile) {\n\n        var tempNoDataKey = \"voyageone.angular.directives.ifNoRows.tpl.html\";\n\n        // 没有数据显示警告\n        if (!$templateCache.get(tempNoDataKey)) {\n            $templateCache.put(tempNoDataKey,\n            '<div class=\"text-center text-hs\" id=\"noData\">\\n' +\n            '    <h4 class=\"text-vo\"><i class=\"icon fa fa-warning\"></i>&nbsp;{{\\'TXT_COM_WARNING\\' | translate}}</h4>\\n' +\n            '{{\\'TXT_COM_MSG_NO_DATE\\' | translate}}' +\n            '</dv>');\n        }\n\n        return {\n            restrict: \"A\",\n            replace: false,\n            scope: {\n                $$data: \"@ifNoRows\"\n            },\n            link: function (scope, element) {\n\n                scope.$parent.$watch(scope.$$data, function () {\n\n                    // 如果数据不存在则显示警告信息\n                    if(scope.$parent.$eval(scope.$$data)  == 0) {\n                        element.find(\"#noData\").remove();\n                        element.append($compile($templateCache.get(tempNoDataKey))(scope));\n                    } else {\n                        element.find(\"#noData\").remove();\n                    }\n                })\n            }\n        };\n    }]);\n\n/**\n * @Description:\n * 用于菜单目录二级展开\n * @User:    Jonas\n * @Version: 0.2.0, 2015-12-07\n */\n\nangular.module('voyageone.angular.directives.uiNav', [])\n    .directive('uiNav', function () {\n\n        return {\n            restrict: 'AC',\n            link: function(scope, el) {\n                var _window = $(window),\n                    _mb = 768,\n                    wrap = $('.app-aside'),\n                    next,\n                    backdrop = '.dropdown-backdrop';\n                // unfolded\n                el.on('click', 'a', function(e) {\n                    next && next.trigger('mouseleave.nav');\n                    var _this = $(this);\n                    _this.parent().siblings( \".active\" ).toggleClass('active');\n                    _this.next().is('ul') &&  _this.parent().toggleClass('active') &&  e.preventDefault();\n                    // mobile\n                    _this.next().is('ul') || ( ( _window.width() < _mb ) && $('.app-aside').removeClass('show off-screen') );\n                });\n\n                // folded & fixed\n                el.on('mouseenter', 'a', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                    if ( !$('.app-aside-fixed.app-aside-folded').length || ( _window.width() < _mb ) || $('.app-aside-dock').length) return;\n                    var _this = $(e.target)\n                        , top\n                        , w_h = $(window).height()\n                        , offset = 50\n                        , min = 150;\n\n                    !_this.is('a') && (_this = _this.closest('a'));\n                    if( _this.next().is('ul') ){\n                        next = _this.next();\n                    }else{\n                        return;\n                    }\n\n                    _this.parent().addClass('active');\n                    top = _this.parent().position().top + offset;\n                    next.css('top', top);\n                    if( top + next.height() > w_h ){\n                        next.css('bottom', 0);\n                    }\n                    if(top + min > w_h){\n                        next.css('bottom', w_h - top - offset).css('top', 'auto');\n                    }\n                    next.appendTo(wrap);\n\n                    next.on('mouseleave.nav', function(e){\n                        $(backdrop).remove();\n                        next.appendTo(_this.parent());\n                        next.off('mouseleave.nav').css('top', 'auto').css('bottom', 'auto');\n                        _this.parent().removeClass('active');\n                    });\n\n                    $('.smart').length && $('<div class=\"dropdown-backdrop\"/>').insertAfter('.app-aside').on('click', function(next){\n                        next && next.trigger('mouseleave.nav');\n                    });\n\n                });\n\n                wrap.on('mouseleave', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                });\n            }\n        };\n    });\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/24\n */\n\nangular.module('voyageone.angular.directives.schema', [])\n    // 定义fieldTypes\n    .constant('fieldTypes', {\n        INPUT: \"INPUT\",\n        DATE: \"DATE\",\n        DATETIME: \"DATETIME\",\n        TEXTAREA: \"TEXTAREA\",\n        SINGLE_CHECK: \"SINGLECHECK\",// 在complex中的显示select,以外的默认显示singlecheck,如果用户觉得select显示不方便,就将该field的type改成radio\n        RADIO: \"RADIO\",\n        MULTI_INPUT: \"MULTIINPUT\", // 没有被使用\n        MULTI_CHECK: \"MULTICHECK\",\n        COMPLEX: \"COMPLEX\", // TODO\n        MULTI_COMPLEX: \"MULTICOMPLEX\",\n        LABEL: \"LABEL\"  // 可以不显示\n    })\n    // 定义ruleTypes\n    .constant('ruleTypes', {\n        VALUE_TYPE_RULE: \"valueTypeRule\",\n        REQUIRED_RULE: \"requiredRule\",\n        DISABLE_RULE: \"disableRule\",\n        READ_ONLY_RULE: \"readOnlyRule\",\n        REGEX_RULE: \"regexRule\",\n        SET_RULE: \"setRule\", // TODO 暂时不知道怎么用\n        TIP_RULE: \"tipRule\", // TODO 不需要处理\n        DEV_TIP_RULE: \"devTipRule\", // 不需要处理\n        MIN_LENGTH_RULE: \"minLengthRule\",\n        MAX_LENGTH_RULE: \"maxLengthRule\",\n        MIN_VALUE_RULE: \"minValueRule\",\n        MAX_VALUE_RULE: \"maxValueRule\",\n        MIN_INPUT_NUM_RULE: \"minInputNumRule\",\n        MAX_INPUT_NUM_RULE: \"maxInputNumRule\",\n        MIN_DECIMAL_DIGITS_RULE: \"minDecimalDigitsRule\", // TODO\n        MAX_DECIMAL_DIGITS_RULE: \"maxDecimalDigitsRule\", // TODO\n        MIN_TARGET_SIZE_RULE: \"minTargetSizeRule\", // TODO\n        MAX_TARGET_SIZE_RULE: \"maxTargetSizeRule\", // TODO\n        MIN_IMAGE_SIZE_RULE: \"minImageSizeRule\", // TODO\n        MAX_IMAGE_SIZE_RULE: \"maxImageSizeRule\" // TODO\n    })\n    // 定义valueTypes\n    .constant('valueTypes', {\n        TEXT: \"text\",\n        DECIMAL: \"decimal\",\n        INTEGER: \"integer\",\n        LONG: \"long\",\n        DATE: \"date\",\n        TIME: \"time\",\n        URL: \"url\",\n        TEXTAREA: \"textarea\",\n        HTML: \"html\"\n    })\n\n    .directive('schemaHeader', [\"$templateCache\", \"schemaHeaderFactory\", \"fieldTypes\", \"ruleTypes\", \"valueTypes\", function ($templateCache, schemaHeaderFactory, fieldTypes, ruleTypes, valueTypes) {\n\n        // 定义header\n        var templateKey_header = \"voyageone.angular.directives.schemaHeader.tpl.html\";\n        if (!$templateCache.get(templateKey_header)) {$templateCache.put(templateKey_header\n            , '<div class=\"form-group\">' +\n              '  <label class=\"col-sm-2 control-label\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" ng-bind=\"$$data.name\"></label>' +\n              '  <div class=\"col-sm-8\" ng-class=\"{\\'modal-open\\' : showHtmlData.isMultiComplex, \\'hierarchy_main\\': showHtmlData.isComplex}\" ng-transclude></div>' +\n              '  <div class=\"col-sm-2\" ng-if=\"showHtmlData.isMultiComplex\"><button class=\"btn btn-success\" ng-click=\"addField($$data)\"><i class=\"fa fa-plus\"></i>{{\\'BTN_COM_ADD\\' | translate}}</button></div>' +\n              '  <div class=\"row\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><div class=\"col-sm-8 col-sm-offset-2 text-warnings\"><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div></div>' +\n              '</div>');}\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            transclude: true,\n            templateUrl: templateKey_header,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope) {\n                var schemaHeader = new schemaHeaderFactory();\n\n                _returnType (scope.$$data.type);\n                _operateRule (scope.$$data.rules);\n                scope.showHtmlData = angular.copy(schemaHeader.schemaHearInfo);\n\n                /**\n                 * 设置multi complex添加一条新记录\n                 * @param data\n                 */\n                scope.addField= function (data) {\n                    var newFieldMap = {};\n                    angular.forEach(data.fields, function (field) {\n                        eval(\"newFieldMap.\" + field.id + \"=field\");\n                    });\n\n                    data.complexValues.push({fieldMap: angular.copy(newFieldMap)});\n                };\n\n                /**\n                 * 返回需要展示的页面样式\n                 * @param type\n                 * @param valueTypeRule\n                 * @private\n                 */\n                function _returnType (type) {\n\n                    switch (type) {\n                        case fieldTypes.MULTI_COMPLEX:\n                            schemaHeader.isMultiComplex(true);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            schemaHeader.isComplex(true);\n                            break;\n                    }\n                }\n\n                /**\n                 * 处理rules\n                 * @param rules\n                 * @private\n                 */\n                function _operateRule (rules) {\n                    angular.forEach(rules, function (rule) {\n                        switch (rule.name) {\n                            case ruleTypes.REQUIRED_RULE:\n                                _requiredRule(rule);\n                                break;\n                            case ruleTypes.TIP_RULE:\n                                _tipRule(rule);\n                                break;\n                        }\n                    })\n\n                }\n\n                /**\n                 * 处理requiredRule\n                 * @param requiredRule\n                 * @private\n                 */\n                function _requiredRule (requiredRule) {\n                    if (\"true\" == requiredRule.value) {\n                        schemaHeader.isRequired(true);\n                    }\n                }\n\n                /**\n                * 处理tipRule\n                * @param tipRule\n                * @private\n                */\n                function _tipRule (tipRule) {\n                    schemaHeader.tipMsg(tipRule.value);\n                }\n            }\n        }\n    }])\n\n    .directive('schemaItem', [\"$templateCache\", \"$compile\", \"schemaFactory\", \"fieldTypes\", \"ruleTypes\", \"valueTypes\", function ($templateCache, $compile, schemaFactory, fieldTypes, ruleTypes, valueTypes) {\n\n        // label\n        var templateKey_label = \"voyageone.angular.directives.schemaLabel.tpl.html\";\n        if (!$templateCache.get(templateKey_label)) {$templateCache.put(templateKey_label,\n            '<input style=\"min-width: 150px; max-width: 250px;\" type=\"text\" readonly ng-model=\"vm.$$data.value\" class=\"form-control inherited\">');}\n\n        // input\n        var templateKey_input = \"voyageone.angular.directives.schemaInput.tpl.html\";\n        if (!$templateCache.get(templateKey_input)) {$templateCache.put(templateKey_input,\n            '<input style=\"min-width: 150px; max-width: 250px;\" ng-model=\"vm.$$data.value\" class=\"form-control inherited\" replaceInfo>');}\n\n        // data\n        var templateKey_date = \"voyageone.angular.directives.schemaDate.tpl.html\";\n        if (!$templateCache.get(templateKey_date)) {$templateCache.put(templateKey_date,\n            '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input replaceInfo type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDate}}\" ng-model=\"$parent.vm.$$data.value\" date-model-format=\"{{formatDate}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button replaceInfo type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>');}\n\n        // datetime\n        var templateKey_datetime = \"voyageone.angular.directives.schemaDatetime.tpl.html\";\n        if (!$templateCache.get(templateKey_datetime)) {$templateCache.put(templateKey_datetime,\n            '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input replaceInfo type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDateTime}}\" ng-model=\"$parent.vm.$$data.value\" date-model-format=\"{{formatDateTime}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button replaceInfo type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>');}\n\n        // textarea\n        var templateKey_textarea = \"voyageone.angular.directives.schemaTextarea.tpl.html\";\n        if (!$templateCache.get(templateKey_textarea)) {$templateCache.put(templateKey_textarea,\n            '<textarea style=\"min-width: 150px; max-width: 650px;\" class=\"form-control no-resize\" ng-model=\"vm.$$data.value\" rows=\"{{showHtmlData.rowNum}}\" replaceInfo></textarea>');}\n\n        // single check-select\n        var templateKey_select = \"voyageone.angular.directives.schemaSelect.tpl.html\";\n        if (!$templateCache.get(templateKey_select)) {$templateCache.put(templateKey_select,\n            '<select style=\"min-width: 150px; max-width: 250px;\" replaceInfo class=\"form-control\" ng-model=\"vm.$$data.value.value\" ng-options=\"option.value as option.displayName for option in vm.$$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');}\n\n        // single check-radio\n        var templateKey_radio = \"voyageone.angular.directives.schemaRadio.tpl.html\";\n        if (!$templateCache.get(templateKey_radio)) {$templateCache.put(templateKey_radio,\n            '<label class=\"checkbox-inline c-radio\" ng-repeat=\"option in vm.$$data.options\"><input name=\"{{vm.$$data.id}}\" type=\"radio\" ng-value=\"option.value\" ng-model=\"vm.$$data.value.value\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>');}\n\n        // multi check-checkbox\n        var templateKey_checkbox = \"voyageone.angular.directives.schemaCheckbox.tpl.html\";\n        if (!$templateCache.get(templateKey_checkbox)) {$templateCache.put(templateKey_checkbox,\n            '<label class=\"checkbox-inline c-checkbox\" ng-repeat=\"option in vm.$$data.options\"><input type=\"checkbox\" ng-value=\"option.value\" ng-click=\"checkboxValue(option.value)\" ng-checked=\"isSelected(option.value)\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>');}\n\n        // multi complex\n        var templateKey_multiComplex = \"voyageone.angular.directives.schemaMultiComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_multiComplex)) {$templateCache.put(templateKey_multiComplex,\n            '<table class=\"table text-center\">' +\n            '<thead><tr>' +\n                //'<schema-header ng-repeat=\"field in vm.$$data.fields\" data=\"field\" is-complex=\"true\"></schema-header>' +\n            '<th ng-repeat=\"field in vm.$$data.fields\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" class=\"text-center\" style=\"min-width: 180px;\">{{field.name}}</th>' +\n            '<th style=\"min-width: 60px;\" class=\"text-center\" translate=\"TXT_COM_EDIT\"></th>' +\n            '</tr></thead>' +\n            '<tbody><tr ng-repeat=\"value in vm.$$data.complexValues\">' +\n            '<td class=\"text-left\" ng-repeat=\"field in value.fieldMap\"><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></td>' +\n            '<td style=\"min-width: 60px;\"><button title=\"{\\'BTN_COM_DELETE\\' | translate}\" class=\"btn btn-danger btn-xs\" ng-click=\"delField($index)\"><i class=\"fa  fa-trash-o\"></i></button></td>' +\n            '</tr></tbody>' +\n            '</table>');}\n\n        // complex\n        var templateKey_complex = \"voyageone.angular.directives.schemaComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_complex)) {$templateCache.put(templateKey_complex,\n            '<schema-header ng-repeat=\"field in vm.$$data.fields\" data=\"field\"><schema-item data=\"field\"></schema-item></schema-header>');}\n\n        // multi complex tip\n        var templateKey_multiComplex_tip = \"voyageone.angular.directives.schemaMultiComplexTip.tpl.html\";\n        if (!$templateCache.get(templateKey_multiComplex_tip)) {$templateCache.put(templateKey_multiComplex_tip,\n            '<div class=\"text-warnings\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><br><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div>');}\n\n        return {\n            restrict: \"E\",\n            require: ['^?form'],\n            replace: true,\n            bindToController: true,\n            controllerAs: \"vm\",\n            controller: function () {},\n            scope: {\n                $$data: \"=data\",\n                $$hastip: \"=hastip\",\n                $$complex: \"=complex\"\n            },\n            link: function (scope, element, ctrl) {\n\n                // 监视配置变动\n                scope.$watch('vm.$$data', function () {\n                    refresh ();\n                });\n\n                function refresh () {\n\n                    var schema = new schemaFactory();\n                    scope.vm.$$from = ctrl;\n\n                    // 设置空间name\n                    schema.name(scope.vm.$$data.id);\n\n                    _returnType (scope.vm.$$data.type);\n                    _operateRule (scope.vm.$$data.rules);\n\n                    var tempHtml = \"\";\n                    // 拼接body\n                    switch (schema.type()) {\n                        case fieldTypes.INPUT:\n                            tempHtml = $templateCache.get(templateKey_input).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.DATE:\n                            tempHtml = $templateCache.get(templateKey_date).replace(\"replaceInfo\", schema.html()).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.DATETIME:\n                            tempHtml = $templateCache.get(templateKey_datetime).replace(\"replaceInfo\", schema.html()).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.TEXTAREA:\n                            tempHtml = $templateCache.get(templateKey_textarea).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.SINGLE_CHECK:\n                            tempHtml = $templateCache.get(templateKey_select).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.RADIO:\n                            tempHtml = $templateCache.get(templateKey_radio).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.MULTI_CHECK:\n                            tempHtml = $templateCache.get(templateKey_checkbox).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.LABEL:\n                            tempHtml = $templateCache.get(templateKey_label);\n                            break;\n                        case fieldTypes.MULTI_COMPLEX:\n                            tempHtml = $templateCache.get(templateKey_multiComplex);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            tempHtml = $templateCache.get(templateKey_complex);\n                            break;\n                    }\n\n                    // 添加规则说明\n                    if (schema.tipMsg() != null && scope.vm.$$hastip) {\n                        tempHtml += $templateCache.get(templateKey_multiComplex_tip);\n                    }\n                    scope.showHtmlData = angular.copy(schema.schemaInfo());\n                    element.html($compile(tempHtml)(scope));\n\n                    /**\n                     * 设置checkbox被选中的value值处理\n                     * @param value\n                     */\n                    scope.checkboxValue = function (value) {\n                        if (_.contains(scope.showHtmlData.checkValues, value)) {\n                            scope.showHtmlData.checkValues.splice(_.indexOf(scope.showHtmlData.checkValues, value), 1);\n                        } else {\n                            scope.showHtmlData.checkValues.push(value);\n                        }\n                        scope.vm.$$data.values = [];\n                        angular.forEach(scope.showHtmlData.checkValues, function (obj) {\n                            scope.vm.$$data.values.push({id: null, value: obj});\n                        })\n                    };\n\n                    /**\n                     * 判断是否被选中\n                     * @param value\n                     */\n                    scope.isSelected = function (value) {\n                        return _.contains(scope.showHtmlData.checkValues, value)\n                    };\n\n                    /**\n                     * 设置multi complex删除该条记录\n                     * @param index\n                     */\n                    scope.delField = function (index) {\n                        scope.vm.$$data.complexValues.splice(index, 1);\n                    };\n\n                    /**\n                     * 返回需要展示的页面样式\n                     * @param type\n                     * @param valueTypeRule\n                     * @private\n                     */\n                    function _returnType (type) {\n                        schema.type(type);\n                        switch (type) {\n                            case fieldTypes.RADIO:\n                                if (scope.vm.$$complex)\n                                    schema.type(fieldTypes.SINGLE_CHECK);\n                                break;\n                            case fieldTypes.MULTI_CHECK:\n                                _setCheckValues(scope.vm.$$data.values);\n                                break;\n                            case fieldTypes.MULTI_COMPLEX:\n                                scope.vm.$$data.complexValues = _resetMultiComplex(scope.vm.$$data);\n                                break;\n                            case fieldTypes.COMPLEX:\n                                _resetComplex(scope.vm.$$data);\n                                break;\n                        }\n                    }\n\n                    /**\n                     * 设置checkvalues\n                     * @param values\n                     * @private\n                     */\n                    function _setCheckValues (values) {\n                        if (values != undefined && values != null) {\n                            angular.forEach(values, function (obj) {\n                                schema.checkValues(obj.value);\n                            })\n                        }\n                    }\n\n                    /**\n                     * 重新设置multicomplex的一些属性\n                     * @param fields\n                     * @private\n                     */\n                    function _resetMultiComplex (data) {\n                        var tempValues = [];\n                        angular.forEach(data.complexValues, function (value) {\n                            var tempFieldMap = {};\n                            angular.forEach(data.fields, function (field) {\n                                var tempField = angular.copy(field);\n                                if (value.fieldMap[field.id] != undefined) {\n                                    switch (field.type) {\n                                        case fieldTypes.INPUT:\n                                        case fieldTypes.LABEL:\n                                        case fieldTypes.DATE:\n                                        case fieldTypes.DATETIME:\n                                        case fieldTypes.TEXTAREA:\n                                        case fieldTypes.SINGLE_CHECK:\n                                        case fieldTypes.RADIO:\n                                            tempField.value = value.fieldMap[field.id].value;\n                                            break;\n                                        case fieldTypes.MULTI_INPUT:\n                                        case fieldTypes.MULTI_CHECK:\n                                            tempField.values = value.fieldMap[field.id].values;\n                                            break;\n                                        case fieldTypes.COMPLEX:\n                                            tempField.complexValue = value.fieldMap[field.id].complexValue;\n                                            break;\n                                        case fieldTypes.MULTI_COMPLEX:\n                                            tempField.complexValues = value.fieldMap[field.id].complexValues;\n                                            break;\n                                    }\n                                }\n                                tempFieldMap[field.id] = tempField;\n                            });\n                            tempValues.push({fieldMap: angular.copy(tempFieldMap)});\n                        });\n\n                        // 如果values为空,默认添加空白行\n                        if (_.isEmpty(data.complexValues)) {\n                            var newFieldMap = {};\n                            angular.forEach(data.fields, function (field) {\n                                console.log(field);\n                                eval(\"newFieldMap.\" + field.id + \"=field\");\n                            });\n\n                            tempValues.push({fieldMap: angular.copy(newFieldMap)});\n                        }\n\n                        return tempValues;\n                    }\n\n                    /**\n                     * 重新\n                     * @param data\n                     * @private\n                     */\n                    function _resetComplex (data) {\n                        angular.forEach(data.fields, function (field) {\n                            switch (field.type) {\n                                case fieldTypes.INPUT:\n                                case fieldTypes.LABEL:\n                                case fieldTypes.DATE:\n                                case fieldTypes.DATETIME:\n                                case fieldTypes.TEXTAREA:\n                                case fieldTypes.SINGLE_CHECK:\n                                case fieldTypes.RADIO:\n                                    field.value = data.complexValue.fieldMap[field.id].value;\n                                    break;\n                                case fieldTypes.MULTI_INPUT:\n                                case fieldTypes.MULTI_CHECK:\n                                    field.values = data.complexValue.fieldMap[field.id].values;\n                                    break;\n                                case fieldTypes.COMPLEX:\n                                    field.complexValue = data.complexValue.fieldMap[field.id].complexValue;\n                                    break;\n                                case fieldTypes.MULTI_COMPLEX:\n                                    field.complexValues = data.complexValue.fieldMap[field.id].complexValues;\n                                    break;\n                            }\n                        });\n                    }\n\n                    /**\n                     * 处理rules\n                     * @param rules\n                     * @private\n                     */\n                    function _operateRule (rules) {\n                        angular.forEach(rules, function (rule) {\n                            switch (rule.name) {\n                                case ruleTypes.VALUE_TYPE_RULE:\n                                    _valueTypeRule(rule);\n                                    break;\n                                case ruleTypes.REQUIRED_RULE:\n                                    _requiredRule(rule);\n                                    break;\n                                case ruleTypes.DISABLE_RULE:\n                                    _disableRule(rule);\n                                    break;\n                                case ruleTypes.READ_ONLY_RULE:\n                                    _readOnlyRule(rule);\n                                    break;\n                                case ruleTypes.REGEX_RULE:\n                                    _regexRule(rule);\n                                    break;\n                                case ruleTypes.TIP_RULE:\n                                    _tipRule(rule);\n                                    break;\n                                case ruleTypes.MIN_LENGTH_RULE:\n                                    _minLengthRule(rule);\n                                    break;\n                                case ruleTypes.MAX_LENGTH_RULE:\n                                    _maxLengthRule(rule);\n                                    break;\n                                case ruleTypes.MIN_VALUE_RULE:\n                                    _minValueRule(rule);\n                                    break;\n                                case ruleTypes.MAX_VALUE_RULE:\n                                    _maxValueRule(rule);\n                                    break;\n                                case ruleTypes.MIN_INPUT_NUM_RULE:\n                                    _minInputNumRule(rule);\n                                    break;\n                                case ruleTypes.MAX_INPUT_NUM_RULE:\n                                    _maxInputNumRule(rule);\n                                    break;\n                            }\n                        })\n                    }\n\n                    /**\n                     * 处理valueTypeRule\n                     * @param valueTypeRule\n                     * @private\n                     */\n                    function _valueTypeRule (valueTypeRule) {\n                        switch (valueTypeRule.value) {\n                            case valueTypes.TEXT:\n                            case valueTypes.DECIMAL:\n                            case valueTypes.INTEGER:\n                            case valueTypes.LONG:\n                                schema.type(fieldTypes.INPUT);\n                                schema.html(\"type=\\\"text\\\"\");\n                                break;\n                            case valueTypes.DATE:\n                                schema.type(fieldTypes.DATE);\n                                break;\n                            case valueTypes.TIME:\n                                schema.type(fieldTypes.DATETIME);\n                                break;\n                            case valueTypes.URL:\n                                schema.type(fieldTypes.INPUT);\n                                schema.html(\"type=\\\"url\\\"\");\n                                break;\n                            case valueTypes.TEXTAREA:\n                                schema.type(fieldTypes.TEXTAREA);\n                                schema.rowNum(4);\n                                break;\n                            case valueTypes.HTML:\n                                schema.type(fieldTypes.TEXTAREA);\n                                schema.rowNum(10);\n                                break;\n                        }\n                    }\n\n                    /**\n                     * 处理requiredRule\n                     * @param requiredRule\n                     * @private\n                     */\n                    function _requiredRule (requiredRule) {\n                        if (\"true\" == requiredRule.value) {\n                            schema.isRequired(true);\n                            schema.html(\"required\");\n                        }\n                    }\n\n                    /**\n                     * 处理disableRule\n                     * @param disableRule\n                     * @private\n                     */\n                    function _disableRule (disableRule) {\n                        if (\"true\" == disableRule.value\n                            && disableRule.dependGroup == null) {\n                            schema.html(\"ng-disabled=\\\"true\\\"\");\n                        }\n                    }\n\n                    /**\n                     * 处理readOnlyRule\n                     * @param readOnlyRule\n                     * @private\n                     */\n                    function _readOnlyRule (readOnlyRule) {\n                        if (\"true\" == readOnlyRule.value) {\n                            schema.html(\"readonly\");\n                        }\n                    }\n\n                    /**\n                     * 处理regexRule\n                     * @param regexRule\n                     * @private\n                     */\n                    function _regexRule (regexRule) {\n                        schema.html(\"ng-pattern=\\\"/\" + regexRule.value +\"/\\\"\");\n                    }\n\n                    /**\n                     * 处理tipRule\n                     * @param tipRule\n                     * @private\n                     */\n                    function _tipRule (tipRule) {\n                        schema.tipMsg(tipRule.value);\n                    }\n\n                    /**\n                     * 处理minLengthRule\n                     * @param minLengthRule\n                     * @private\n                     */\n                    function _minLengthRule (minLengthRule) {\n                        var value = isNaN(parseInt(minLengthRule.value)) ? 0 : minLengthRule.value;\n\n                        if (\"not include\" === minLengthRule.exProperty)\n                            value = (value > 0) ? value -1 : 0;\n\n                        if (\"character\" == minLengthRule.unit)\n                            schema.html(\"ng-minlength=\\\"\" + value +\"\\\"\");\n                        else\n                            schema.html(\"ng-char-minlength=\\\"\" + value +\"\\\"\");\n                    }\n\n                    /**\n                     * 处理maxLengthRule\n                     * @param maxLengthRule\n                     * @private\n                     */\n                    function _maxLengthRule (maxLengthRule) {\n                        var value = isNaN(parseInt(maxLengthRule.value)) ? 0 : maxLengthRule.value;\n\n                        if (\"not include\" === maxLengthRule.exProperty)\n                            value = (value > 0) ? value -1 : 0;\n\n                        if (\"character\" == maxLengthRule.unit)\n                            schema.html(\"ng-maxlength=\\\"\" + value +\"\\\"\");\n                        else\n                            schema.html(\"ng-char-maxlength=\\\"\" + value +\"\\\"\");\n                    }\n\n                    /**\n                     * 处理minValueRule\n                     * @param minValueRule\n                     * @private\n                     */\n                    function _minValueRule (minValueRule) {\n                        var value = isNaN(parseFloat(minValueRule.value)) ? 0 : parseFloat(minValueRule.value);\n\n                        if (\"not include\" === minValueRule.exProperty)\n                            value = (value > 0) ? value - 0.01 : 0;\n\n                        schema.html(\"ng-minvalue=\\\"\" + value +\"\\\"\");\n                    }\n\n                    /**\n                     * 处理maxValueRule\n                     * @param maxValueRule\n                     * @private\n                     */\n                    function _maxValueRule (maxValueRule) {\n                        var value = isNaN(parseFloat(maxValueRule.value)) ? 0 : parseFloat(maxValueRule.value);\n\n                        if (\"not include\" === maxValueRule.exProperty)\n                            value = (value > 0) ? value - 0.01 : 0;\n\n                        schema.html(\"ng-maxvalue=\\\"\" + value +\"\\\"\");\n\n                    }\n\n                    /**\n                     * 处理minInputNumRule\n                     * @param minInputNumRule\n                     * @private\n                     */\n                    function _minInputNumRule (minInputNumRule) {\n                        var value = isNaN(parseInt(minInputNumRule.value)) ? 0 : parseInt(minInputNumRule.value);\n\n                        if (\"not include\" === minInputNumRule.exProperty)\n                            value = (value > 0) ? value - 1 : 0;\n\n                        schema.html(\"ng-mininputnum=\\\"\" + value +\"\\\"\");\n                    }\n\n                    /**\n                     * 处理maxInputNumRule\n                     * @param maxInputNumRule\n                     * @private\n                     */\n                    function _maxInputNumRule (maxInputNumRule) {\n                        var value = isNaN(parseInt(maxInputNumRule.value)) ? 0 : parseInt(maxInputNumRule.value);\n\n                        if (\"not include\" === maxInputNumRule.exProperty)\n                            value = (value > 0) ? value - 1 : 0;\n\n                        schema.html(\"ng-maxinputnum=\\\"\" + value +\"\\\"\");\n                    }\n\n                    /**\n                     * 如果checkbox被选中,返回被选中的value.\n                     * eg.[{new: true, pending: false, approved: true}] -> [new, approved]\n                     * @param object\n                     * @returns {*}\n                     */\n                    //function _returnKey(object) {\n                    //    var result = [];\n                    //    angular.forEach(object, function(value, index) {\n                    //        if (value) result.push(index);\n                    //    });\n                    //    return result;\n                    //}\n                }\n            }\n        }\n    }]);\n\n/**\n * @Description:\n * 用于动态显示options\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-22\n */\n\nangular.module('voyageone.angular.directives.voption', [])\n    .directive('voption', [\"$templateCache\", \"$compile\", function ($templateCache, $compile) {\n\n        var templateKey_select = \"voyageone.angular.directives.optionSelect.tpl.html\";\n\n        // 显示成select样式\n        if (!$templateCache.get(templateKey_select)) {\n            $templateCache.put(templateKey_select,\n                '<select class=\"form-control\" ng-model=\"$$data.value.value\" ng-options=\"option.value as option.displayName for option in $$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');\n        }\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope, element) {\n\n                // 定义不同的展示种类\n                var typeList = {\n                    SINGLE_CHECK: \"SINGLECHECK\"\n                };\n\n                // 监视配置变动\n                scope.$watch('$$data', function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 根据type选择展示不同的控件\n                 */\n                function refresh() {\n                    var tempHtml;\n                    switch (scope.$$data.type) {\n                        case typeList.SINGLE_CHECK:\n                            tempHtml = $compile($templateCache.get(templateKey_select))(scope);\n                            break;\n                    }\n                    element.html(tempHtml);\n                }\n            }\n        };\n    }]);\n/**\n * @Description:\n * 用于分页\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-08\n */\n\nangular.module('voyageone.angular.directives.vpagination', [])\n    .directive('vpagination', [\"$templateCache\", \"$compile\", \"vpagination\", function ($templateCache, $compile, vpagination) {\n\n        var templateKey = \"voyageone.angular.directives.pagination.tpl.html\";\n        var templateKeyNoData = \"voyageone.angular.directives.paginationNoData.tpl.html\";\n\n        // 有数据分页样式\n        if (!$templateCache.get(templateKey)) {\n            $templateCache.put(templateKey,\n                '<div class=\"col-sm-2\">\\n' +\n                '    <div class=\"page-main form-inline\">{{\\'TXT_COM_SHOWING_NO\\' | translate}}&nbsp;<input class=\"text-center\" type=\"text\" ng-model=\"curr.pageNo\"/>&nbsp;/&nbsp;{{totalPages}}&nbsp;{{\\'TXT_COM_PAGE\\' | translate}}&nbsp;' +\n                '        <button class=\"btn btn-xs btn-default\" type=\"button\" ng-click=\"goPage(curr.pageNo)\" translate=\"BTN_GO\"></button>\\n' +\n                '    </div>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-7 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_COM_SHOWING\\' | translate}}&nbsp;{{curr.start}}-{{curr.end}}&nbsp;{{\\'TXT_COM_OF\\' | translate}}&nbsp;{{totalItems}}&nbsp{{\\'TXT_COM_ITEMS\\' | translate}}</small>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-3 text-right text-center-xs\"><div>' +\n                '    <ul class=\"pagination-sm m-t-none m-b pagination ng-isolate-scope ng-valid ng-dirty ng-valid-parse\">\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-first\"><a href ng-click=\"goPage(1)\" ng-disabled=\"curr.isFirst\">&laquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-prev\"><a href ng-click=\"goPage(curr.pageNo - 1)\" ng-disabled=\"curr.isFirst\">&lsaquo;</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowStart\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-repeat=\"page in curr.pages track by $index\" ng-class=\"{active: isCurr(page)}\" class=\"pagination-page\"><a href ng-click=\"goPage(page)\">{{page}}</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowEnd\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-next\"><a href ng-click=\"goPage(curr.pageNo + 1)\" ng-disabled=\"curr.isLast\">&rsaquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-last\"><a href ng-click=\"goPage(totalPages)\" ng-disabled=\"curr.isLast\">&raquo;</a></li>\\n' +\n                '    </ul>\\n' +\n                '</div>');\n        }\n\n        // 无数据分页样式\n        if (!$templateCache.get(templateKeyNoData)) {\n            $templateCache.put(templateKeyNoData,\n                '<div class=\"col-sm-7 col-sm-offset-2 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_COM_SHOWING\\' | translate}}&nbsp;0-0&nbsp;{{\\'TXT_COM_OF\\' | translate}}&nbsp;0&nbsp{{\\'TXT_COM_ITEMS\\' | translate}}</small>\\n' +\n                '</div>');\n        }\n\n        var defConfig = {curr: 1, total: 0, size: 20, showPageNo:5};\n\n        return {\n            restrict: \"AE\",\n            //templateUrl: templateKey,\n            replace: false,\n            scope: {\n                $$configNameForA: \"@vpagination\",\n                $$configNameForE: \"@config\"\n            },\n            link: function (scope, element) {\n\n                // 获取用户的config配置\n                var userConfigName = scope.$$configNameForA || scope.$$configNameForE;\n                var userConfig = scope.$parent.$eval(userConfigName);\n\n                // 将用户配置覆盖到默认配置后，在重新覆盖到用户配置上，用于补全配置属性\n                var userWithDefConfig = angular.extend({}, defConfig, userConfig);\n                scope.config = angular.extend(userConfig, userWithDefConfig);\n\n                var p = new vpagination(scope.config);\n\n                // 监视配置变动\n                scope.$parent.$watch(userConfigName, function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 跳转到指定页\n                 * @param num\n                 */\n                scope.goPage = function (num) {\n                    p.goPage(isNaN(Number(num)) ? 1 : Number(num));\n                };\n\n                /**\n                 * 判断是否是当前页\n                 * @param num\n                 * @returns {*|boolean}\n                 */\n                scope.isCurr = function (num) {\n                    return p.isCurr(num);\n                };\n\n                function refresh() {\n\n                    // 获取总页数\n                    scope.totalPages = p.getPageCount();\n                    // 获取总items数\n                    scope.totalItems = p.getTotal();\n                    // 获取当前页的信息\n                    scope.curr = p.getCurr();\n\n                    // 根据总数量显示不同的分页样式\n                    var tempHtml;\n                    if(p.getTotal() == 0) {\n                        tempHtml = $compile($templateCache.get(templateKeyNoData))(scope);\n                    } else {\n                        tempHtml = $compile($templateCache.get(templateKey))(scope);\n                    }\n                    element.html(tempHtml);\n\n                }\n            }\n        };\n    }]);\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\nangular.module('voyageone.angular.directives.validator', [])\n\n    // 定义ng-char-maxlength\n    .directive('ngCharMaxlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxlength = -1;\n                attr.$observe('ngCharMaxlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    maxlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxlength = function(modelValue, viewValue) {\n                    return (maxlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) <= maxlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-char-minlength\n    .directive('ngCharMinlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minlength = -1;\n                attr.$observe('ngCharMinlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    minlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minlength = function(modelValue, viewValue) {\n                    return (minlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) >= minlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-maxvalue\n    .directive('ngMaxvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        maxvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        maxvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        maxvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxvalue = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-minvalue\n    .directive('ngMinvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMinvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        minvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        minvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        minvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minvalue = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue >= minvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-maxinputnum\n    .directive('ngMaxinputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxinputvalue', function(value) {\n                    maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxinputnum = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-mininputnum\n    .directive('ngMininputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMininputnum', function(value) {\n                    minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.mininputnum = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length >= minvalue);\n                };\n            }\n        }\n    })\n;\n/**\n * @description\n *\n * 自动创建基于地址定义的数据访问 service.\n * 传入的定义必须是 {object}, 并且至少有 root 属性\n *\n * @User: Jonas\n * @Date: 2015-12-10 19:32:37\n * @Version: 2.0.0\n */\n\n//@Skip\nangular.module('voyageone.angular.vresources', [])\n  .provider('$vresources', [\"$provide\", function ($provide) {\n\n    /**\n     * @description 构建请求地址的 url\n     * @param {string} root 请求的根路径\n     * @param {string} action 请求的名称\n     * @returns {string}\n     */\n    function getActionUrl(root, action) {\n      return root + (root.lastIndexOf('/') === root.length - 1 ? '' : '/') + action;\n    }\n\n    /**\n     * 闭包声明一个数据访问的 Service\n     * @param {string} name Service 的名称\n     * @param {object} actions 方法和地址定义\n     * @param {AjaxService} ajaxService 封装的 ajax 发送服务\n     */\n    function closureDataService(name, actions, ajaxService) {\n      /**\n       * @description 与 actions 一同闭包的构造函数\n       * @constructor\n       */\n      function DataResource() {\n        if (!actions) {\n          return;\n        }\n\n        if (typeof actions !== \"object\") {\n          console.log(\"Failed to new DataResource: [\" + actions + \"] is not a object\");\n          return;\n        }\n\n        if (!actions.root) {\n          console.log(\"Failed to new DataResource: no root prop\" + (JSON && JSON.stringify ? \": \" + JSON.stringify(actions) : \"\"));\n          return;\n        }\n\n        // 遍历配置\n        for (var name in actions) {\n          // 不对 root 进行创建\n          if (name === \"root\") continue;\n          // 额外的检查\n          if (actions.hasOwnProperty(name)) {\n            // 闭包创建函数\n            this[name] = (function (actionUrl) {\n              return function (data) {\n                return ajaxService.post(actionUrl, data);\n              };\n            })(getActionUrl(actions.root, actions[name]));\n          }\n        }\n      }\n\n      $provide.service(name, DataResource);\n    }\n\n    this.$get = [\"ajaxService\", function (ajaxService) {\n\n      return {\n        register: function (name, actions) {\n\n          if (!actions) return;\n\n          if (typeof actions !== 'object') return;\n\n          // 如果有 root 这个属性,就创建 service\n          if (actions.root) {\n            closureDataService(name, actions, ajaxService);\n            return;\n          }\n\n          // 否则继续访问子属性\n          for (var childName in actions) {\n            // 额外的检查\n            if (actions.hasOwnProperty(childName)) {\n\n              this.register(childName, actions[childName]);\n            }\n          }\n        }\n      };\n    }];\n  }])\n\n  .run([\"$vresources\", \"$actions\", function ($vresources, $actions) {\n    $vresources.register(null, $actions);\n  }]);\n/**\n * @Date:    2015-11-16 18:48:29\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.ajax', [])\n  .service('$ajax', $Ajax)\n  .service('ajaxService', AjaxService);\n\nfunction $Ajax($http, blockUI, $q) {\n  this.$http = $http;\n  this.blockUI = blockUI;\n  this.$q = $q;\n}\n$Ajax.$inject = [\"$http\", \"blockUI\", \"$q\"];\n$Ajax.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n  this.$http.post(url, data).then(function (response) {\n    var res = response.data;\n    if (!res) {\n      alert('相应结果不存在?????');\n      defer.reject(null);\n      return;\n    }\n    if (res.message || res.code) {\n      defer.reject(res);\n      return;\n    }\n    defer.resolve(res);\n  }, function (response) {\n    defer.reject(null, response);\n  });\n  return defer.promise;\n};\n\nfunction AjaxService($q, $ajax, messageService) {\n  this.$q = $q;\n  this.$ajax = $ajax;\n  this.messageService = messageService;\n}\nAjaxService.$inject = [\"$q\", \"$ajax\", \"messageService\"];\nAjaxService.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n\n  this.$ajax.post(url, data).then(function(res) {\n    // 成功\n    defer.resolve(res);\n    return res;\n  }, (function (_this) {\n    // 失败\n    return function(res) {\n      _this.messageService.show(res);\n      defer.reject(res);\n      return res;\n    };\n  })(this));\n\n  return defer.promise;\n};\n/**\n * @Date:    2015-11-16 20:30:37\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.cookie', [])\n  .service('cookieService', CookieService);\n\nvar keys = {\n  language: 'voyageone.user.language',\n  company: 'voyageone.user.company',\n  channel: 'voyageone.user.channel',\n  application: \"voyageone.user.application\",\n};\n\nfunction gentProps(key) {\n  return function(val) {\n    if (arguments.length === 1) {\n      return this.set(key, val);\n    } else if (arguments.length > 1) {\n      return this.set(key, arguments);\n    }\n    return this.get(key);\n  };\n}\n\nfunction CookieService($cookieStore) {\n  this.$cookieStore = $cookieStore;\n}\nCookieService.$inject = [\"$cookieStore\"];\n\nCookieService.prototype.get = function(key) {\n  var result = this.$cookieStore.get(key);\n  return result == undefined || result == null ? \"\" : this.$cookieStore.get(key);\n};\n\nCookieService.prototype.set = function(key, value) {\n  return this.$cookieStore.put(key, value);\n};\n\nCookieService.prototype.language = gentProps(keys.language);\n\nCookieService.prototype.company = gentProps(keys.company);\n\nCookieService.prototype.channel = gentProps(keys.channel);\n\nCookieService.prototype.application = gentProps(keys.application);\n\nCookieService.prototype.removeAll = function () {\n  this.$cookieStore.remove(keys.language);\n  this.$cookieStore.remove(keys.company);\n  this.$cookieStore.remove(keys.channel);\n  this.$cookieStore.remove(keys.application);\n};\n\n/**\n * 对后台的信息进行自动处理\n * @Date:    2015-11-19 14:47:23\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.message', [])\n  .service('messageService', MessageService);\n\n// 同步,DisplayType 枚举\nvar DISPLAY_TYPES = {\n  /**\n   * 弹出提示\n   */\n  ALERT: 1,\n  /**\n   * 顶端弹出自动关闭\n   */\n  NOTIFY: 2,\n  /**\n   * 右下弹出自动关闭\n   */\n  POP: 3,\n  /**\n   * 用户自定义处理\n   */\n  CUSTOM: 4\n};\n\nfunction MessageService(alert, confirm, notify) {\n  this.alert = alert;\n  this.confirm = confirm;\n  this.notify = notify;\n}\nMessageService.$inject = [\"alert\", \"confirm\", \"notify\"];\n\nMessageService.prototype = {\n  /**\n   * 根据类型自动显示信息\n   * @param {{displayType:Number, message:String}} res\n   */\n  show: function(res) {\n\n    var displayType = res.displayType;\n    var message = res.message;\n\n    switch (displayType) {\n      case DISPLAY_TYPES.ALERT:\n        this.alert(message);\n        break;\n      case DISPLAY_TYPES.NOTIFY:\n        this.notify(message);\n        break;\n      case DISPLAY_TYPES.POP:\n        this.notify({message: message, position: 'right bottom'});\n        break;\n    }\n  }\n};\n/**\n * @Date:    2015-11-19 14:26:43\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.permission', [])\n  .service('permissionService', PermissionService);\n\nfunction PermissionService($rootScope) {\n  this.$rootScope = $rootScope;\n  this.permissions = [];\n}\nPermissionService.$inject = [\"$rootScope\"];\n\nPermissionService.prototype = {\n  /**\n   * set the action permissions.\n   * @param permissions\n   */\n  setPermissions: function(permissions) {\n    this.permissions = permissions;\n    this.$rootScope.$broadcast('permissionsChanged');\n  },\n  /**\n   * check the permission has been in action permissions.\n   * @param permission\n   * @returns {boolean|*}\n   */\n  has: function(permission) {\n    return _.contains(this.permissions, permission.trim());\n  }\n};\n\n/**\n * @Date:    2015-11-19 14:35:25\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.translate', [])\n  .service('translateService', TranslateService);\n\nfunction TranslateService($translate) {\n  this.$translate = $translate;\n}\nTranslateService.$inject = [\"$translate\"];\n\nTranslateService.prototype = {\n  languages: {\n    en: \"en\",\n    zh: \"zh\"\n  },\n  /**\n   * set the web side language type.\n   * @param key\n   */\n  setLanguage: function(language) {\n    if (!_.contains(this.languages, language)) {\n      language = this.getBrowserLanguage();\n    }\n    this.$translate.use(language);\n    return language;\n  },\n  /**\n   * get the browser language type.\n   * @returns {string}\n   */\n  getBrowserLanguage: function() {\n    var currentLang = navigator.language;\n    if (!currentLang)\n      currentLang = navigator.browserLanguage;\n    return currentLang.substr(0, 2);\n  }\n};\nangular.module(\"voyageone.angular.factories\",[\"voyageone.angular.factories.dialogs\",\"voyageone.angular.factories.interceptor\",\"voyageone.angular.factories.notify\",\"voyageone.angular.factories.schema\",\"voyageone.angular.factories.selectRows\",\"voyageone.angular.factories.vpagination\"]);\nangular.module(\"voyageone.angular.directives\",[\"voyageone.angular.directives.dateModelFormat\",\"voyageone.angular.directives.enterClick\",\"voyageone.angular.directives.fileStyle\",\"voyageone.angular.directives.ifNoRows\",\"voyageone.angular.directives.uiNav\",\"voyageone.angular.directives.schema\",\"voyageone.angular.directives.voption\",\"voyageone.angular.directives.vpagination\",\"voyageone.angular.directives.validator\"]);\nangular.module(\"voyageone.angular.services\",[\"voyageone.angular.services.ajax\",\"voyageone.angular.services.cookie\",\"voyageone.angular.services.message\",\"voyageone.angular.services.permission\",\"voyageone.angular.services.translate\"]);\nangular.module(\"voyageone.angular.controllers\",[\"voyageone.angular.controllers.datePicker\",\"voyageone.angular.controllers.selectRows\",\"voyageone.angular.controllers.showPopover\"]);\nreturn angular.module(\"voyageone.angular\",[\"voyageone.angular.factories\",\"voyageone.angular.directives\",\"voyageone.angular.services\",\"voyageone.angular.controllers\"])});","/**\n * @Description:\n * 弹出日期控件\n * @User:    Edward\n * @Version: 0.2.0, 2015-10-10\n */\n\nangular.module('voyageone.angular.controllers.datePicker', [])\n    .controller('datePickerCtrl', function ($scope) {\n        var vm = this;\n\n        vm.formats = ['yyyy-MM-dd', 'yyyy-MM-dd HH:mm:ss'];\n\n        $scope.formatDate = vm.formats[0];\n        $scope.formatDateTime = vm.formats[1];\n\n        $scope.open = open;\n\n        function open($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n\n            $scope.opened = true;\n        }\n    });","/**\n * @Description:\n * select tables items\n * @User: linanbin\n * @Version: 2.0.0, 15/12/16\n */\n\nangular.module('voyageone.angular.controllers.selectRows', [])\n    .controller('selectRowsCtrl', function ($scope) {\n\n        $scope.selectAll = selectAll;\n        $scope.selectOne = selectOne;\n        $scope.isAllSelected = isAllSelected;\n\n        /**\n         * 全部选中当前页数据\n         * @param objectList\n         */\n        function selectAll(objectList, id) {\n\n            objectList.selAllFlag = !objectList.selAllFlag;\n            if(!id){\n                id=\"id\";\n            }\n\n            // 循环处理全选中的数据\n            angular.forEach(objectList.currPageRows, function (object) {\n\n                // 单签页面所有产品选中flag被标示\n                objectList.selFlag[object[id]] = objectList.selAllFlag;\n\n                if (objectList.hasOwnProperty('selList')) {\n\n                    var tempList = _.pluck(objectList.selList, id);\n                    if (objectList.selAllFlag && tempList.indexOf(object[id]) < 0) {\n                        objectList.selList.push(object);\n                    } else if (!objectList.selAllFlag && tempList.indexOf(object[id]) > -1) {\n                        objectList.selList.splice(tempList.indexOf(object[id]), 1);\n                    }\n                }\n            });\n        }\n\n        /**\n         * 选中单条数据\n         * @param currentId\n         * @param objectList\n         */\n        function selectOne(currentId, objectList, id) {\n            if(!id){\n                id=\"id\";\n            }\n            if (objectList.hasOwnProperty('selList')) {\n\n                angular.forEach(objectList.currPageRows, function(object) {\n\n                    var tempList = _.pluck(objectList.selList, id);\n                    if (_.isEqual(object[id], currentId)) {\n                        if (tempList.indexOf(object[id]) > -1) {\n                            objectList.selList.splice(tempList.indexOf(object[id]), 1);\n                        } else {\n                            objectList.selList.push(object);\n                        }\n                    }\n                });\n            }\n\n            objectList.selAllFlag = true;\n            tempList = _.pluck(objectList.selList, id);\n            angular.forEach(objectList.currPageRows, function(object) {\n                if (tempList.indexOf(object[id]) == -1) {\n                    objectList.selAllFlag = false;\n                }\n            })\n        }\n\n        /**\n         * 判断当前页是否为全选中\n         * @param objectList\n         * @param id\n         */\n        function isAllSelected (objectList, id) {\n            if(!id){\n                id=\"id\";\n            }\n\n            if (objectList != undefined) {\n\n                objectList.selAllFlag = true;\n                var tempList = _.pluck(objectList.selList, id);\n                angular.forEach(objectList.currPageRows, function(object) {\n                    if (tempList.indexOf(object[id]) == -1) {\n                        objectList.selAllFlag = false;\n                    }\n                });\n                return objectList.selAllFlag;\n            }\n\n            return false;\n        }\n    });","/**\n * @Description:\n * 显示html的popover的共同方法\n * @User: linanbin\n * @Version: 2.0.0, 15/12/14\n */\n\nangular.module('voyageone.angular.controllers.showPopover', [])\n    .controller('showPopoverCtrl', function ($scope) {\n\n        $scope.showInfo = showInfo;\n\n        function showInfo(values) {\n            var tempHtml = \"\";\n\n            angular.forEach(values, function (data, index) {\n                tempHtml += data;\n                if (index !== values.length) {\n                    tempHtml += \"<br>\";\n                }\n            });\n            return tempHtml\n        }\n    });\n","/**\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.dialogs', [])\n  .factory(\"$dialogs\", function ($modal, $filter, $templateCache) {\n\n    var templateName = 'voyageone.angular.factories.dialogs.tpl.html';\n    $templateCache.put(templateName, '<div class=\"vo_modal\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" ng-click=\"close()\"><span aria-hidden=\"true\"><i ng-click=\"close()\" class=\"fa fa-close\"></i></span></button><h4 class=\"modal-title\" ng-bind-html=\"title\"></h4></div><div class=\"modal-body wrapper-lg\"><div class=\"row\"><p ng-bind-html=\"content\"></p></div></div><div class=\"modal-footer\"><button class=\"btn btn-default btn-sm\" ng-if=\"!isAlert\" ng-click=\"close()\" translate=\"BTN_COM_CANCEL\"></button><button class=\"btn btn-vo btn-sm\" ng-click=\"ok()\" translate=\"BTN_COM_OK\"></button></div></div>');\n\n    function tran(translationId, values) {\n      return $filter('translate')(translationId, values);\n    }\n\n    return function (options) {\n\n      if (!_.isObject(options)) throw \"arg type must be object\";\n\n      var values;\n\n      if (_.isObject(options.content)) {\n        values = options.content.values;\n        options.content = options.content.id;\n      }\n\n      options.title = tran(options.title);\n      options.content = tran(options.content, values);\n\n      var modalInstance = $modal.open({\n        templateUrl: templateName,\n        controller: [\"$scope\", function (scope) {\n          _.extend(scope, options);\n        }],\n        size: 'md'\n      });\n\n      options.close = function () {\n        modalInstance.dismiss('close')\n      };\n\n      options.ok = function () {\n        modalInstance.close('');\n      };\n\n      return modalInstance;\n    };\n  })\n\n  .factory(\"alert\", function ($dialogs) {\n    return function (content, title) {\n      return $dialogs({\n        title: title || 'TXT_COM_ALERT',\n        content: content,\n        isAlert: true\n      });\n    };\n  })\n\n  .factory(\"confirm\", function vConfirm($dialogs) {\n    return function (content, title) {\n      return $dialogs({\n        title: title || 'TXT_COM_CONFIRM',\n        content: content,\n        isAlert: false\n      });\n    };\n  });","/**\n * @Date:    2015-11-16 20:51:05\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.factories.interceptor', [])\n    .factory('interceptorFactory', function () {\n\n        // 未知的系统错误\n        var UNKNOWN_CODE = \"5\";\n        // 和 JAVA 同步,系统通知前端自动跳转的特殊代码\n        var CODE_SYS_REDIRECT = \"SYS_REDIRECT\";\n        // 和 JAVA 同步,回话过期的信息\n        var MSG_TIMEOUT = \"300001\";\n\n        /**\n         * 对系统自动跳转的响应,执行跳转\n         * @param {{code:string,redirectTo:string}} res\n         * @returns {boolean}\n         */\n        function autoRedirect(res) {\n            if (res.code != CODE_SYS_REDIRECT) {\n                return false;\n            }\n            // 如果跳转数据异常,则默认跳转登陆页\n            location.href = res.redirectTo || '/login.html';\n            return true;\n        }\n\n        /**\n         * 对会话超时和未登录进行特殊处理\n         * @param {{code:string}} res\n         * @returns {boolean}\n         */\n        function sessionTimeout(res) {\n            if (res.code != MSG_TIMEOUT) {\n                return false;\n            }\n            // 会话超时,默认跳转到登陆页\n            location.href = '/login.html';\n            return true;\n        }\n\n        /**\n         * 处理位置的异常\n         * @param response\n         */\n        function unknownException(response) {\n\n            if (response.data.code !== UNKNOWN_CODE) {\n                return;\n            }\n\n            window.$$lastUnknow = response;\n            console.error('Server throw unknown exceptio. Message:', response.data.message);\n        }\n\n        return {\n            request: function (config) {\n                return config;\n            },\n            /**\n             * 响应拦截\n             * @param {{config:object, data:*, headers:function, status:number, statusText:string}} res\n             * @returns {*}\n             */\n            response: function (res) {\n                var result = res.data;\n\n                // 特殊处理部分内容\n                if (autoRedirect(result) || sessionTimeout(result)) {\n                    return res;\n                }\n\n                unknownException(res);\n\n                return res;\n            },\n            requestError: function (config) {\n                return config;\n            },\n            responseError: function (res) {\n            }\n        };\n    })\n    .config(function ($httpProvider) {\n        $httpProvider.interceptors.push('interceptorFactory');\n    });","/**\n * Notify 的可用参数\n * {\n *    // whether to hide the notification on click\n *    clickToHide: true,\n *    // whether to auto-hide the notification\n *    autoHide: true,\n *    // if autoHide, hide after milliseconds\n *    autoHideDelay: 5000,\n *    // show the arrow pointing at the element\n *    arrowShow: true,\n *    // arrow size in pixels\n *    arrowSize: 5,\n *    // position defines the notification position though uses the defaults below\n *    position: '...',\n *    // default positions\n *    elementPosition: 'bottom left',\n *    globalPosition: 'top right',\n *    // default style\n *    style: 'bootstrap',\n *    // default class (string or [string])\n *    className: 'error',\n *    // show animation\n *    showAnimation: 'slideDown',\n *    // show animation duration\n *    showDuration: 400,\n *    // hide animation\n *    hideAnimation: 'slideUp',\n *    // hide animation duration\n *    hideDuration: 200,\n *    // padding between element and notification\n *    gap: 2\n * }\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.notify', [])\n\n    .factory('notify', function ($filter) {\n\n        /**\n         * @ngdoc function\n         * @name voNotify\n         * @description\n         * 自动关闭的弹出提示框\n         */\n        function notify(options) {\n\n            if (!options) return;\n            if (_.isString(options)) options = {message: options};\n            if (!_.isObject(options)) return;\n\n            var values;\n\n            // 为 translate 的格式化提供支持，检测类型并转换\n            if (_.isObject(options.message)) {\n\n                values = options.message.values;\n                options.message = options.message.id;\n            }\n\n            options.message = $filter('translate')(options.message, values);\n\n            return $.notify(options.message, options);\n        }\n\n        notify.success = function (message) {\n            return notify({message: message, className: \"success\"});\n        };\n\n        notify.warning = function (message) {\n            return notify({message: message, className: \"warning\"});\n        };\n\n        notify.danger = function (message) {\n            return notify({message: message, className: \"danger\"});\n        };\n\n        return notify;\n    });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\nangular.module('voyageone.angular.factories.schema', [])\n\n    // 定义schemaHeaderFactory\n    .factory('schemaHeaderFactory', function () {\n        return function (config) {\n            var _schemaHeaderInfo = config ? config : {\n                isRequired: false,\n                //size: null,\n                isMultiComplex: false,\n                isComplex: false,\n                tipMsg: []\n            };\n\n            this.isRequired = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isRequired = value : _schemaHeaderInfo.isRequired;\n            };\n\n            //this.size = function (value) {\n            //    return value !== undefined ? _schemaHeaderInfo.size = value : _schemaHeaderInfo.size;\n            //};\n\n            this.isComplex = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isComplex = value : _schemaHeaderInfo.isComplex;\n            };\n\n            this.isMultiComplex = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isMultiComplex = value : _schemaHeaderInfo.isMultiComplex;\n            };\n\n            this.tipMsg = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.tipMsg.push(value) : _schemaHeaderInfo.tipMsg;\n            };\n\n            this.schemaHearInfo = _schemaHeaderInfo;\n        }\n    })\n\n    // 定义schemaFactory\n    .factory('schemaFactory', function () {\n\n        return function (config) {\n\n            var _schemaInfo = config ? config : {\n                type: null,\n                name: null,\n                rowNum: null,\n                isRequired: false,\n                checkValues: [],\n                tipMsg: [],\n                html: []\n            };\n\n            this.type = function (value) {\n                return value !== undefined ? _schemaInfo.type = value : _schemaInfo.type;\n            };\n\n            this.name = function (value) {\n                return value !== undefined ? _schemaInfo.name = value : _schemaInfo.name;\n            };\n\n            this.html = function (value) {\n                return value !== undefined ? _schemaInfo.html.push(value) : htmlToString(_schemaInfo.html);\n            };\n\n            this.isRequired = function (value) {\n                return value !== undefined ? _schemaInfo.isRequired = value : _schemaInfo.isRequired;\n            };\n\n            this.rowNum = function (value) {\n                return value !== undefined ? _schemaInfo.rowNum = value : _schemaInfo.rowNum;\n            };\n\n            this.tipMsg = function (value) {\n                return value !== undefined ? _schemaInfo.tipMsg.push(value) : _schemaInfo.tipMsg;\n            };\n\n            this.checkValues = function (value) {\n                return value !== undefined ? _schemaInfo.checkValues.push(value) : _schemaInfo.checkValues;\n            };\n\n            this.schemaInfo = function () {\n                return _schemaInfo;\n            };\n\n            function htmlToString (htmls) {\n                var result = \"\";\n                angular.forEach(htmls, function (html) {\n                    result += \" \" + html + \" \";\n                });\n                return result;\n            }\n        };\n    });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 16/1/11\n */\n\nangular.module('voyageone.angular.factories.selectRows', [])\n\n    // selectRowsFactory\n    .factory('selectRowsFactory', function () {\n        return function (config) {\n            var _selectRowsInfo = config ? config : {\n                selAllFlag: false,\n                currPageRows: [],// [{id: \"12345\"}], [{id: \"123456\", name: \"test1\"}]\n                selFlag:[], // [{\"12345\": true}, {\"12346\": false}]\n                selList: [] // [{id: \"12345\"}], [{id: \"123456\", name: \"test1\"}]\n            };\n\n            this.selAllFlag = function (value) {\n                return value !== undefined ? _selectRowsInfo.selAllFlag = value : _selectRowsInfo.selAllFlag;\n            };\n\n            this.clearCurrPageRows = function () {\n                _selectRowsInfo.currPageRows = [];\n            };\n\n            this.currPageRows = function (value) {\n                return value !== undefined ? _selectRowsInfo.currPageRows.push(value) : _selectRowsInfo.currPageRows;\n            };\n\n            this.selFlag = function (value) {\n                return value !== undefined ? _selectRowsInfo.selFlag.push(value) : _selectRowsInfo.selFlag;\n            };\n\n            this.selList = function (value) {\n                return value !== undefined ? _selectRowsInfo.selList.push(value) : _selectRowsInfo.selList;\n            };\n\n            this.selectRowsInfo = _selectRowsInfo;\n        }\n    });","/**\n * @User: Edward\n * @Version: 2.0.0, 2015-12-09\n */\n\nangular.module('voyageone.angular.factories.vpagination', [])\n    .factory('vpagination', function () {\n\n        /**\n         * 创建一个分页服务\n         * @param {{ curr: number, size: number, total: number, fetch: function }} config 配置\n         */\n        return function (config) {\n\n            var _pages, _lastTotal = 0, _showPages = [];\n\n            /**\n             * 返回总件数\n             * @returns {*}\n             */\n            this.getTotal = function () {\n                return config.total;\n            };\n\n            /**\n             * 返回当前页的开始和结束号\n             * @returns {{start: number, end: number}}\n             */\n            this.getCurr = function () {\n                return {\n                    pageNo: curr(),\n                    start: getCurrStartItems(),\n                    end: getCurrEndItems(),\n                    isFirst: isFirst(),\n                    isLast: isLast(),\n                    pages: createShowPages(),\n                    isShowStart: isShowStart(),\n                    isShowEnd: isShowEnd()\n                }\n            };\n\n            // 跳转到指定页\n            this.goPage = load;\n            // 返回总页数\n            this.getPageCount = getPages;\n            // 是否是当前页\n            this.isCurr = isCurr;\n\n            /**\n             * 跳转到指定页\n             * @param {number} page 页号\n             */\n            function load(page) {\n                page = page || config.curr;\n\n                if (page < 1 || page > getPages() || isCurr(page)) return;\n\n                config.curr = page;\n\n                config.fetch(page, config.size);\n            }\n\n            /**\n             * 初始化page列表\n             * @returns {Array}\n             */\n            function createShowPages () {\n\n                var minPage, maxPage, _showPages= [];\n                if (config.curr < config.showPageNo) {\n                    minPage = 1;\n                    if(_pages <= config.showPageNo) maxPage = _pages;\n                    else maxPage = config.showPageNo;\n                } else if (config.curr + 2 > _pages) {\n                    minPage = _pages + 1 - config.showPageNo;\n                    maxPage = _pages;\n                } else {\n                    minPage = config.curr + 3 - config.showPageNo;\n                    maxPage = config.curr + 2;\n                }\n\n                // 按照指定数量创建按钮\n                for (var i =  minPage; i <= maxPage; i++) {\n                    //scope.pages.push({num: 1, active: \"\", show: false});\n                    _showPages.push(i);\n                }\n\n                return _showPages;\n            }\n\n            /**\n             * 获取当前总页数\n             * @returns {number}\n             */\n            function getPages() {\n                if (_lastTotal != config.total) {\n                    _pages = parseInt(config.total / config.size) + ((config.total % config.size) > 0 ? 1 : 0);\n                    _lastTotal = config.total;\n                }\n                return _pages;\n            }\n\n            /**\n             * 返回当前页的起始号\n             * @returns {number}\n             */\n            function getCurrStartItems() {\n                return (config.curr - 1) * config.size + 1\n            }\n\n            /**\n             * 返回当前页的结束号\n             * @returns {number}\n             */\n            function getCurrEndItems() {\n                var currEndItems = config.curr * config.size;\n                return currEndItems <= config.total ? currEndItems : config.total;\n\n            }\n\n            /**\n             * 是否是最后一页\n             * @returns {boolean}\n             */\n            function isLast() {\n                return config.curr == getPages();\n            }\n\n            /**\n             * 是否是第一页\n             * @returns {boolean}\n             */\n            function isFirst() {\n                return config.curr == 1;\n            }\n\n            /**\n             * 是否是当前页\n             * @param page 页码\n             * @returns {boolean}\n             */\n            function isCurr(page) {\n                return config.curr == page;\n            }\n\n            function curr() {\n                return config.curr;\n            }\n\n            /**\n             * 是否显示开始...项目\n             * @returns {boolean}\n             */\n            function isShowStart () {\n                _showPages = createShowPages();\n                return _showPages[0] > 1\n            }\n\n            /**\n             * 是否显示结束...项目\n             * @returns {boolean}\n             */\n            function isShowEnd () {\n                _showPages = createShowPages();\n                return _showPages[_showPages.length - 1] < _pages;\n            }\n\n        };\n    });","/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.dateModelFormat', [])\n    .directive('dateModelFormat', function ($filter) {\n        return {\n            restrict: \"A\",\n            require: 'ngModel',\n            link: function (scope, elem, attrs, ngModel) {\n                ngModel.$parsers.push(function (viewValue) {\n                    return $filter('date')(viewValue, attrs.dateModelFormat || 'yyyy-MM-dd HH:mm:ss');\n                });\n            }\n        };\n    });\n","/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.directives.enterClick', [])\n  .directive('enterClick', function() {\n    return {\n      restrict: \"A\",\n      link: function(scope, elem, attr) {\n        $(elem).keyup(function(e) {\n          if (e.keyCode !== 13) return;\n\n          var selectExp = attr.enterClick;\n\n          var targetElem, handler = function() {\n            targetElem.click();\n          };\n\n          try {\n            targetElem = angular.element(selectExp);\n          } catch (e) {\n            targetElem = null\n          }\n\n          if (!targetElem || !targetElem.length) {\n            // 如果取不到元素，则尝试作为表达式执行\n            handler = function() {\n              scope.$eval(selectExp);\n            };\n          } else if (targetElem.attr(\"disabled\")) {\n            // 如果元素存在，但是是禁用状态的，放弃执行\n            return;\n          }\n\n          handler();\n        });\n      }\n    };\n  });\n","/**\n * @Description:\n * 引入对上传框插件 fileStyle 的指令支持\n * @Date:    2015-11-19 17:35:22\n * @User:    Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.fileStyle', [])\n  .directive('fileStyle', function () {\n    return {\n      restrict: 'A',\n      controller: [\"$scope\", \"$element\", function ($scope, $element) {\n        var options = $element.data();\n        // old usage support\n        options.classInput = $element.data('classinput') || options.classInput;\n        if ($element.filestyle) {\n          $element.filestyle(options);\n        }\n      }]\n    };\n  });","/**\n * @Description:\n * table中无数据范围的数据\n * @User: linanbin\n * @Version: 2.0.0, 15/12/11\n */\n\nangular.module('voyageone.angular.directives.ifNoRows', [])\n    .directive('ifNoRows', function ($templateCache, $compile) {\n\n        var tempNoDataKey = \"voyageone.angular.directives.ifNoRows.tpl.html\";\n\n        // 没有数据显示警告\n        if (!$templateCache.get(tempNoDataKey)) {\n            $templateCache.put(tempNoDataKey,\n            '<div class=\"text-center text-hs\" id=\"noData\">\\n' +\n            '    <h4 class=\"text-vo\"><i class=\"icon fa fa-warning\"></i>&nbsp;{{\\'TXT_COM_WARNING\\' | translate}}</h4>\\n' +\n            '{{\\'TXT_COM_MSG_NO_DATE\\' | translate}}' +\n            '</dv>');\n        }\n\n        return {\n            restrict: \"A\",\n            replace: false,\n            scope: {\n                $$data: \"@ifNoRows\"\n            },\n            link: function (scope, element) {\n\n                scope.$parent.$watch(scope.$$data, function () {\n\n                    // 如果数据不存在则显示警告信息\n                    if(scope.$parent.$eval(scope.$$data)  == 0) {\n                        element.find(\"#noData\").remove();\n                        element.append($compile($templateCache.get(tempNoDataKey))(scope));\n                    } else {\n                        element.find(\"#noData\").remove();\n                    }\n                })\n            }\n        };\n    });\n","/**\n * @Description:\n * 用于菜单目录二级展开\n * @User:    Jonas\n * @Version: 0.2.0, 2015-12-07\n */\n\nangular.module('voyageone.angular.directives.uiNav', [])\n    .directive('uiNav', function () {\n\n        return {\n            restrict: 'AC',\n            link: function(scope, el) {\n                var _window = $(window),\n                    _mb = 768,\n                    wrap = $('.app-aside'),\n                    next,\n                    backdrop = '.dropdown-backdrop';\n                // unfolded\n                el.on('click', 'a', function(e) {\n                    next && next.trigger('mouseleave.nav');\n                    var _this = $(this);\n                    _this.parent().siblings( \".active\" ).toggleClass('active');\n                    _this.next().is('ul') &&  _this.parent().toggleClass('active') &&  e.preventDefault();\n                    // mobile\n                    _this.next().is('ul') || ( ( _window.width() < _mb ) && $('.app-aside').removeClass('show off-screen') );\n                });\n\n                // folded & fixed\n                el.on('mouseenter', 'a', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                    if ( !$('.app-aside-fixed.app-aside-folded').length || ( _window.width() < _mb ) || $('.app-aside-dock').length) return;\n                    var _this = $(e.target)\n                        , top\n                        , w_h = $(window).height()\n                        , offset = 50\n                        , min = 150;\n\n                    !_this.is('a') && (_this = _this.closest('a'));\n                    if( _this.next().is('ul') ){\n                        next = _this.next();\n                    }else{\n                        return;\n                    }\n\n                    _this.parent().addClass('active');\n                    top = _this.parent().position().top + offset;\n                    next.css('top', top);\n                    if( top + next.height() > w_h ){\n                        next.css('bottom', 0);\n                    }\n                    if(top + min > w_h){\n                        next.css('bottom', w_h - top - offset).css('top', 'auto');\n                    }\n                    next.appendTo(wrap);\n\n                    next.on('mouseleave.nav', function(e){\n                        $(backdrop).remove();\n                        next.appendTo(_this.parent());\n                        next.off('mouseleave.nav').css('top', 'auto').css('bottom', 'auto');\n                        _this.parent().removeClass('active');\n                    });\n\n                    $('.smart').length && $('<div class=\"dropdown-backdrop\"/>').insertAfter('.app-aside').on('click', function(next){\n                        next && next.trigger('mouseleave.nav');\n                    });\n\n                });\n\n                wrap.on('mouseleave', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                });\n            }\n        };\n    });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/24\n */\n\nangular.module('voyageone.angular.directives.schema', [])\n    // 定义fieldTypes\n    .constant('fieldTypes', {\n        INPUT: \"INPUT\",\n        DATE: \"DATE\",\n        DATETIME: \"DATETIME\",\n        TEXTAREA: \"TEXTAREA\",\n        SINGLE_CHECK: \"SINGLECHECK\",// 在complex中的显示select,以外的默认显示singlecheck,如果用户觉得select显示不方便,就将该field的type改成radio\n        RADIO: \"RADIO\",\n        MULTI_INPUT: \"MULTIINPUT\", // 没有被使用\n        MULTI_CHECK: \"MULTICHECK\",\n        COMPLEX: \"COMPLEX\", // TODO\n        MULTI_COMPLEX: \"MULTICOMPLEX\",\n        LABEL: \"LABEL\"  // 可以不显示\n    })\n    // 定义ruleTypes\n    .constant('ruleTypes', {\n        VALUE_TYPE_RULE: \"valueTypeRule\",\n        REQUIRED_RULE: \"requiredRule\",\n        DISABLE_RULE: \"disableRule\",\n        READ_ONLY_RULE: \"readOnlyRule\",\n        REGEX_RULE: \"regexRule\",\n        SET_RULE: \"setRule\", // TODO 暂时不知道怎么用\n        TIP_RULE: \"tipRule\", // TODO 不需要处理\n        DEV_TIP_RULE: \"devTipRule\", // 不需要处理\n        MIN_LENGTH_RULE: \"minLengthRule\",\n        MAX_LENGTH_RULE: \"maxLengthRule\",\n        MIN_VALUE_RULE: \"minValueRule\",\n        MAX_VALUE_RULE: \"maxValueRule\",\n        MIN_INPUT_NUM_RULE: \"minInputNumRule\",\n        MAX_INPUT_NUM_RULE: \"maxInputNumRule\",\n        MIN_DECIMAL_DIGITS_RULE: \"minDecimalDigitsRule\", // TODO\n        MAX_DECIMAL_DIGITS_RULE: \"maxDecimalDigitsRule\", // TODO\n        MIN_TARGET_SIZE_RULE: \"minTargetSizeRule\", // TODO\n        MAX_TARGET_SIZE_RULE: \"maxTargetSizeRule\", // TODO\n        MIN_IMAGE_SIZE_RULE: \"minImageSizeRule\", // TODO\n        MAX_IMAGE_SIZE_RULE: \"maxImageSizeRule\" // TODO\n    })\n    // 定义valueTypes\n    .constant('valueTypes', {\n        TEXT: \"text\",\n        DECIMAL: \"decimal\",\n        INTEGER: \"integer\",\n        LONG: \"long\",\n        DATE: \"date\",\n        TIME: \"time\",\n        URL: \"url\",\n        TEXTAREA: \"textarea\",\n        HTML: \"html\"\n    })\n\n    .directive('schemaHeader', function ($templateCache, schemaHeaderFactory, fieldTypes, ruleTypes, valueTypes) {\n\n        // 定义header\n        var templateKey_header = \"voyageone.angular.directives.schemaHeader.tpl.html\";\n        if (!$templateCache.get(templateKey_header)) {$templateCache.put(templateKey_header\n            , '<div class=\"form-group\">' +\n              '  <label class=\"col-sm-2 control-label\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" ng-bind=\"$$data.name\"></label>' +\n              '  <div class=\"col-sm-8\" ng-class=\"{\\'modal-open\\' : showHtmlData.isMultiComplex, \\'hierarchy_main\\': showHtmlData.isComplex}\" ng-transclude></div>' +\n              '  <div class=\"col-sm-2\" ng-if=\"showHtmlData.isMultiComplex\"><button class=\"btn btn-success\" ng-click=\"addField($$data)\"><i class=\"fa fa-plus\"></i>{{\\'BTN_COM_ADD\\' | translate}}</button></div>' +\n              '  <div class=\"row\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><div class=\"col-sm-8 col-sm-offset-2 text-warnings\"><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div></div>' +\n              '</div>');}\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            transclude: true,\n            templateUrl: templateKey_header,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope) {\n                var schemaHeader = new schemaHeaderFactory();\n\n                _returnType (scope.$$data.type);\n                _operateRule (scope.$$data.rules);\n                scope.showHtmlData = angular.copy(schemaHeader.schemaHearInfo);\n\n                /**\n                 * 设置multi complex添加一条新记录\n                 * @param data\n                 */\n                scope.addField= function (data) {\n                    var newFieldMap = {};\n                    angular.forEach(data.fields, function (field) {\n                        eval(\"newFieldMap.\" + field.id + \"=field\");\n                    });\n\n                    data.complexValues.push({fieldMap: angular.copy(newFieldMap)});\n                };\n\n                /**\n                 * 返回需要展示的页面样式\n                 * @param type\n                 * @param valueTypeRule\n                 * @private\n                 */\n                function _returnType (type) {\n\n                    switch (type) {\n                        case fieldTypes.MULTI_COMPLEX:\n                            schemaHeader.isMultiComplex(true);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            schemaHeader.isComplex(true);\n                            break;\n                    }\n                }\n\n                /**\n                 * 处理rules\n                 * @param rules\n                 * @private\n                 */\n                function _operateRule (rules) {\n                    angular.forEach(rules, function (rule) {\n                        switch (rule.name) {\n                            case ruleTypes.REQUIRED_RULE:\n                                _requiredRule(rule);\n                                break;\n                            case ruleTypes.TIP_RULE:\n                                _tipRule(rule);\n                                break;\n                        }\n                    })\n\n                }\n\n                /**\n                 * 处理requiredRule\n                 * @param requiredRule\n                 * @private\n                 */\n                function _requiredRule (requiredRule) {\n                    if (\"true\" == requiredRule.value) {\n                        schemaHeader.isRequired(true);\n                    }\n                }\n\n                /**\n                * 处理tipRule\n                * @param tipRule\n                * @private\n                */\n                function _tipRule (tipRule) {\n                    schemaHeader.tipMsg(tipRule.value);\n                }\n            }\n        }\n    })\n\n    .directive('schemaItem', function ($templateCache, $compile, schemaFactory, fieldTypes, ruleTypes, valueTypes) {\n\n        // label\n        var templateKey_label = \"voyageone.angular.directives.schemaLabel.tpl.html\";\n        if (!$templateCache.get(templateKey_label)) {$templateCache.put(templateKey_label,\n            '<input style=\"min-width: 150px; max-width: 250px;\" type=\"text\" readonly ng-model=\"vm.$$data.value\" class=\"form-control inherited\">');}\n\n        // input\n        var templateKey_input = \"voyageone.angular.directives.schemaInput.tpl.html\";\n        if (!$templateCache.get(templateKey_input)) {$templateCache.put(templateKey_input,\n            '<input style=\"min-width: 150px; max-width: 250px;\" ng-model=\"vm.$$data.value\" class=\"form-control inherited\" replaceInfo>');}\n\n        // data\n        var templateKey_date = \"voyageone.angular.directives.schemaDate.tpl.html\";\n        if (!$templateCache.get(templateKey_date)) {$templateCache.put(templateKey_date,\n            '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input replaceInfo type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDate}}\" ng-model=\"$parent.vm.$$data.value\" date-model-format=\"{{formatDate}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button replaceInfo type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>');}\n\n        // datetime\n        var templateKey_datetime = \"voyageone.angular.directives.schemaDatetime.tpl.html\";\n        if (!$templateCache.get(templateKey_datetime)) {$templateCache.put(templateKey_datetime,\n            '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input replaceInfo type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDateTime}}\" ng-model=\"$parent.vm.$$data.value\" date-model-format=\"{{formatDateTime}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button replaceInfo type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>');}\n\n        // textarea\n        var templateKey_textarea = \"voyageone.angular.directives.schemaTextarea.tpl.html\";\n        if (!$templateCache.get(templateKey_textarea)) {$templateCache.put(templateKey_textarea,\n            '<textarea style=\"min-width: 150px; max-width: 650px;\" class=\"form-control no-resize\" ng-model=\"vm.$$data.value\" rows=\"{{showHtmlData.rowNum}}\" replaceInfo></textarea>');}\n\n        // single check-select\n        var templateKey_select = \"voyageone.angular.directives.schemaSelect.tpl.html\";\n        if (!$templateCache.get(templateKey_select)) {$templateCache.put(templateKey_select,\n            '<select style=\"min-width: 150px; max-width: 250px;\" replaceInfo class=\"form-control\" ng-model=\"vm.$$data.value.value\" ng-options=\"option.value as option.displayName for option in vm.$$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');}\n\n        // single check-radio\n        var templateKey_radio = \"voyageone.angular.directives.schemaRadio.tpl.html\";\n        if (!$templateCache.get(templateKey_radio)) {$templateCache.put(templateKey_radio,\n            '<label class=\"checkbox-inline c-radio\" ng-repeat=\"option in vm.$$data.options\"><input name=\"{{vm.$$data.id}}\" type=\"radio\" ng-value=\"option.value\" ng-model=\"vm.$$data.value.value\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>');}\n\n        // multi check-checkbox\n        var templateKey_checkbox = \"voyageone.angular.directives.schemaCheckbox.tpl.html\";\n        if (!$templateCache.get(templateKey_checkbox)) {$templateCache.put(templateKey_checkbox,\n            '<label class=\"checkbox-inline c-checkbox\" ng-repeat=\"option in vm.$$data.options\"><input type=\"checkbox\" ng-value=\"option.value\" ng-click=\"checkboxValue(option.value)\" ng-checked=\"isSelected(option.value)\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>');}\n\n        // multi complex\n        var templateKey_multiComplex = \"voyageone.angular.directives.schemaMultiComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_multiComplex)) {$templateCache.put(templateKey_multiComplex,\n            '<table class=\"table text-center\">' +\n            '<thead><tr>' +\n                //'<schema-header ng-repeat=\"field in vm.$$data.fields\" data=\"field\" is-complex=\"true\"></schema-header>' +\n            '<th ng-repeat=\"field in vm.$$data.fields\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" class=\"text-center\" style=\"min-width: 180px;\">{{field.name}}</th>' +\n            '<th style=\"min-width: 60px;\" class=\"text-center\" translate=\"TXT_COM_EDIT\"></th>' +\n            '</tr></thead>' +\n            '<tbody><tr ng-repeat=\"value in vm.$$data.complexValues\">' +\n            '<td class=\"text-left\" ng-repeat=\"field in value.fieldMap\"><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></td>' +\n            '<td style=\"min-width: 60px;\"><button title=\"{\\'BTN_COM_DELETE\\' | translate}\" class=\"btn btn-danger btn-xs\" ng-click=\"delField($index)\"><i class=\"fa  fa-trash-o\"></i></button></td>' +\n            '</tr></tbody>' +\n            '</table>');}\n\n        // complex\n        var templateKey_complex = \"voyageone.angular.directives.schemaComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_complex)) {$templateCache.put(templateKey_complex,\n            '<schema-header ng-repeat=\"field in vm.$$data.fields\" data=\"field\"><schema-item data=\"field\"></schema-item></schema-header>');}\n\n        // multi complex tip\n        var templateKey_multiComplex_tip = \"voyageone.angular.directives.schemaMultiComplexTip.tpl.html\";\n        if (!$templateCache.get(templateKey_multiComplex_tip)) {$templateCache.put(templateKey_multiComplex_tip,\n            '<div class=\"text-warnings\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><br><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div>');}\n\n        return {\n            restrict: \"E\",\n            require: ['^?form'],\n            replace: true,\n            bindToController: true,\n            controllerAs: \"vm\",\n            controller: function () {},\n            scope: {\n                $$data: \"=data\",\n                $$hastip: \"=hastip\",\n                $$complex: \"=complex\"\n            },\n            link: function (scope, element, ctrl) {\n\n                // 监视配置变动\n                scope.$watch('vm.$$data', function () {\n                    refresh ();\n                });\n\n                function refresh () {\n\n                    var schema = new schemaFactory();\n                    scope.vm.$$from = ctrl;\n\n                    // 设置空间name\n                    schema.name(scope.vm.$$data.id);\n\n                    _returnType (scope.vm.$$data.type);\n                    _operateRule (scope.vm.$$data.rules);\n\n                    var tempHtml = \"\";\n                    // 拼接body\n                    switch (schema.type()) {\n                        case fieldTypes.INPUT:\n                            tempHtml = $templateCache.get(templateKey_input).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.DATE:\n                            tempHtml = $templateCache.get(templateKey_date).replace(\"replaceInfo\", schema.html()).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.DATETIME:\n                            tempHtml = $templateCache.get(templateKey_datetime).replace(\"replaceInfo\", schema.html()).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.TEXTAREA:\n                            tempHtml = $templateCache.get(templateKey_textarea).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.SINGLE_CHECK:\n                            tempHtml = $templateCache.get(templateKey_select).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.RADIO:\n                            tempHtml = $templateCache.get(templateKey_radio).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.MULTI_CHECK:\n                            tempHtml = $templateCache.get(templateKey_checkbox).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.LABEL:\n                            tempHtml = $templateCache.get(templateKey_label);\n                            break;\n                        case fieldTypes.MULTI_COMPLEX:\n                            tempHtml = $templateCache.get(templateKey_multiComplex);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            tempHtml = $templateCache.get(templateKey_complex);\n                            break;\n                    }\n\n                    // 添加规则说明\n                    if (schema.tipMsg() != null && scope.vm.$$hastip) {\n                        tempHtml += $templateCache.get(templateKey_multiComplex_tip);\n                    }\n                    scope.showHtmlData = angular.copy(schema.schemaInfo());\n                    element.html($compile(tempHtml)(scope));\n\n                    /**\n                     * 设置checkbox被选中的value值处理\n                     * @param value\n                     */\n                    scope.checkboxValue = function (value) {\n                        if (_.contains(scope.showHtmlData.checkValues, value)) {\n                            scope.showHtmlData.checkValues.splice(_.indexOf(scope.showHtmlData.checkValues, value), 1);\n                        } else {\n                            scope.showHtmlData.checkValues.push(value);\n                        }\n                        scope.vm.$$data.values = [];\n                        angular.forEach(scope.showHtmlData.checkValues, function (obj) {\n                            scope.vm.$$data.values.push({id: null, value: obj});\n                        })\n                    };\n\n                    /**\n                     * 判断是否被选中\n                     * @param value\n                     */\n                    scope.isSelected = function (value) {\n                        return _.contains(scope.showHtmlData.checkValues, value)\n                    };\n\n                    /**\n                     * 设置multi complex删除该条记录\n                     * @param index\n                     */\n                    scope.delField = function (index) {\n                        scope.vm.$$data.complexValues.splice(index, 1);\n                    };\n\n                    /**\n                     * 返回需要展示的页面样式\n                     * @param type\n                     * @param valueTypeRule\n                     * @private\n                     */\n                    function _returnType (type) {\n                        schema.type(type);\n                        switch (type) {\n                            case fieldTypes.RADIO:\n                                if (scope.vm.$$complex)\n                                    schema.type(fieldTypes.SINGLE_CHECK);\n                                break;\n                            case fieldTypes.MULTI_CHECK:\n                                _setCheckValues(scope.vm.$$data.values);\n                                break;\n                            case fieldTypes.MULTI_COMPLEX:\n                                scope.vm.$$data.complexValues = _resetMultiComplex(scope.vm.$$data);\n                                break;\n                            case fieldTypes.COMPLEX:\n                                _resetComplex(scope.vm.$$data);\n                                break;\n                        }\n                    }\n\n                    /**\n                     * 设置checkvalues\n                     * @param values\n                     * @private\n                     */\n                    function _setCheckValues (values) {\n                        if (values != undefined && values != null) {\n                            angular.forEach(values, function (obj) {\n                                schema.checkValues(obj.value);\n                            })\n                        }\n                    }\n\n                    /**\n                     * 重新设置multicomplex的一些属性\n                     * @param fields\n                     * @private\n                     */\n                    function _resetMultiComplex (data) {\n                        var tempValues = [];\n                        angular.forEach(data.complexValues, function (value) {\n                            var tempFieldMap = {};\n                            angular.forEach(data.fields, function (field) {\n                                var tempField = angular.copy(field);\n                                if (value.fieldMap[field.id] != undefined) {\n                                    switch (field.type) {\n                                        case fieldTypes.INPUT:\n                                        case fieldTypes.LABEL:\n                                        case fieldTypes.DATE:\n                                        case fieldTypes.DATETIME:\n                                        case fieldTypes.TEXTAREA:\n                                        case fieldTypes.SINGLE_CHECK:\n                                        case fieldTypes.RADIO:\n                                            tempField.value = value.fieldMap[field.id].value;\n                                            break;\n                                        case fieldTypes.MULTI_INPUT:\n                                        case fieldTypes.MULTI_CHECK:\n                                            tempField.values = value.fieldMap[field.id].values;\n                                            break;\n                                        case fieldTypes.COMPLEX:\n                                            tempField.complexValue = value.fieldMap[field.id].complexValue;\n                                            break;\n                                        case fieldTypes.MULTI_COMPLEX:\n                                            tempField.complexValues = value.fieldMap[field.id].complexValues;\n                                            break;\n                                    }\n                                }\n                                tempFieldMap[field.id] = tempField;\n                            });\n                            tempValues.push({fieldMap: angular.copy(tempFieldMap)});\n                        });\n\n                        // 如果values为空,默认添加空白行\n                        if (_.isEmpty(data.complexValues)) {\n                            var newFieldMap = {};\n                            angular.forEach(data.fields, function (field) {\n                                console.log(field);\n                                eval(\"newFieldMap.\" + field.id + \"=field\");\n                            });\n\n                            tempValues.push({fieldMap: angular.copy(newFieldMap)});\n                        }\n\n                        return tempValues;\n                    }\n\n                    /**\n                     * 重新\n                     * @param data\n                     * @private\n                     */\n                    function _resetComplex (data) {\n                        angular.forEach(data.fields, function (field) {\n                            switch (field.type) {\n                                case fieldTypes.INPUT:\n                                case fieldTypes.LABEL:\n                                case fieldTypes.DATE:\n                                case fieldTypes.DATETIME:\n                                case fieldTypes.TEXTAREA:\n                                case fieldTypes.SINGLE_CHECK:\n                                case fieldTypes.RADIO:\n                                    field.value = data.complexValue.fieldMap[field.id].value;\n                                    break;\n                                case fieldTypes.MULTI_INPUT:\n                                case fieldTypes.MULTI_CHECK:\n                                    field.values = data.complexValue.fieldMap[field.id].values;\n                                    break;\n                                case fieldTypes.COMPLEX:\n                                    field.complexValue = data.complexValue.fieldMap[field.id].complexValue;\n                                    break;\n                                case fieldTypes.MULTI_COMPLEX:\n                                    field.complexValues = data.complexValue.fieldMap[field.id].complexValues;\n                                    break;\n                            }\n                        });\n                    }\n\n                    /**\n                     * 处理rules\n                     * @param rules\n                     * @private\n                     */\n                    function _operateRule (rules) {\n                        angular.forEach(rules, function (rule) {\n                            switch (rule.name) {\n                                case ruleTypes.VALUE_TYPE_RULE:\n                                    _valueTypeRule(rule);\n                                    break;\n                                case ruleTypes.REQUIRED_RULE:\n                                    _requiredRule(rule);\n                                    break;\n                                case ruleTypes.DISABLE_RULE:\n                                    _disableRule(rule);\n                                    break;\n                                case ruleTypes.READ_ONLY_RULE:\n                                    _readOnlyRule(rule);\n                                    break;\n                                case ruleTypes.REGEX_RULE:\n                                    _regexRule(rule);\n                                    break;\n                                case ruleTypes.TIP_RULE:\n                                    _tipRule(rule);\n                                    break;\n                                case ruleTypes.MIN_LENGTH_RULE:\n                                    _minLengthRule(rule);\n                                    break;\n                                case ruleTypes.MAX_LENGTH_RULE:\n                                    _maxLengthRule(rule);\n                                    break;\n                                case ruleTypes.MIN_VALUE_RULE:\n                                    _minValueRule(rule);\n                                    break;\n                                case ruleTypes.MAX_VALUE_RULE:\n                                    _maxValueRule(rule);\n                                    break;\n                                case ruleTypes.MIN_INPUT_NUM_RULE:\n                                    _minInputNumRule(rule);\n                                    break;\n                                case ruleTypes.MAX_INPUT_NUM_RULE:\n                                    _maxInputNumRule(rule);\n                                    break;\n                            }\n                        })\n                    }\n\n                    /**\n                     * 处理valueTypeRule\n                     * @param valueTypeRule\n                     * @private\n                     */\n                    function _valueTypeRule (valueTypeRule) {\n                        switch (valueTypeRule.value) {\n                            case valueTypes.TEXT:\n                            case valueTypes.DECIMAL:\n                            case valueTypes.INTEGER:\n                            case valueTypes.LONG:\n                                schema.type(fieldTypes.INPUT);\n                                schema.html(\"type=\\\"text\\\"\");\n                                break;\n                            case valueTypes.DATE:\n                                schema.type(fieldTypes.DATE);\n                                break;\n                            case valueTypes.TIME:\n                                schema.type(fieldTypes.DATETIME);\n                                break;\n                            case valueTypes.URL:\n                                schema.type(fieldTypes.INPUT);\n                                schema.html(\"type=\\\"url\\\"\");\n                                break;\n                            case valueTypes.TEXTAREA:\n                                schema.type(fieldTypes.TEXTAREA);\n                                schema.rowNum(4);\n                                break;\n                            case valueTypes.HTML:\n                                schema.type(fieldTypes.TEXTAREA);\n                                schema.rowNum(10);\n                                break;\n                        }\n                    }\n\n                    /**\n                     * 处理requiredRule\n                     * @param requiredRule\n                     * @private\n                     */\n                    function _requiredRule (requiredRule) {\n                        if (\"true\" == requiredRule.value) {\n                            schema.isRequired(true);\n                            schema.html(\"required\");\n                        }\n                    }\n\n                    /**\n                     * 处理disableRule\n                     * @param disableRule\n                     * @private\n                     */\n                    function _disableRule (disableRule) {\n                        if (\"true\" == disableRule.value\n                            && disableRule.dependGroup == null) {\n                            schema.html(\"ng-disabled=\\\"true\\\"\");\n                        }\n                    }\n\n                    /**\n                     * 处理readOnlyRule\n                     * @param readOnlyRule\n                     * @private\n                     */\n                    function _readOnlyRule (readOnlyRule) {\n                        if (\"true\" == readOnlyRule.value) {\n                            schema.html(\"readonly\");\n                        }\n                    }\n\n                    /**\n                     * 处理regexRule\n                     * @param regexRule\n                     * @private\n                     */\n                    function _regexRule (regexRule) {\n                        schema.html(\"ng-pattern=\\\"/\" + regexRule.value +\"/\\\"\");\n                    }\n\n                    /**\n                     * 处理tipRule\n                     * @param tipRule\n                     * @private\n                     */\n                    function _tipRule (tipRule) {\n                        schema.tipMsg(tipRule.value);\n                    }\n\n                    /**\n                     * 处理minLengthRule\n                     * @param minLengthRule\n                     * @private\n                     */\n                    function _minLengthRule (minLengthRule) {\n                        var value = isNaN(parseInt(minLengthRule.value)) ? 0 : minLengthRule.value;\n\n                        if (\"not include\" === minLengthRule.exProperty)\n                            value = (value > 0) ? value -1 : 0;\n\n                        if (\"character\" == minLengthRule.unit)\n                            schema.html(\"ng-minlength=\\\"\" + value +\"\\\"\");\n                        else\n                            schema.html(\"ng-char-minlength=\\\"\" + value +\"\\\"\");\n                    }\n\n                    /**\n                     * 处理maxLengthRule\n                     * @param maxLengthRule\n                     * @private\n                     */\n                    function _maxLengthRule (maxLengthRule) {\n                        var value = isNaN(parseInt(maxLengthRule.value)) ? 0 : maxLengthRule.value;\n\n                        if (\"not include\" === maxLengthRule.exProperty)\n                            value = (value > 0) ? value -1 : 0;\n\n                        if (\"character\" == maxLengthRule.unit)\n                            schema.html(\"ng-maxlength=\\\"\" + value +\"\\\"\");\n                        else\n                            schema.html(\"ng-char-maxlength=\\\"\" + value +\"\\\"\");\n                    }\n\n                    /**\n                     * 处理minValueRule\n                     * @param minValueRule\n                     * @private\n                     */\n                    function _minValueRule (minValueRule) {\n                        var value = isNaN(parseFloat(minValueRule.value)) ? 0 : parseFloat(minValueRule.value);\n\n                        if (\"not include\" === minValueRule.exProperty)\n                            value = (value > 0) ? value - 0.01 : 0;\n\n                        schema.html(\"ng-minvalue=\\\"\" + value +\"\\\"\");\n                    }\n\n                    /**\n                     * 处理maxValueRule\n                     * @param maxValueRule\n                     * @private\n                     */\n                    function _maxValueRule (maxValueRule) {\n                        var value = isNaN(parseFloat(maxValueRule.value)) ? 0 : parseFloat(maxValueRule.value);\n\n                        if (\"not include\" === maxValueRule.exProperty)\n                            value = (value > 0) ? value - 0.01 : 0;\n\n                        schema.html(\"ng-maxvalue=\\\"\" + value +\"\\\"\");\n\n                    }\n\n                    /**\n                     * 处理minInputNumRule\n                     * @param minInputNumRule\n                     * @private\n                     */\n                    function _minInputNumRule (minInputNumRule) {\n                        var value = isNaN(parseInt(minInputNumRule.value)) ? 0 : parseInt(minInputNumRule.value);\n\n                        if (\"not include\" === minInputNumRule.exProperty)\n                            value = (value > 0) ? value - 1 : 0;\n\n                        schema.html(\"ng-mininputnum=\\\"\" + value +\"\\\"\");\n                    }\n\n                    /**\n                     * 处理maxInputNumRule\n                     * @param maxInputNumRule\n                     * @private\n                     */\n                    function _maxInputNumRule (maxInputNumRule) {\n                        var value = isNaN(parseInt(maxInputNumRule.value)) ? 0 : parseInt(maxInputNumRule.value);\n\n                        if (\"not include\" === maxInputNumRule.exProperty)\n                            value = (value > 0) ? value - 1 : 0;\n\n                        schema.html(\"ng-maxinputnum=\\\"\" + value +\"\\\"\");\n                    }\n\n                    /**\n                     * 如果checkbox被选中,返回被选中的value.\n                     * eg.[{new: true, pending: false, approved: true}] -> [new, approved]\n                     * @param object\n                     * @returns {*}\n                     */\n                    //function _returnKey(object) {\n                    //    var result = [];\n                    //    angular.forEach(object, function(value, index) {\n                    //        if (value) result.push(index);\n                    //    });\n                    //    return result;\n                    //}\n                }\n            }\n        }\n    });\n","/**\n * @Description:\n * 用于动态显示options\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-22\n */\n\nangular.module('voyageone.angular.directives.voption', [])\n    .directive('voption', function ($templateCache, $compile) {\n\n        var templateKey_select = \"voyageone.angular.directives.optionSelect.tpl.html\";\n\n        // 显示成select样式\n        if (!$templateCache.get(templateKey_select)) {\n            $templateCache.put(templateKey_select,\n                '<select class=\"form-control\" ng-model=\"$$data.value.value\" ng-options=\"option.value as option.displayName for option in $$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');\n        }\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope, element) {\n\n                // 定义不同的展示种类\n                var typeList = {\n                    SINGLE_CHECK: \"SINGLECHECK\"\n                };\n\n                // 监视配置变动\n                scope.$watch('$$data', function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 根据type选择展示不同的控件\n                 */\n                function refresh() {\n                    var tempHtml;\n                    switch (scope.$$data.type) {\n                        case typeList.SINGLE_CHECK:\n                            tempHtml = $compile($templateCache.get(templateKey_select))(scope);\n                            break;\n                    }\n                    element.html(tempHtml);\n                }\n            }\n        };\n    });","/**\n * @Description:\n * 用于分页\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-08\n */\n\nangular.module('voyageone.angular.directives.vpagination', [])\n    .directive('vpagination', function ($templateCache, $compile, vpagination) {\n\n        var templateKey = \"voyageone.angular.directives.pagination.tpl.html\";\n        var templateKeyNoData = \"voyageone.angular.directives.paginationNoData.tpl.html\";\n\n        // 有数据分页样式\n        if (!$templateCache.get(templateKey)) {\n            $templateCache.put(templateKey,\n                '<div class=\"col-sm-2\">\\n' +\n                '    <div class=\"page-main form-inline\">{{\\'TXT_COM_SHOWING_NO\\' | translate}}&nbsp;<input class=\"text-center\" type=\"text\" ng-model=\"curr.pageNo\"/>&nbsp;/&nbsp;{{totalPages}}&nbsp;{{\\'TXT_COM_PAGE\\' | translate}}&nbsp;' +\n                '        <button class=\"btn btn-xs btn-default\" type=\"button\" ng-click=\"goPage(curr.pageNo)\" translate=\"BTN_GO\"></button>\\n' +\n                '    </div>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-7 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_COM_SHOWING\\' | translate}}&nbsp;{{curr.start}}-{{curr.end}}&nbsp;{{\\'TXT_COM_OF\\' | translate}}&nbsp;{{totalItems}}&nbsp{{\\'TXT_COM_ITEMS\\' | translate}}</small>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-3 text-right text-center-xs\"><div>' +\n                '    <ul class=\"pagination-sm m-t-none m-b pagination ng-isolate-scope ng-valid ng-dirty ng-valid-parse\">\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-first\"><a href ng-click=\"goPage(1)\" ng-disabled=\"curr.isFirst\">&laquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-prev\"><a href ng-click=\"goPage(curr.pageNo - 1)\" ng-disabled=\"curr.isFirst\">&lsaquo;</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowStart\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-repeat=\"page in curr.pages track by $index\" ng-class=\"{active: isCurr(page)}\" class=\"pagination-page\"><a href ng-click=\"goPage(page)\">{{page}}</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowEnd\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-next\"><a href ng-click=\"goPage(curr.pageNo + 1)\" ng-disabled=\"curr.isLast\">&rsaquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-last\"><a href ng-click=\"goPage(totalPages)\" ng-disabled=\"curr.isLast\">&raquo;</a></li>\\n' +\n                '    </ul>\\n' +\n                '</div>');\n        }\n\n        // 无数据分页样式\n        if (!$templateCache.get(templateKeyNoData)) {\n            $templateCache.put(templateKeyNoData,\n                '<div class=\"col-sm-7 col-sm-offset-2 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_COM_SHOWING\\' | translate}}&nbsp;0-0&nbsp;{{\\'TXT_COM_OF\\' | translate}}&nbsp;0&nbsp{{\\'TXT_COM_ITEMS\\' | translate}}</small>\\n' +\n                '</div>');\n        }\n\n        var defConfig = {curr: 1, total: 0, size: 20, showPageNo:5};\n\n        return {\n            restrict: \"AE\",\n            //templateUrl: templateKey,\n            replace: false,\n            scope: {\n                $$configNameForA: \"@vpagination\",\n                $$configNameForE: \"@config\"\n            },\n            link: function (scope, element) {\n\n                // 获取用户的config配置\n                var userConfigName = scope.$$configNameForA || scope.$$configNameForE;\n                var userConfig = scope.$parent.$eval(userConfigName);\n\n                // 将用户配置覆盖到默认配置后，在重新覆盖到用户配置上，用于补全配置属性\n                var userWithDefConfig = angular.extend({}, defConfig, userConfig);\n                scope.config = angular.extend(userConfig, userWithDefConfig);\n\n                var p = new vpagination(scope.config);\n\n                // 监视配置变动\n                scope.$parent.$watch(userConfigName, function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 跳转到指定页\n                 * @param num\n                 */\n                scope.goPage = function (num) {\n                    p.goPage(isNaN(Number(num)) ? 1 : Number(num));\n                };\n\n                /**\n                 * 判断是否是当前页\n                 * @param num\n                 * @returns {*|boolean}\n                 */\n                scope.isCurr = function (num) {\n                    return p.isCurr(num);\n                };\n\n                function refresh() {\n\n                    // 获取总页数\n                    scope.totalPages = p.getPageCount();\n                    // 获取总items数\n                    scope.totalItems = p.getTotal();\n                    // 获取当前页的信息\n                    scope.curr = p.getCurr();\n\n                    // 根据总数量显示不同的分页样式\n                    var tempHtml;\n                    if(p.getTotal() == 0) {\n                        tempHtml = $compile($templateCache.get(templateKeyNoData))(scope);\n                    } else {\n                        tempHtml = $compile($templateCache.get(templateKey))(scope);\n                    }\n                    element.html(tempHtml);\n\n                }\n            }\n        };\n    });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\nangular.module('voyageone.angular.directives.validator', [])\n\n    // 定义ng-char-maxlength\n    .directive('ngCharMaxlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxlength = -1;\n                attr.$observe('ngCharMaxlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    maxlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxlength = function(modelValue, viewValue) {\n                    return (maxlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) <= maxlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-char-minlength\n    .directive('ngCharMinlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minlength = -1;\n                attr.$observe('ngCharMinlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    minlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minlength = function(modelValue, viewValue) {\n                    return (minlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) >= minlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-maxvalue\n    .directive('ngMaxvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        maxvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        maxvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        maxvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxvalue = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-minvalue\n    .directive('ngMinvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMinvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        minvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        minvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        minvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minvalue = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue >= minvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-maxinputnum\n    .directive('ngMaxinputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxinputvalue', function(value) {\n                    maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxinputnum = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-mininputnum\n    .directive('ngMininputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMininputnum', function(value) {\n                    minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.mininputnum = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length >= minvalue);\n                };\n            }\n        }\n    })\n;","/**\n * @description\n *\n * 自动创建基于地址定义的数据访问 service.\n * 传入的定义必须是 {object}, 并且至少有 root 属性\n *\n * @User: Jonas\n * @Date: 2015-12-10 19:32:37\n * @Version: 2.0.0\n */\n\n//@Skip\nangular.module('voyageone.angular.vresources', [])\n  .provider('$vresources', function ($provide) {\n\n    /**\n     * @description 构建请求地址的 url\n     * @param {string} root 请求的根路径\n     * @param {string} action 请求的名称\n     * @returns {string}\n     */\n    function getActionUrl(root, action) {\n      return root + (root.lastIndexOf('/') === root.length - 1 ? '' : '/') + action;\n    }\n\n    /**\n     * 闭包声明一个数据访问的 Service\n     * @param {string} name Service 的名称\n     * @param {object} actions 方法和地址定义\n     * @param {AjaxService} ajaxService 封装的 ajax 发送服务\n     */\n    function closureDataService(name, actions, ajaxService) {\n      /**\n       * @description 与 actions 一同闭包的构造函数\n       * @constructor\n       */\n      function DataResource() {\n        if (!actions) {\n          return;\n        }\n\n        if (typeof actions !== \"object\") {\n          console.log(\"Failed to new DataResource: [\" + actions + \"] is not a object\");\n          return;\n        }\n\n        if (!actions.root) {\n          console.log(\"Failed to new DataResource: no root prop\" + (JSON && JSON.stringify ? \": \" + JSON.stringify(actions) : \"\"));\n          return;\n        }\n\n        // 遍历配置\n        for (var name in actions) {\n          // 不对 root 进行创建\n          if (name === \"root\") continue;\n          // 额外的检查\n          if (actions.hasOwnProperty(name)) {\n            // 闭包创建函数\n            this[name] = (function (actionUrl) {\n              return function (data) {\n                return ajaxService.post(actionUrl, data);\n              };\n            })(getActionUrl(actions.root, actions[name]));\n          }\n        }\n      }\n\n      $provide.service(name, DataResource);\n    }\n\n    this.$get = function (ajaxService) {\n\n      return {\n        register: function (name, actions) {\n\n          if (!actions) return;\n\n          if (typeof actions !== 'object') return;\n\n          // 如果有 root 这个属性,就创建 service\n          if (actions.root) {\n            closureDataService(name, actions, ajaxService);\n            return;\n          }\n\n          // 否则继续访问子属性\n          for (var childName in actions) {\n            // 额外的检查\n            if (actions.hasOwnProperty(childName)) {\n\n              this.register(childName, actions[childName]);\n            }\n          }\n        }\n      };\n    };\n  })\n\n  .run(function ($vresources, $actions) {\n    $vresources.register(null, $actions);\n  });","/**\n * @Date:    2015-11-16 18:48:29\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.ajax', [])\n  .service('$ajax', $Ajax)\n  .service('ajaxService', AjaxService);\n\nfunction $Ajax($http, blockUI, $q) {\n  this.$http = $http;\n  this.blockUI = blockUI;\n  this.$q = $q;\n}\n$Ajax.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n  this.$http.post(url, data).then(function (response) {\n    var res = response.data;\n    if (!res) {\n      alert('相应结果不存在?????');\n      defer.reject(null);\n      return;\n    }\n    if (res.message || res.code) {\n      defer.reject(res);\n      return;\n    }\n    defer.resolve(res);\n  }, function (response) {\n    defer.reject(null, response);\n  });\n  return defer.promise;\n};\n\nfunction AjaxService($q, $ajax, messageService) {\n  this.$q = $q;\n  this.$ajax = $ajax;\n  this.messageService = messageService;\n}\nAjaxService.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n\n  this.$ajax.post(url, data).then(function(res) {\n    // 成功\n    defer.resolve(res);\n    return res;\n  }, (function (_this) {\n    // 失败\n    return function(res) {\n      _this.messageService.show(res);\n      defer.reject(res);\n      return res;\n    };\n  })(this));\n\n  return defer.promise;\n};","/**\n * @Date:    2015-11-16 20:30:37\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.cookie', [])\n  .service('cookieService', CookieService);\n\nvar keys = {\n  language: 'voyageone.user.language',\n  company: 'voyageone.user.company',\n  channel: 'voyageone.user.channel',\n  application: \"voyageone.user.application\",\n};\n\nfunction gentProps(key) {\n  return function(val) {\n    if (arguments.length === 1) {\n      return this.set(key, val);\n    } else if (arguments.length > 1) {\n      return this.set(key, arguments);\n    }\n    return this.get(key);\n  };\n}\n\nfunction CookieService($cookieStore) {\n  this.$cookieStore = $cookieStore;\n}\n\nCookieService.prototype.get = function(key) {\n  var result = this.$cookieStore.get(key);\n  return result == undefined || result == null ? \"\" : this.$cookieStore.get(key);\n};\n\nCookieService.prototype.set = function(key, value) {\n  return this.$cookieStore.put(key, value);\n};\n\nCookieService.prototype.language = gentProps(keys.language);\n\nCookieService.prototype.company = gentProps(keys.company);\n\nCookieService.prototype.channel = gentProps(keys.channel);\n\nCookieService.prototype.application = gentProps(keys.application);\n\nCookieService.prototype.removeAll = function () {\n  this.$cookieStore.remove(keys.language);\n  this.$cookieStore.remove(keys.company);\n  this.$cookieStore.remove(keys.channel);\n  this.$cookieStore.remove(keys.application);\n};\n","/**\n * 对后台的信息进行自动处理\n * @Date:    2015-11-19 14:47:23\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.message', [])\n  .service('messageService', MessageService);\n\n// 同步,DisplayType 枚举\nvar DISPLAY_TYPES = {\n  /**\n   * 弹出提示\n   */\n  ALERT: 1,\n  /**\n   * 顶端弹出自动关闭\n   */\n  NOTIFY: 2,\n  /**\n   * 右下弹出自动关闭\n   */\n  POP: 3,\n  /**\n   * 用户自定义处理\n   */\n  CUSTOM: 4\n};\n\nfunction MessageService(alert, confirm, notify) {\n  this.alert = alert;\n  this.confirm = confirm;\n  this.notify = notify;\n}\n\nMessageService.prototype = {\n  /**\n   * 根据类型自动显示信息\n   * @param {{displayType:Number, message:String}} res\n   */\n  show: function(res) {\n\n    var displayType = res.displayType;\n    var message = res.message;\n\n    switch (displayType) {\n      case DISPLAY_TYPES.ALERT:\n        this.alert(message);\n        break;\n      case DISPLAY_TYPES.NOTIFY:\n        this.notify(message);\n        break;\n      case DISPLAY_TYPES.POP:\n        this.notify({message: message, position: 'right bottom'});\n        break;\n    }\n  }\n};","/**\n * @Date:    2015-11-19 14:26:43\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.permission', [])\n  .service('permissionService', PermissionService);\n\nfunction PermissionService($rootScope) {\n  this.$rootScope = $rootScope;\n  this.permissions = [];\n}\n\nPermissionService.prototype = {\n  /**\n   * set the action permissions.\n   * @param permissions\n   */\n  setPermissions: function(permissions) {\n    this.permissions = permissions;\n    this.$rootScope.$broadcast('permissionsChanged');\n  },\n  /**\n   * check the permission has been in action permissions.\n   * @param permission\n   * @returns {boolean|*}\n   */\n  has: function(permission) {\n    return _.contains(this.permissions, permission.trim());\n  }\n};\n","/**\n * @Date:    2015-11-19 14:35:25\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.translate', [])\n  .service('translateService', TranslateService);\n\nfunction TranslateService($translate) {\n  this.$translate = $translate;\n}\n\nTranslateService.prototype = {\n  languages: {\n    en: \"en\",\n    zh: \"zh\"\n  },\n  /**\n   * set the web side language type.\n   * @param key\n   */\n  setLanguage: function(language) {\n    if (!_.contains(this.languages, language)) {\n      language = this.getBrowserLanguage();\n    }\n    this.$translate.use(language);\n    return language;\n  },\n  /**\n   * get the browser language type.\n   * @returns {string}\n   */\n  getBrowserLanguage: function() {\n    var currentLang = navigator.language;\n    if (!currentLang)\n      currentLang = navigator.browserLanguage;\n    return currentLang.substr(0, 2);\n  }\n};\n"],"sourceRoot":"components/angular"}