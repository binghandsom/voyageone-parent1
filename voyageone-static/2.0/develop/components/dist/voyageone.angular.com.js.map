{"version":3,"sources":["voyageone.angular.com.js","directives/dateModelFormat.directive.js","directives/enterClick.directive.js","directives/filestyle.directive.js","directives/ifNoRows.directive.js","directives/navigation.directive.js","directives/schema.directive.js","directives/voption.directive.js","directives/vpagination.directive.js","directives/vvalidator.directive.js","controllers/datePicker.ctrl.js","controllers/selectRows.ctrl.js","controllers/showPopover.ctrl.js","factories/dialogs.factory.js","factories/interceptor.factory.js","factories/notify.factory.js","factories/schema.factory.js","factories/vpagination.factory.js","providers/vresources.js","services/ajax.service.js","services/cookie.service.js","services/message.service.js","services/permission.service.js","services/translate.service.js"],"names":["define","angular","module","directive","$filter","restrict","require","link","scope","elem","attrs","ngModel","$parsers","push","viewValue","dateModelFormat","attr","$","keyup","e","keyCode","selectExp","enterClick","targetElem","handler","click","element","length","$eval","controller","$scope","$element","options","data","classInput","filestyle","$templateCache","$compile","tempNoDataKey","get","put","replace","$$data","$parent","$watch","find","remove","append","el","_window","window","_mb","wrap","next","backdrop","on","trigger","_this","this","parent","siblings","toggleClass","is","preventDefault","width","removeClass","target","top","w_h","height","offset","min","closest","addClass","position","css","appendTo","off","insertAfter","constant","INPUT","DATE","DATETIME","TEXTAREA","SINGLE_CHECK","RADIO","MULTI_INPUT","MULTI_CHECK","COMPLEX","MULTI_COMPLEX","LABEL","VALUE_TYPE_RULE","REQUIRED_RULE","DISABLE_RULE","READ_ONLY_RULE","REGEX_RULE","SET_RULE","TIP_RULE","DEV_TIP_RULE","MIN_LENGTH_RULE","MAX_LENGTH_RULE","MIN_VALUE_RULE","MAX_VALUE_RULE","MIN_INPUT_NUM_RULE","MAX_INPUT_NUM_RULE","MIN_DECIMAL_DIGITS_RULE","MAX_DECIMAL_DIGITS_RULE","MIN_TARGET_SIZE_RULE","MAX_TARGET_SIZE_RULE","MIN_IMAGE_SIZE_RULE","MAX_IMAGE_SIZE_RULE","TEXT","DECIMAL","INTEGER","LONG","TIME","URL","HTML","schemaHeaderFactory","fieldTypes","ruleTypes","valueTypes","templateKey_header","transclude","templateUrl","schemaHeader","_returnType","type","_operateRule","rules","showHtmlData","copy","schemaHearInfo","addField","newFieldMap","forEach","fields","field","eval","id","values","fieldMap","isMultiComplex","isComplex","rule","name","_requiredRule","_tipRule","requiredRule","value","isRequired","tipRule","tipMsg","schemaFactory","templateKey_label","templateKey_input","templateKey_date","templateKey_datetime","templateKey_textarea","templateKey_select","templateKey_radio","templateKey_checkbox","templateKey_multiComplex","templateKey_complex","templateKey_multiComplex_tip","$$hastip","$$complex","schema","tempHtml","html","schemaInfo","checkboxValue","_returnKey","checkValues","obj","delField","index","splice","_setCheckValues","_resetMultiComplex","_resetComplex","undefined","tempValues","tempFieldMap","_valueTypeRule","_disableRule","_readOnlyRule","_regexRule","_minLengthRule","_maxLengthRule","_minValueRule","_maxValueRule","_minInputNumRule","_maxInputNumRule","valueTypeRule","rowNum","disableRule","readOnlyRule","regexRule","minLengthRule","isNaN","parseInt","exProperty","unit","maxLengthRule","minValueRule","parseFloat","maxValueRule","minInputNumRule","maxInputNumRule","object","result","typeList","refresh","vpagination","templateKey","templateKeyNoData","defConfig","curr","total","size","showPageNo","$$configNameForA","$$configNameForE","userConfigName","userConfig","userWithDefConfig","extend","config","p","goPage","num","Number","isCurr","totalPages","getPageCount","totalItems","getTotal","getCurr","elm","ctrl","maxlength","$observe","intVal","$validate","$validators","modelValue","$isEmpty","getByteLength","byteLen","len","i","charCodeAt","minlength","maxvalue","test","Date","minvalue","maxinputnum","mininputnum","vm","formats","formatDate","formatDateTime","open","$event","stopPropagation","opened","selectAll","selectOne","objectList","selAllFlag","currPageRows","selFlag","hasOwnProperty","selList","indexOf","currentId","_","isEqual","showInfo","factory","$modal","templateName","tran","translationId","isObject","content","title","modalInstance","close","dismiss","ok","$dialogs","isAlert","vConfirm","InterceptorFactory","$httpProvider","interceptors","UNKNOWN_CODE","CODE_SYS_REDIRECT","MSG_TIMEOUT","autoRedirect","res","code","location","href","redirectTo","sessionTimeout","unknownException","response","$$lastUnknow","console","error","message","request","requestError","responseError","notify","isString","success","className","warning","danger","_schemaHeaderInfo","_schemaInfo","htmlToString","htmls","_pages","_lastTotal","_showPages","pageNo","start","getCurrStartItems","end","getCurrEndItems","isFirst","isLast","pages","createShowPages","isShowStart","isShowEnd","load","getPages","page","fetch","minPage","maxPage","currEndItems","provider","$provide","getActionUrl","root","action","lastIndexOf","closureDataService","actions","ajaxService","DataResource","log","JSON","stringify","actionUrl","post","service","$get","register","childName","run","$vresources","$actions","$Ajax","AjaxService","$http","blockUI","$q","$inject","prototype","url","defer","then","alert","reject","resolve","promise","$ajax","messageService","show","CookieService","keys","language","company","channel","application","gentProps","key","val","arguments","set","$cookieStore","removeAll","MessageService","DISPLAY_TYPES","ALERT","NOTIFY","POP","CUSTOM","confirm","displayType","PermissionService","$rootScope","permissions","setPermissions","$broadcast","has","permission","contains","trim","TranslateService","$translate","languages","en","zh","setLanguage","getBrowserLanguage","use","currentLang","navigator","browserLanguage","substr"],"mappings":"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","file":"voyageone.angular.com.js","sourcesContent":["define(function(){\n/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.dateModelFormat', [])\n    .directive('dateModelFormat', [\"$filter\", function ($filter) {\n        return {\n            restrict: \"A\",\n            require: 'ngModel',\n            link: function (scope, elem, attrs, ngModel) {\n                ngModel.$parsers.push(function (viewValue) {\n                    return $filter('date')(viewValue, attrs.dateModelFormat || 'yyyy-MM-dd HH:mm:ss');\n                });\n            }\n        };\n    }]);\n\n/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.directives.enterClick', [])\n  .directive('enterClick', function() {\n    return {\n      restrict: \"A\",\n      link: function(scope, elem, attr) {\n        $(elem).keyup(function(e) {\n          if (e.keyCode !== 13) return;\n\n          var selectExp = attr.enterClick;\n\n          var targetElem, handler = function() {\n            targetElem.click();\n          };\n\n          try {\n            targetElem = angular.element(selectExp);\n          } catch (e) {\n            targetElem = null\n          }\n\n          if (!targetElem || !targetElem.length) {\n            // 如果取不到元素，则尝试作为表达式执行\n            handler = function() {\n              scope.$eval(selectExp);\n            };\n          } else if (targetElem.attr(\"disabled\")) {\n            // 如果元素存在，但是是禁用状态的，放弃执行\n            return;\n          }\n\n          handler();\n        });\n      }\n    };\n  });\n\n/**\n * @Description:\n * 引入对上传框插件 fileStyle 的指令支持\n * @Date:    2015-11-19 17:35:22\n * @User:    Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.fileStyle', [])\n  .directive('fileStyle', function () {\n    return {\n      restrict: 'A',\n      controller: [\"$scope\", \"$element\", function ($scope, $element) {\n        var options = $element.data();\n        // old usage support\n        options.classInput = $element.data('classinput') || options.classInput;\n        if ($element.filestyle) {\n          $element.filestyle(options);\n        }\n      }]\n    };\n  });\n/**\n * @Description:\n * table中无数据范围的数据\n * @User: linanbin\n * @Version: 2.0.0, 15/12/11\n */\n\nangular.module('voyageone.angular.directives.ifNoRows', [])\n    .directive('ifNoRows', [\"$templateCache\", \"$compile\", function ($templateCache, $compile) {\n\n        var tempNoDataKey = \"voyageone.angular.directives.ifNoRows.tpl.html\";\n\n        // 没有数据显示警告\n        if (!$templateCache.get(tempNoDataKey)) {\n            $templateCache.put(tempNoDataKey,\n            '<div class=\"text-center text-hs\" id=\"noData\">\\n' +\n            '    <h4 class=\"text-vo\"><i class=\"icon fa fa-warning\"></i>&nbsp;{{\\'TXT_COM_WARNING\\' | translate}}</h4>\\n' +\n            '{{\\'TXT_COM_MSG_NO_DATE\\' | translate}}' +\n            '</dv>');\n        }\n\n        return {\n            restrict: \"A\",\n            replace: false,\n            scope: {\n                $$data: \"@ifNoRows\"\n            },\n            link: function (scope, element) {\n\n                scope.$parent.$watch(scope.$$data, function () {\n\n                    // 如果数据不存在则显示警告信息\n                    if(scope.$parent.$eval(scope.$$data)  == 0) {\n                        element.find(\"#noData\").remove();\n                        element.append($compile($templateCache.get(tempNoDataKey))(scope));\n                    } else {\n                        element.find(\"#noData\").remove();\n                    }\n                })\n            }\n        };\n    }]);\n\n/**\n * @Description:\n * 用于菜单目录二级展开\n * @User:    Jonas\n * @Version: 0.2.0, 2015-12-07\n */\n\nangular.module('voyageone.angular.directives.uiNav', [])\n    .directive('uiNav', function () {\n\n        return {\n            restrict: 'AC',\n            link: function(scope, el) {\n                var _window = $(window),\n                    _mb = 768,\n                    wrap = $('.app-aside'),\n                    next,\n                    backdrop = '.dropdown-backdrop';\n                // unfolded\n                el.on('click', 'a', function(e) {\n                    next && next.trigger('mouseleave.nav');\n                    var _this = $(this);\n                    _this.parent().siblings( \".active\" ).toggleClass('active');\n                    _this.next().is('ul') &&  _this.parent().toggleClass('active') &&  e.preventDefault();\n                    // mobile\n                    _this.next().is('ul') || ( ( _window.width() < _mb ) && $('.app-aside').removeClass('show off-screen') );\n                });\n\n                // folded & fixed\n                el.on('mouseenter', 'a', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                    if ( !$('.app-aside-fixed.app-aside-folded').length || ( _window.width() < _mb ) || $('.app-aside-dock').length) return;\n                    var _this = $(e.target)\n                        , top\n                        , w_h = $(window).height()\n                        , offset = 50\n                        , min = 150;\n\n                    !_this.is('a') && (_this = _this.closest('a'));\n                    if( _this.next().is('ul') ){\n                        next = _this.next();\n                    }else{\n                        return;\n                    }\n\n                    _this.parent().addClass('active');\n                    top = _this.parent().position().top + offset;\n                    next.css('top', top);\n                    if( top + next.height() > w_h ){\n                        next.css('bottom', 0);\n                    }\n                    if(top + min > w_h){\n                        next.css('bottom', w_h - top - offset).css('top', 'auto');\n                    }\n                    next.appendTo(wrap);\n\n                    next.on('mouseleave.nav', function(e){\n                        $(backdrop).remove();\n                        next.appendTo(_this.parent());\n                        next.off('mouseleave.nav').css('top', 'auto').css('bottom', 'auto');\n                        _this.parent().removeClass('active');\n                    });\n\n                    $('.smart').length && $('<div class=\"dropdown-backdrop\"/>').insertAfter('.app-aside').on('click', function(next){\n                        next && next.trigger('mouseleave.nav');\n                    });\n\n                });\n\n                wrap.on('mouseleave', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                });\n            }\n        };\n    });\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/24\n */\n\nangular.module('voyageone.angular.directives.schema', [])\n    // 定义fieldTypes\n    .constant('fieldTypes', {\n        INPUT: \"INPUT\",\n        DATE: \"DATE\",\n        DATETIME: \"DATETIME\",\n        TEXTAREA: \"TEXTAREA\",\n        SINGLE_CHECK: \"SINGLECHECK\",// 在complex中的显示select,以外的默认显示singlecheck,如果用户觉得select显示不方便,就将该field的type改成radio\n        RADIO: \"RADIO\",\n        MULTI_INPUT: \"MULTIINPUT\", // 没有被使用\n        MULTI_CHECK: \"MULTICHECK\",\n        COMPLEX: \"COMPLEX\", // TODO\n        MULTI_COMPLEX: \"MULTICOMPLEX\",\n        LABEL: \"LABEL\"  // 可以不显示\n    })\n    // 定义ruleTypes\n    .constant('ruleTypes', {\n        VALUE_TYPE_RULE: \"valueTypeRule\",\n        REQUIRED_RULE: \"requiredRule\",\n        DISABLE_RULE: \"disableRule\",\n        READ_ONLY_RULE: \"readOnlyRule\",\n        REGEX_RULE: \"regexRule\",\n        SET_RULE: \"setRule\", // TODO 暂时不知道怎么用\n        TIP_RULE: \"tipRule\", // TODO 不需要处理\n        DEV_TIP_RULE: \"devTipRule\", // 不需要处理\n        MIN_LENGTH_RULE: \"minLengthRule\",\n        MAX_LENGTH_RULE: \"maxLengthRule\",\n        MIN_VALUE_RULE: \"minValueRule\",\n        MAX_VALUE_RULE: \"maxValueRule\",\n        MIN_INPUT_NUM_RULE: \"minInputNumRule\",\n        MAX_INPUT_NUM_RULE: \"maxInputNumRule\",\n        MIN_DECIMAL_DIGITS_RULE: \"minDecimalDigitsRule\", // TODO\n        MAX_DECIMAL_DIGITS_RULE: \"maxDecimalDigitsRule\", // TODO\n        MIN_TARGET_SIZE_RULE: \"minTargetSizeRule\", // TODO\n        MAX_TARGET_SIZE_RULE: \"maxTargetSizeRule\", // TODO\n        MIN_IMAGE_SIZE_RULE: \"minImageSizeRule\", // TODO\n        MAX_IMAGE_SIZE_RULE: \"maxImageSizeRule\" // TODO\n    })\n    // 定义valueTypes\n    .constant('valueTypes', {\n        TEXT: \"text\",\n        DECIMAL: \"decimal\",\n        INTEGER: \"integer\",\n        LONG: \"long\",\n        DATE: \"date\",\n        TIME: \"time\",\n        URL: \"url\",\n        TEXTAREA: \"textarea\",\n        HTML: \"html\"\n    })\n\n    .directive('schemaHeader', [\"$templateCache\", \"schemaHeaderFactory\", \"fieldTypes\", \"ruleTypes\", \"valueTypes\", function ($templateCache, schemaHeaderFactory, fieldTypes, ruleTypes, valueTypes) {\n\n        // 定义header\n        var templateKey_header = \"voyageone.angular.directives.schemaHeader.tpl.html\";\n        if (!$templateCache.get(templateKey_header)) {$templateCache.put(templateKey_header\n            , '<div class=\"form-group\">' +\n              '  <label class=\"col-sm-2 control-label\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" ng-bind=\"$$data.name\"></label>' +\n              '  <div class=\"col-sm-8\" ng-class=\"{\\'hierarchy_main modal-open\\' : showHtmlData.isMultiComplex, \\'hierarchy_main\\': showHtmlData.isComplex}\" ng-transclude></div>' +\n              '  <div class=\"col-sm-2\" ng-if=\"showHtmlData.isMultiComplex\"><button class=\"btn btn-success\" ng-click=\"addField($$data)\"><i class=\"fa fa-plus\"></i>{{\\'BTN_COM_ADD\\' | translate}}</button></div>' +\n              '  <div class=\"row\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><div class=\"col-sm-8 col-sm-offset-2 text-warnings\"><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div></div>' +\n              '</div>');}\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            transclude: true,\n            templateUrl: templateKey_header,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope) {\n                var schemaHeader = new schemaHeaderFactory();\n\n                _returnType (scope.$$data.type);\n                _operateRule (scope.$$data.rules);\n                scope.showHtmlData = angular.copy(schemaHeader.schemaHearInfo);\n\n                /**\n                 * 设置multi complex添加一条新记录\n                 * @param data\n                 */\n                scope.addField= function (data) {\n                    var newFieldMap = {};\n                    angular.forEach(data.fields, function (field) {\n                        eval(\"newFieldMap.\" + field.id + \"=field\");\n                    });\n\n                    scope.$$data.values.push({fieldMap: angular.copy(newFieldMap)});\n                };\n\n                /**\n                 * 返回需要展示的页面样式\n                 * @param type\n                 * @param valueTypeRule\n                 * @private\n                 */\n                function _returnType (type) {\n\n                    switch (type) {\n                        case fieldTypes.MULTI_COMPLEX:\n                            schemaHeader.isMultiComplex(true);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            schemaHeader.isComplex(true);\n                            break;\n                    }\n                }\n\n                /**\n                 * 处理rules\n                 * @param rules\n                 * @private\n                 */\n                function _operateRule (rules) {\n                    angular.forEach(rules, function (rule) {\n                        switch (rule.name) {\n                            case ruleTypes.REQUIRED_RULE:\n                                _requiredRule(rule);\n                                break;\n                            case ruleTypes.TIP_RULE:\n                                _tipRule(rule);\n                                break;\n                        }\n                    })\n\n                }\n\n                /**\n                 * 处理requiredRule\n                 * @param requiredRule\n                 * @private\n                 */\n                function _requiredRule (requiredRule) {\n                    if (\"true\" == requiredRule.value) {\n                        schemaHeader.isRequired(true);\n                    }\n                }\n\n                /**\n                * 处理tipRule\n                * @param tipRule\n                * @private\n                */\n                function _tipRule (tipRule) {\n                    schemaHeader.tipMsg(tipRule.value);\n                }\n            }\n        }\n    }])\n\n    .directive('schemaItem', [\"$templateCache\", \"$compile\", \"schemaFactory\", \"fieldTypes\", \"ruleTypes\", \"valueTypes\", function ($templateCache, $compile, schemaFactory, fieldTypes, ruleTypes, valueTypes) {\n\n        // label\n        var templateKey_label = \"voyageone.angular.directives.schemaLabel.tpl.html\";\n        if (!$templateCache.get(templateKey_label)) {$templateCache.put(templateKey_label,\n            '<input style=\"min-width: 150px; max-width: 250px;\" type=\"text\" readonly ng-model=\"$$data.value\" class=\"form-control inherited\">');}\n\n        // input\n        var templateKey_input = \"voyageone.angular.directives.schemaInput.tpl.html\";\n        if (!$templateCache.get(templateKey_input)) {$templateCache.put(templateKey_input,\n            '<input style=\"min-width: 150px; max-width: 250px;\" ng-model=\"$$data.value\" class=\"form-control inherited\" replaceInfo>');}\n\n        // data\n        var templateKey_date = \"voyageone.angular.directives.schemaDate.tpl.html\";\n        if (!$templateCache.get(templateKey_date)) {$templateCache.put(templateKey_date,\n            '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input replaceInfo type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDate}}\" ng-model=\"$parent.$$data.value\" date-model-format=\"{{formatDate}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>');}\n\n        // datetime\n        var templateKey_datetime = \"voyageone.angular.directives.schemaDatetime.tpl.html\";\n        if (!$templateCache.get(templateKey_datetime)) {$templateCache.put(templateKey_datetime,\n            '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input replaceInfo type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDateTime}}\" ng-model=\"$parent.$$data.value\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>');}\n\n        // textarea\n        var templateKey_textarea = \"voyageone.angular.directives.schemaTextarea.tpl.html\";\n        if (!$templateCache.get(templateKey_textarea)) {$templateCache.put(templateKey_textarea,\n            '<textarea style=\"min-width: 150px; max-width: 650px;\" class=\"form-control no-resize\" ng-model=\"$$data.value\" rows=\"{{showHtmlData.rowNum}}\" replaceInfo></textarea>');}\n\n        // single check-select\n        var templateKey_select = \"voyageone.angular.directives.schemaSelect.tpl.html\";\n        if (!$templateCache.get(templateKey_select)) {$templateCache.put(templateKey_select,\n            '<select style=\"min-width: 150px; max-width: 250px;\" replaceInfo class=\"form-control\" ng-model=\"$$data.value.value\" ng-options=\"option.value as option.displayName for option in $$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');}\n\n        // single check-radio\n        var templateKey_radio = \"voyageone.angular.directives.schemaRadio.tpl.html\";\n        if (!$templateCache.get(templateKey_radio)) {$templateCache.put(templateKey_radio,\n            '<label class=\"checkbox-inline c-radio\" ng-repeat=\"option in $$data.options\"><input name=\"{{$$data.id}}\" type=\"radio\" ng-value=\"option.value\" ng-model=\"$$data.value.value\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>');}\n\n        // multi check-checkbox\n        var templateKey_checkbox = \"voyageone.angular.directives.schemaCheckbox.tpl.html\";\n        if (!$templateCache.get(templateKey_checkbox)) {$templateCache.put(templateKey_checkbox,\n            '<label class=\"checkbox-inline c-checkbox\" ng-repeat=\"option in $$data.options\"><input type=\"checkbox\" ng-value=\"option.value\" ng-click=\"checkboxValue()\" ng-model=\"showHtmlData.checkValues[option.value]\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>');}\n\n        // multi complex\n        var templateKey_multiComplex = \"voyageone.angular.directives.schemaMultiComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_multiComplex)) {$templateCache.put(templateKey_multiComplex,\n            '<table class=\"table text-center\">' +\n            '<thead><tr>' +\n            //'<schema-header ng-repeat=\"field in $$data.fields\" data=\"field\" is-complex=\"true\"></schema-header>' +\n            '<th ng-repeat=\"field in $$data.fields\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" class=\"text-center\" style=\"min-width: 180px;\">{{field.name}}</th>' +\n            '<th style=\"min-width: 60px;\" class=\"text-center\" translate=\"TXT_COM_EDIT\"></th>' +\n            '</tr></thead>' +\n            '<tbody><tr ng-repeat=\"value in $$data.values\">' +\n            '<td class=\"text-left\" ng-repeat=\"field in value.fieldMap\"><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></td>' +\n            '<td style=\"min-width: 60px;\"><button title=\"{\\'BTN_COM_DELETE\\' | translate}\" class=\"btn btn-danger btn-xs\" ng-click=\"delField($index)\"><i class=\"fa  fa-trash-o\"></i></button></td>' +\n            '</tr></tbody>' +\n            '</table>');}\n\n        // complex\n        var templateKey_complex = \"voyageone.angular.directives.schemaComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_complex)) {$templateCache.put(templateKey_complex,\n            '<schema-header ng-repeat=\"field in $$data.fields\" data=\"field\"><schema-item data=\"field\"></schema-item></schema-header>');}\n\n        // multi complex tip\n        var templateKey_multiComplex_tip = \"voyageone.angular.directives.schemaMultiComplexTip.tpl.html\";\n        if (!$templateCache.get(templateKey_multiComplex_tip)) {$templateCache.put(templateKey_multiComplex_tip,\n            '<div class=\"text-warnings\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><br><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div>');}\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                $$data: \"=data\",\n                $$hastip: \"=hastip\",\n                $$complex: \"=complex\"\n            },\n            link: function (scope, element) {\n\n                var schema = new schemaFactory();\n\n                _returnType (scope.$$data.type);\n                _operateRule (scope.$$data.rules);\n\n                var tempHtml = \"\";\n                // 拼接body\n                switch (schema.type()) {\n                    case fieldTypes.INPUT:\n                        tempHtml = $templateCache.get(templateKey_input).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.DATE:\n                        tempHtml = $templateCache.get(templateKey_date).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.DATETIME:\n                        tempHtml = $templateCache.get(templateKey_datetime).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.TEXTAREA:\n                        tempHtml = $templateCache.get(templateKey_textarea).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.SINGLE_CHECK:\n                        tempHtml = $templateCache.get(templateKey_select).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.RADIO:\n                        tempHtml = $templateCache.get(templateKey_radio).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.MULTI_CHECK:\n                        tempHtml = $templateCache.get(templateKey_checkbox).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.LABEL:\n                        tempHtml = $templateCache.get(templateKey_label);\n                        break;\n                    case fieldTypes.MULTI_COMPLEX:\n                        tempHtml = $templateCache.get(templateKey_multiComplex);\n                        break;\n                    case fieldTypes.COMPLEX:\n                        tempHtml = $templateCache.get(templateKey_complex);\n                        break;\n                }\n\n                // 添加规则说明\n                if (schema.tipMsg() != null && scope.$$hastip) {\n                    tempHtml += $templateCache.get(templateKey_multiComplex_tip);\n                }\n                scope.showHtmlData = angular.copy(schema.schemaInfo());\n                element.html($compile(tempHtml)(scope));\n\n                /**\n                * 设置checkbox被选中的value值处理\n                * @param value\n                */\n                scope.checkboxValue = function () {\n                    scope.$$data.values = [];\n                    angular.forEach(_returnKey(scope.showHtmlData.checkValues), function (obj) {\n                        scope.$$data.values.push({id: null, value: obj});\n                    })\n                };\n\n                /**\n                * 设置multi complex删除该条记录\n                * @param index\n                */\n                scope.delField = function (index) {\n                    scope.$$data.values.splice(index, 1);\n                };\n\n                /**\n                * 返回需要展示的页面样式\n                * @param type\n                * @param valueTypeRule\n                * @private\n                */\n                function _returnType (type) {\n                    schema.type(type);\n                    switch (type) {\n                        case fieldTypes.RADIO:\n                            if (scope.$$complex)\n                                schema.type(fieldTypes.SINGLE_CHECK);\n                            break;\n                        case fieldTypes.MULTI_CHECK:\n                            _setCheckValues(scope.$$data.values);\n                            break;\n                        case fieldTypes.MULTI_COMPLEX:\n                            scope.$$data.values = _resetMultiComplex(scope.$$data);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            scope.$$data.values = _resetComplex(scope.$$data);\n                            break;\n                    }\n                }\n\n                /**\n                * 设置checkvalues\n                * @param values\n                * @private\n                */\n                function _setCheckValues (values) {\n                    if (values != undefined && values != null) {\n                        angular.forEach(values, function (obj) {\n                            schema.checkValues(obj.value, true);\n                        })\n                    }\n                }\n\n                /**\n                * 重新设置multicomplex的一些属性\n                * @param fields\n                * @private\n                */\n                function _resetMultiComplex (data) {\n                    var tempValues = [];\n                    angular.forEach(data.values, function (value) {\n                        var tempFieldMap = {};\n                        angular.forEach(data.fields, function (field) {\n                            if (value.fieldMap[field.id] != undefined)\n                                tempFieldMap[field.id] = value.fieldMap[field.id];\n                            else\n                                tempFieldMap[field.id] = field;\n                        });\n                        tempValues.push({fieldMap: angular.copy(tempFieldMap)});\n                    });\n\n                    return tempValues;\n                }\n\n                /**\n                 * 重新\n                 * @param data\n                 * @private\n                 */\n                function _resetComplex (data) {\n                    //var tempValues = {};\n                    //angular.forEach(data.fields, function (value) {\n                    //    if (value.type === fieldTypes.COMPLEX) {\n                    //        tempValues[]\n                    //    } else if (value.type === fieldTypes.MULTI_COMPLEX) {\n                    //        tempValues[value.id] =\n                    //    }\n                    //})\n                }\n\n                /**\n                * 处理rules\n                * @param rules\n                * @private\n                */\n                function _operateRule (rules) {\n                    angular.forEach(rules, function (rule) {\n                        switch (rule.name) {\n                            case ruleTypes.VALUE_TYPE_RULE:\n                                _valueTypeRule(rule);\n                                break;\n                            case ruleTypes.REQUIRED_RULE:\n                                _requiredRule(rule);\n                                break;\n                            case ruleTypes.DISABLE_RULE:\n                                _disableRule(rule);\n                                break;\n                            case ruleTypes.READ_ONLY_RULE:\n                                _readOnlyRule(rule);\n                                break;\n                            case ruleTypes.REGEX_RULE:\n                                _regexRule(rule);\n                                break;\n                            case ruleTypes.TIP_RULE:\n                                _tipRule(rule);\n                                break;\n                            case ruleTypes.MIN_LENGTH_RULE:\n                                _minLengthRule(rule);\n                                break;\n                            case ruleTypes.MAX_LENGTH_RULE:\n                                _maxLengthRule(rule);\n                                break;\n                            case ruleTypes.MIN_VALUE_RULE:\n                                _minValueRule(rule);\n                                break;\n                            case ruleTypes.MAX_VALUE_RULE:\n                                _maxValueRule(rule);\n                                break;\n                            case ruleTypes.MIN_INPUT_NUM_RULE:\n                                _minInputNumRule(rule);\n                                break;\n                            case ruleTypes.MAX_INPUT_NUM_RULE:\n                                _maxInputNumRule(rule);\n                                break;\n                        }\n                    })\n                }\n\n                /**\n                 * 处理valueTypeRule\n                 * @param valueTypeRule\n                 * @private\n                 */\n                function _valueTypeRule (valueTypeRule) {\n                    switch (valueTypeRule.value) {\n                        case valueTypes.TEXT:\n                        case valueTypes.DECIMAL:\n                        case valueTypes.INTEGER:\n                        case valueTypes.LONG:\n                            schema.type(fieldTypes.INPUT);\n                            schema.html(\"type=\\\"text\\\"\");\n                            break;\n                        case valueTypes.DATE:\n                            schema.type(fieldTypes.DATE);\n                            break;\n                        case valueTypes.TIME:\n                            schema.type(fieldTypes.DATETIME);\n                            break;\n                        case valueTypes.URL:\n                            schema.type(fieldTypes.INPUT);\n                            schema.html(\"type=\\\"url\\\"\");\n                            break;\n                        case valueTypes.TEXTAREA:\n                            schema.type(fieldTypes.TEXTAREA);\n                            schema.rowNum(4);\n                            break;\n                        case valueTypes.HTML:\n                            schema.type(fieldTypes.TEXTAREA);\n                            schema.rowNum(10);\n                            break;\n                    }\n                }\n\n                /**\n                 * 处理requiredRule\n                 * @param requiredRule\n                 * @private\n                 */\n                function _requiredRule (requiredRule) {\n                    if (\"true\" == requiredRule.value) {\n                        schema.isRequired(true);\n                        schema.html(\"required\");\n                    }\n                }\n\n                /**\n                 * 处理disableRule\n                 * @param disableRule\n                 * @private\n                 */\n                function _disableRule (disableRule) {\n                    if (\"true\" == disableRule.value) {\n                        schema.html(\"ng-disabled=\\\"true\\\"\");\n                    }\n                }\n\n                /**\n                 * 处理readOnlyRule\n                 * @param readOnlyRule\n                 * @private\n                 */\n                function _readOnlyRule (readOnlyRule) {\n                    if (\"true\" == readOnlyRule.value) {\n                        schema.html(\"readonly\");\n                    }\n                }\n\n                /**\n                 * 处理regexRule\n                 * @param regexRule\n                 * @private\n                 */\n                function _regexRule (regexRule) {\n                    schema.html(\"ng-pattern=\\\"/\" + regexRule.value +\"/\\\"\");\n                }\n\n                /**\n                 * 处理tipRule\n                 * @param tipRule\n                 * @private\n                 */\n                function _tipRule (tipRule) {\n                    schema.tipMsg(tipRule.value);\n                }\n\n                /**\n                 * 处理minLengthRule\n                 * @param minLengthRule\n                 * @private\n                 */\n                function _minLengthRule (minLengthRule) {\n                    var value = isNaN(parseInt(minLengthRule.value)) ? 0 : minLengthRule.value;\n\n                    if (\"not include\" === minLengthRule.exProperty)\n                        value = (value > 0) ? value -1 : 0;\n\n                    if (\"character\" == minLengthRule.unit)\n                        schema.html(\"ng-minlength=\\\"\" + value +\"\\\"\");\n                    else\n                        schema.html(\"ng-char-minlength=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 处理maxLengthRule\n                 * @param maxLengthRule\n                 * @private\n                 */\n                function _maxLengthRule (maxLengthRule) {\n                    var value = isNaN(parseInt(maxLengthRule.value)) ? 0 : maxLengthRule.value;\n\n                    if (\"not include\" === maxLengthRule.exProperty)\n                        value = (value > 0) ? value -1 : 0;\n\n                    if (\"character\" == maxLengthRule.unit)\n                        schema.html(\"ng-maxlength=\\\"\" + value +\"\\\"\");\n                    else\n                        schema.html(\"ng-char-maxlength=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 处理minValueRule\n                 * @param minValueRule\n                 * @private\n                 */\n                function _minValueRule (minValueRule) {\n                    var value = isNaN(parseFloat(minValueRule.value)) || 0;\n\n                    if (\"not include\" === minValueRule.exProperty)\n                        value = (value > 0) ? value - 0.01 : 0;\n\n                    schema.html(\"ng-minvalue=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 处理maxValueRule\n                 * @param maxValueRule\n                 * @private\n                 */\n                function _maxValueRule (maxValueRule) {\n                    var value = isNaN(parseFloat(maxValueRule.value)) || 0;\n\n                    if (\"not include\" === maxValueRule.exProperty)\n                        value = (value > 0) ? value - 0.01 : 0;\n\n                    schema.html(\"ng-maxvalue=\\\"\" + value +\"\\\"\");\n\n                }\n\n                /**\n                 * 处理minInputNumRule\n                 * @param minInputNumRule\n                 * @private\n                 */\n                function _minInputNumRule (minInputNumRule) {\n                    var value = isNaN(parseInt(minInputNumRule.value)) || 0;\n\n                    if (\"not include\" === minInputNumRule.exProperty)\n                        value = (value > 0) ? value - 1 : 0;\n\n                    schema.html(\"ng-mininputnum=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 处理maxInputNumRule\n                 * @param maxInputNumRule\n                 * @private\n                 */\n                function _maxInputNumRule (maxInputNumRule) {\n                    var value = isNaN(parseInt(maxInputNumRule.value)) || 0;\n\n                    if (\"not include\" === maxInputNumRule.exProperty)\n                        value = (value > 0) ? value - 1 : 0;\n\n                    schema.html(\"ng-maxinputnum=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 如果checkbox被选中,返回被选中的value.\n                 * eg.[{new: true, pending: false, approved: true}] -> [new, approved]\n                 * @param object\n                 * @returns {*}\n                 */\n                function _returnKey(object) {\n                    var result = [];\n                    angular.forEach(object, function(value, index) {\n                        if (value) result.push(index);\n                    });\n                    return result;\n                }\n            }\n        }\n    }]);\n\n/**\n * @Description:\n * 用于动态显示options\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-22\n */\n\nangular.module('voyageone.angular.directives.voption', [])\n    .directive('voption', [\"$templateCache\", \"$compile\", function ($templateCache, $compile) {\n\n        var templateKey_select = \"voyageone.angular.directives.optionSelect.tpl.html\";\n\n        // 显示成select样式\n        if (!$templateCache.get(templateKey_select)) {\n            $templateCache.put(templateKey_select,\n                '<select class=\"form-control\" ng-model=\"$$data.value.value\" ng-options=\"option.value as option.displayName for option in $$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');\n        }\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope, element) {\n\n                // 定义不同的展示种类\n                var typeList = {\n                    SINGLE_CHECK: \"SINGLECHECK\"\n                };\n\n                // 监视配置变动\n                scope.$watch('$$data', function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 根据type选择展示不同的控件\n                 */\n                function refresh() {\n                    var tempHtml;\n                    switch (scope.$$data.type) {\n                        case typeList.SINGLE_CHECK:\n                            tempHtml = $compile($templateCache.get(templateKey_select))(scope);\n                            break;\n                    }\n                    element.html(tempHtml);\n                }\n            }\n        };\n    }]);\n/**\n * @Description:\n * 用于分页\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-08\n */\n\nangular.module('voyageone.angular.directives.vpagination', [])\n    .directive('vpagination', [\"$templateCache\", \"$compile\", \"vpagination\", function ($templateCache, $compile, vpagination) {\n\n        var templateKey = \"voyageone.angular.directives.pagination.tpl.html\";\n        var templateKeyNoData = \"voyageone.angular.directives.paginationNoData.tpl.html\";\n\n        // 有数据分页样式\n        if (!$templateCache.get(templateKey)) {\n            $templateCache.put(templateKey,\n                '<div class=\"col-sm-2\">\\n' +\n                '    <div class=\"page-main form-inline\">{{\\'TXT_COM_SHOWING_NO\\' | translate}}&nbsp;<input class=\"text-center\" type=\"text\" ng-model=\"curr.pageNo\"/>&nbsp;/&nbsp;{{totalPages}}&nbsp;{{\\'TXT_COM_PAGE\\' | translate}}&nbsp;' +\n                '        <button class=\"btn btn-xs btn-default\" type=\"button\" ng-click=\"goPage(curr.pageNo)\" translate=\"BTN_GO\"></button>\\n' +\n                '    </div>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-7 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_COM_SHOWING\\' | translate}}&nbsp;{{curr.start}}-{{curr.end}}&nbsp;{{\\'TXT_COM_OF\\' | translate}}&nbsp;{{totalItems}}&nbsp{{\\'TXT_COM_ITEMS\\' | translate}}</small>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-3 text-right text-center-xs\"><div>' +\n                '    <ul class=\"pagination-sm m-t-none m-b pagination ng-isolate-scope ng-valid ng-dirty ng-valid-parse\">\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-first\"><a href ng-click=\"goPage(1)\" ng-disabled=\"curr.isFirst\">&laquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-prev\"><a href ng-click=\"goPage(curr.pageNo - 1)\" ng-disabled=\"curr.isFirst\">&lsaquo;</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowStart\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-repeat=\"page in curr.pages track by $index\" ng-class=\"{active: isCurr(page)}\" class=\"pagination-page\"><a href ng-click=\"goPage(page)\">{{page}}</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowEnd\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-next\"><a href ng-click=\"goPage(curr.pageNo + 1)\" ng-disabled=\"curr.isLast\">&rsaquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-last\"><a href ng-click=\"goPage(totalPages)\" ng-disabled=\"curr.isLast\">&raquo;</a></li>\\n' +\n                '    </ul>\\n' +\n                '</div>');\n        }\n\n        // 无数据分页样式\n        if (!$templateCache.get(templateKeyNoData)) {\n            $templateCache.put(templateKeyNoData,\n                '<div class=\"col-sm-7 col-sm-offset-2 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_COM_SHOWING\\' | translate}}&nbsp;0-0&nbsp;{{\\'TXT_COM_OF\\' | translate}}&nbsp;0&nbsp{{\\'TXT_COM_ITEMS\\' | translate}}</small>\\n' +\n                '</div>');\n        }\n\n        var defConfig = {curr: 1, total: 0, size: 20, showPageNo:5};\n\n        return {\n            restrict: \"AE\",\n            //templateUrl: templateKey,\n            replace: false,\n            scope: {\n                $$configNameForA: \"@vpagination\",\n                $$configNameForE: \"@config\"\n            },\n            link: function (scope, element) {\n\n                // 获取用户的config配置\n                var userConfigName = scope.$$configNameForA || scope.$$configNameForE;\n                var userConfig = scope.$parent.$eval(userConfigName);\n\n                // 将用户配置覆盖到默认配置后，在重新覆盖到用户配置上，用于补全配置属性\n                var userWithDefConfig = angular.extend({}, defConfig, userConfig);\n                scope.config = angular.extend(userConfig, userWithDefConfig);\n\n                var p = new vpagination(scope.config);\n\n                // 监视配置变动\n                scope.$parent.$watch(userConfigName, function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 跳转到指定页\n                 * @param num\n                 */\n                scope.goPage = function (num) {\n                    p.goPage(isNaN(Number(num)) ? 1 : Number(num));\n                };\n\n                /**\n                 * 判断是否是当前页\n                 * @param num\n                 * @returns {*|boolean}\n                 */\n                scope.isCurr = function (num) {\n                    return p.isCurr(num);\n                };\n\n                function refresh() {\n\n                    // 获取总页数\n                    scope.totalPages = p.getPageCount();\n                    // 获取总items数\n                    scope.totalItems = p.getTotal();\n                    // 获取当前页的信息\n                    scope.curr = p.getCurr();\n\n                    // 根据总数量显示不同的分页样式\n                    var tempHtml;\n                    if(p.getTotal() == 0) {\n                        tempHtml = $compile($templateCache.get(templateKeyNoData))(scope);\n                    } else {\n                        tempHtml = $compile($templateCache.get(templateKey))(scope);\n                    }\n                    element.html(tempHtml);\n\n                }\n            }\n        };\n    }]);\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\nangular.module('voyageone.angular.directives.validator', [])\n\n    // 定义ng-char-maxlength\n    .directive('ngCharMaxlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxlength = -1;\n                attr.$observe('ngCharMaxlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    maxlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxlength = function(modelValue, viewValue) {\n                    return (maxlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) <= maxlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-char-minlength\n    .directive('ngCharMinlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minlength = -1;\n                attr.$observe('ngCharMinlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    minlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minlength = function(modelValue, viewValue) {\n                    return (maxlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) >= minlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-maxvalue\n    .directive('ngMaxvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        maxvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        maxvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        maxvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxvalue = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-minvalue\n    .directive('ngMinvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMinvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        minvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        minvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        minvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minvalue = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue >= minvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-maxinputnum\n    .directive('ngMaxinputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxinputvalue', function(value) {\n                    maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxinputnum = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-mininputnum\n    .directive('ngMininputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMininputnum', function(value) {\n                    minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.mininputnum = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length >= minvalue);\n                };\n            }\n        }\n    })\n;\n/**\n * @Description:\n * 弹出日期控件\n * @User:    Edward\n * @Version: 0.2.0, 2015-10-10\n */\n\nangular.module('voyageone.angular.controllers.datePicker', [])\n    .controller('datePickerCtrl', [\"$scope\", function ($scope) {\n        var vm = this;\n\n        vm.formats = ['yyyy-MM-dd', 'yyyy-MM-dd HH:mm:ss'];\n\n        $scope.formatDate = vm.formats[0];\n        $scope.formatDateTime = vm.formats[1];\n\n        $scope.open = open;\n\n        function open($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n\n            $scope.opened = true;\n        }\n    }]);\n/**\n * @Description:\n * select tables items\n * @User: linanbin\n * @Version: 2.0.0, 15/12/16\n */\n\nangular.module('voyageone.angular.controllers.selectRows', [])\n    .controller('selectRowsCtrl', [\"$scope\", function ($scope) {\n\n        $scope.selectAll = selectAll;\n        $scope.selectOne = selectOne;\n\n        /**\n         * 全部选中当前页数据\n         * @param objectList\n         */\n        function selectAll(objectList) {\n\n            objectList.selAllFlag = !objectList.selAllFlag;\n\n            // 循环处理全选中的数据\n            angular.forEach(objectList.currPageRows, function (object) {\n                if(objectList.selFlag.hasOwnProperty(object.id)) {\n\n                    // 单签页面所有产品选中flag被标示\n                    objectList.selFlag[object.id] = objectList.selAllFlag;\n\n                    if (objectList.hasOwnProperty('selList')) {\n                        if (objectList.selAllFlag && objectList.selList.indexOf(object) < 0) {\n                            objectList.selList.push(object);\n                        } else if (!objectList.selAllFlag && objectList.selList.indexOf(object) > -1) {\n                            objectList.selList.splice(objectList.selList.indexOf(object), 1);\n                        }\n                    }\n                }\n            });\n        }\n\n        /**\n         * 选中单条数据\n         * @param currentId\n         * @param objectList\n         */\n        function selectOne(currentId, objectList) {\n            currentId = parseInt(currentId);\n            if (objectList.hasOwnProperty('selList')) {\n\n                angular.forEach(objectList.selList, function(object) {\n\n                    if (_.isEqual(object.id, currentId)) {\n                        if (objectList.selList.indexOf(object) > -1) {\n                            objectList.selList.splice(objectList.selList.indexOf(object), 1);\n                        } else {\n                            objectList.selList.push(object);\n                        }\n                    }\n                });\n            }\n\n            objectList.selAllFlag = true;\n            angular.forEach(objectList.currPageRows, function(object) {\n                if (!objectList.selFlag[object.id]) {\n                    objectList.selAllFlag = false;\n                }\n            })\n        }\n    }]);\n/**\n * @Description:\n * 显示html的popover的共同方法\n * @User: linanbin\n * @Version: 2.0.0, 15/12/14\n */\n\nangular.module('voyageone.angular.controllers.showPopover', [])\n    .controller('showPopoverCtrl', [\"$scope\", function ($scope) {\n\n        $scope.showInfo = showInfo;\n\n        function showInfo(values) {\n            var tempHtml = \"\";\n\n            angular.forEach(values, function (data, index) {\n                tempHtml += data;\n                if (index !== values.length) {\n                    tempHtml += \"<br>\";\n                }\n            });\n            return tempHtml\n        }\n    }]);\n\n/**\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.dialogs', [])\n  .factory(\"$dialogs\", [\"$modal\", \"$filter\", \"$templateCache\", function ($modal, $filter, $templateCache) {\n\n    var templateName = 'voyageone.angular.factories.dialogs.tpl.html';\n    $templateCache.put(templateName, '<div class=\"vo_modal\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" ng-click=\"close()\"><span aria-hidden=\"true\"><i ng-click=\"close()\" class=\"fa fa-close\"></i></span></button><h4 class=\"modal-title\" ng-bind-html=\"title\"></h4></div><div class=\"modal-body wrapper-lg\"><div class=\"row\"><p ng-bind-html=\"content\"></p></div></div><div class=\"modal-footer\"><button class=\"btn btn-default btn-sm\" ng-if=\"!isAlert\" ng-click=\"close()\" translate=\"BTN_COM_CANCEL\"></button><button class=\"btn btn-vo btn-sm\" ng-click=\"ok()\" translate=\"BTN_COM_OK\"></button></div></div>');\n\n    function tran(translationId, values) {\n      return $filter('translate')(translationId, values);\n    }\n\n    return function (options) {\n\n      if (!_.isObject(options)) throw \"arg type must be object\";\n\n      var values;\n\n      if (_.isObject(options.content)) {\n        values = options.content.values;\n        options.content = options.content.id;\n      }\n\n      options.title = tran(options.title);\n      options.content = tran(options.content, values);\n\n      var modalInstance = $modal.open({\n        templateUrl: templateName,\n        controller: [\"$scope\", function (scope) {\n          _.extend(scope, options);\n        }],\n        size: 'md'\n      });\n\n      options.close = function () {\n        modalInstance.dismiss('close')\n      };\n\n      options.ok = function () {\n        modalInstance.close('');\n      };\n\n      return modalInstance;\n    };\n  }])\n\n  .factory(\"alert\", [\"$dialogs\", function ($dialogs) {\n    return function (content, title) {\n      return $dialogs({\n        title: title || 'TXT_COM_ALERT',\n        content: content,\n        isAlert: true\n      });\n    };\n  }])\n\n  .factory(\"confirm\", [\"$dialogs\", function vConfirm($dialogs) {\n    return function (content, title) {\n      return $dialogs({\n        title: title || 'TXT_COM_CONFIRM',\n        content: content,\n        isAlert: false\n      });\n    };\n  }]);\n/**\n * @Date:    2015-11-16 20:51:05\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.factories.interceptor', [])\n  .factory('interceptorFactory', InterceptorFactory)\n  .config([\"$httpProvider\", function ($httpProvider) {\n    $httpProvider.interceptors.push('interceptorFactory');\n  }]);\n\nfunction InterceptorFactory() {\n\n  // 未知的系统错误\n  var UNKNOWN_CODE = \"5\";\n  // 和 JAVA 同步,系统通知前端自动跳转的特殊代码\n  var CODE_SYS_REDIRECT = \"SYS_REDIRECT\";\n  // 和 JAVA 同步,回话过期的信息\n  var MSG_TIMEOUT = \"300001\";\n\n  /**\n   * 对系统自动跳转的响应,执行跳转\n   * @param {{code:string,redirectTo:string}} res\n   * @returns {boolean}\n   */\n  function autoRedirect(res) {\n    if (res.code != CODE_SYS_REDIRECT) {\n      return false;\n    }\n    // 如果跳转数据异常,则默认跳转登陆页\n    location.href = res.redirectTo || '/login.html';\n    return true;\n  }\n\n  /**\n   * 对会话超时和未登录进行特殊处理\n   * @param {{code:string}} res\n   * @returns {boolean}\n   */\n  function sessionTimeout(res) {\n    if (res.code != MSG_TIMEOUT) {\n      return false;\n    }\n    // 会话超时,默认跳转到登陆页\n    location.href = '/login.html';\n    return true;\n  }\n\n  /**\n   * 处理位置的异常\n   * @param response\n   */\n  function unknownException(response) {\n\n    if (response.data.code !== UNKNOWN_CODE) {\n      return;\n    }\n\n    window.$$lastUnknow = response;\n    console.error('Server throw unknown exceptio. Message:', response.data.message);\n  }\n\n  return {\n    request: function (config) {\n      return config;\n    },\n    response: function (res) {\n      var result = res.data;\n\n      if (autoRedirect(result) || sessionTimeout(result)) {\n        return res;\n      }\n\n      unknownException(res);\n\n      return res;\n    },\n    requestError: function (config) {\n      return config;\n    },\n    responseError: function (res) {\n    }\n  };\n}\n/**\n * Notify 的可用参数\n * {\n *    // whether to hide the notification on click\n *    clickToHide: true,\n *    // whether to auto-hide the notification\n *    autoHide: true,\n *    // if autoHide, hide after milliseconds\n *    autoHideDelay: 5000,\n *    // show the arrow pointing at the element\n *    arrowShow: true,\n *    // arrow size in pixels\n *    arrowSize: 5,\n *    // position defines the notification position though uses the defaults below\n *    position: '...',\n *    // default positions\n *    elementPosition: 'bottom left',\n *    globalPosition: 'top right',\n *    // default style\n *    style: 'bootstrap',\n *    // default class (string or [string])\n *    className: 'error',\n *    // show animation\n *    showAnimation: 'slideDown',\n *    // show animation duration\n *    showDuration: 400,\n *    // hide animation\n *    hideAnimation: 'slideUp',\n *    // hide animation duration\n *    hideDuration: 200,\n *    // padding between element and notification\n *    gap: 2\n * }\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.notify', [])\n  .factory('notify', [\"$filter\", function ($filter) {\n    function notify(options) {\n\n      if (!options) return;\n      if (_.isString(options)) options = {message: options};\n      if (!_.isObject(options)) return;\n\n      var values;\n\n      // 为 translate 的格式化提供支持，检测类型并转换\n      if (_.isObject(options.message)) {\n\n        values = options.message.values;\n        options.message = options.message.id;\n      }\n\n      options.message = $filter('translate')(options.message, values);\n\n      return $.notify(options.message, options);\n    }\n\n    notify.success = function (message) {\n      return notify({message: message, className: \"success\"});\n    };\n\n    notify.warning = function (message) {\n      return notify({message: message, className: \"warning\"});\n    };\n\n    notify.danger = function (message) {\n      return notify({message: message, className: \"danger\"});\n    };\n\n    return notify;\n  }]);\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\n\nangular.module('voyageone.angular.factories.schema', [])\n\n    // 定义schemaHeaderFactory\n    .factory('schemaHeaderFactory', function () {\n        return function (config) {\n            var _schemaHeaderInfo = config ? config : {\n                isRequired: false,\n                //size: null,\n                isMultiComplex: false,\n                isComplex: false,\n                tipMsg: []\n            };\n\n            this.isRequired = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isRequired = value : _schemaHeaderInfo.isRequired;\n            };\n\n            //this.size = function (value) {\n            //    return value !== undefined ? _schemaHeaderInfo.size = value : _schemaHeaderInfo.size;\n            //};\n\n            this.isComplex = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isComplex = value : _schemaHeaderInfo.isComplex;\n            };\n\n            this.isMultiComplex = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isMultiComplex = value : _schemaHeaderInfo.isMultiComplex;\n            };\n\n            this.tipMsg = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.tipMsg.push(value) : _schemaHeaderInfo.tipMsg;\n            };\n\n            this.schemaHearInfo = _schemaHeaderInfo;\n        }\n    })\n\n    // 定义schemaFactory\n    .factory('schemaFactory', function () {\n\n        return function (config) {\n\n            var _schemaInfo = config ? config : {\n                type: null,\n                //size: null,\n                rowNum: null,\n                isRequired: false,\n                checkValues: [],\n                tipMsg: [],\n                html: []\n            };\n\n            this.type = function (value) {\n                return value !== undefined ? _schemaInfo.type = value : _schemaInfo.type;\n            };\n\n            //this.size = function (value) {\n            //    return value !== undefined ? _schemaInfo.size = value : _schemaInfo.size;\n            //};\n\n            this.html = function (value) {\n                return value !== undefined ? _schemaInfo.html.push(value) : htmlToString(_schemaInfo.html);\n            };\n\n            this.isRequired = function (value) {\n                return value !== undefined ? _schemaInfo.isRequired = value : _schemaInfo.isRequired;\n            };\n\n            this.rowNum = function (value) {\n                return value !== undefined ? _schemaInfo.rowNum = value : _schemaInfo.rowNum;\n            };\n\n            this.tipMsg = function (value) {\n                return value !== undefined ? _schemaInfo.tipMsg.push(value) : _schemaInfo.tipMsg;\n            };\n\n            this.checkValues = function (index, value) {\n                return value !== undefined ? _schemaInfo.checkValues[index] = value : _schemaInfo.checkValues;\n            };\n\n            this.schemaInfo = function () {\n                return _schemaInfo;\n            };\n\n            function htmlToString (htmls) {\n                var result = \"\";\n                angular.forEach(htmls, function (html) {\n                    result += \" \" + html + \" \";\n                });\n                return result;\n            }\n        };\n    });\n/**\n * @User: Edward\n * @Version: 2.0.0, 2015-12-09\n */\n\nangular.module('voyageone.angular.factories.vpagination', [])\n    .factory('vpagination', function () {\n\n        /**\n         * 创建一个分页服务\n         * @param {{ curr: number, size: number, total: number, fetch: function }} config 配置\n         */\n        return function (config) {\n\n            var _pages, _lastTotal = 0, _showPages = [];\n\n            /**\n             * 返回总件数\n             * @returns {*}\n             */\n            this.getTotal = function () {\n                return config.total;\n            };\n\n            /**\n             * 返回当前页的开始和结束号\n             * @returns {{start: number, end: number}}\n             */\n            this.getCurr = function () {\n                return {\n                    pageNo: curr(),\n                    start: getCurrStartItems(),\n                    end: getCurrEndItems(),\n                    isFirst: isFirst(),\n                    isLast: isLast(),\n                    pages: createShowPages(),\n                    isShowStart: isShowStart(),\n                    isShowEnd: isShowEnd()\n                }\n            };\n\n            // 跳转到指定页\n            this.goPage = load;\n            // 返回总页数\n            this.getPageCount = getPages;\n            // 是否是当前页\n            this.isCurr = isCurr;\n\n            /**\n             * 跳转到指定页\n             * @param {number} page 页号\n             */\n            function load(page) {\n                page = page || config.curr;\n\n                if (page < 1 || page > getPages() || isCurr(page)) return;\n\n                config.curr = page;\n\n                config.fetch(page, config.size);\n            }\n\n            /**\n             * 初始化page列表\n             * @returns {Array}\n             */\n            function createShowPages () {\n\n                var minPage, maxPage, _showPages= [];\n                if (config.curr < config.showPageNo) {\n                    minPage = 1;\n                    if(_pages <= config.showPageNo) maxPage = _pages;\n                    else maxPage = config.showPageNo;\n                } else if (config.curr + 2 > _pages) {\n                    minPage = _pages + 1 - config.showPageNo;\n                    maxPage = _pages;\n                } else {\n                    minPage = config.curr + 3 - config.showPageNo;\n                    maxPage = config.curr + 2;\n                }\n\n                // 按照指定数量创建按钮\n                for (var i =  minPage; i <= maxPage; i++) {\n                    //scope.pages.push({num: 1, active: \"\", show: false});\n                    _showPages.push(i);\n                }\n\n                return _showPages;\n            }\n\n            /**\n             * 获取当前总页数\n             * @returns {number}\n             */\n            function getPages() {\n                if (_lastTotal != config.total) {\n                    _pages = parseInt(config.total / config.size) + ((config.total % config.size) > 0 ? 1 : 0);\n                    _lastTotal = config.total;\n                }\n                return _pages;\n            }\n\n            /**\n             * 返回当前页的起始号\n             * @returns {number}\n             */\n            function getCurrStartItems() {\n                return (config.curr - 1) * config.size + 1\n            }\n\n            /**\n             * 返回当前页的结束号\n             * @returns {number}\n             */\n            function getCurrEndItems() {\n                var currEndItems = config.curr * config.size;\n                return currEndItems <= config.total ? currEndItems : config.total;\n\n            }\n\n            /**\n             * 是否是最后一页\n             * @returns {boolean}\n             */\n            function isLast() {\n                return config.curr == getPages();\n            }\n\n            /**\n             * 是否是第一页\n             * @returns {boolean}\n             */\n            function isFirst() {\n                return config.curr == 1;\n            }\n\n            /**\n             * 是否是当前页\n             * @param page 页码\n             * @returns {boolean}\n             */\n            function isCurr(page) {\n                return config.curr == page;\n            }\n\n            function curr() {\n                return config.curr;\n            }\n\n            /**\n             * 是否显示开始...项目\n             * @returns {boolean}\n             */\n            function isShowStart () {\n                _showPages = createShowPages();\n                return _showPages[0] > 1\n            }\n\n            /**\n             * 是否显示结束...项目\n             * @returns {boolean}\n             */\n            function isShowEnd () {\n                _showPages = createShowPages();\n                return _showPages[_showPages.length - 1] < _pages;\n            }\n\n        };\n    });\n/**\n * @description\n *\n * 自动创建基于地址定义的数据访问 service.\n * 传入的定义必须是 {object}, 并且至少有 root 属性\n *\n * @User: Jonas\n * @Date: 2015-12-10 19:32:37\n * @Version: 2.0.0\n */\n\n//@Skip\nangular.module('voyageone.angular.vresources', [])\n  .provider('$vresources', [\"$provide\", function ($provide) {\n\n    /**\n     * @description 构建请求地址的 url\n     * @param {string} root 请求的根路径\n     * @param {string} action 请求的名称\n     * @returns {string}\n     */\n    function getActionUrl(root, action) {\n      return root + (root.lastIndexOf('/') === root.length - 1 ? '' : '/') + action;\n    }\n\n    /**\n     * 闭包声明一个数据访问的 Service\n     * @param {string} name Service 的名称\n     * @param {object} actions 方法和地址定义\n     * @param {AjaxService} ajaxService 封装的 ajax 发送服务\n     */\n    function closureDataService(name, actions, ajaxService) {\n      /**\n       * @description 与 actions 一同闭包的构造函数\n       * @constructor\n       */\n      function DataResource() {\n        if (!actions) {\n          return;\n        }\n\n        if (typeof actions !== \"object\") {\n          console.log(\"Failed to new DataResource: [\" + actions + \"] is not a object\");\n          return;\n        }\n\n        if (!actions.root) {\n          console.log(\"Failed to new DataResource: no root prop\" + (JSON && JSON.stringify ? \": \" + JSON.stringify(actions) : \"\"));\n          return;\n        }\n\n        // 遍历配置\n        for (var name in actions) {\n          // 不对 root 进行创建\n          if (name === \"root\") continue;\n          // 额外的检查\n          if (actions.hasOwnProperty(name)) {\n            // 闭包创建函数\n            this[name] = (function (actionUrl) {\n              return function (data) {\n                return ajaxService.post(actionUrl, data);\n              };\n            })(getActionUrl(actions.root, actions[name]));\n          }\n        }\n      }\n\n      $provide.service(name, DataResource);\n    }\n\n    this.$get = [\"ajaxService\", function (ajaxService) {\n\n      return {\n        register: function (name, actions) {\n\n          if (!actions) return;\n\n          if (typeof actions !== 'object') return;\n\n          // 如果有 root 这个属性,就创建 service\n          if (actions.root) {\n            closureDataService(name, actions, ajaxService);\n            return;\n          }\n\n          // 否则继续访问子属性\n          for (var childName in actions) {\n            // 额外的检查\n            if (actions.hasOwnProperty(childName)) {\n\n              this.register(childName, actions[childName]);\n            }\n          }\n        }\n      };\n    }];\n  }])\n\n  .run([\"$vresources\", \"$actions\", function ($vresources, $actions) {\n    $vresources.register(null, $actions);\n  }]);\n/**\n * @Date:    2015-11-16 18:48:29\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.ajax', [])\n  .service('$ajax', $Ajax)\n  .service('ajaxService', AjaxService);\n\nfunction $Ajax($http, blockUI, $q) {\n  this.$http = $http;\n  this.blockUI = blockUI;\n  this.$q = $q;\n}\n$Ajax.$inject = [\"$http\", \"blockUI\", \"$q\"];\n$Ajax.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n  this.$http.post(url, data).then(function (response) {\n    var res = response.data;\n    if (!res) {\n      alert('相应结果不存在?????');\n      defer.reject(null);\n      return;\n    }\n    if (res.message || res.code) {\n      defer.reject(res);\n      return;\n    }\n    defer.resolve(res);\n  }, function (response) {\n    defer.reject(null, response);\n  });\n  return defer.promise;\n};\n\nfunction AjaxService($q, $ajax, messageService) {\n  this.$q = $q;\n  this.$ajax = $ajax;\n  this.messageService = messageService;\n}\nAjaxService.$inject = [\"$q\", \"$ajax\", \"messageService\"];\nAjaxService.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n\n  this.$ajax.post(url, data).then(function(res) {\n    // 成功\n    defer.resolve(res);\n    return res;\n  }, (function (_this) {\n    // 失败\n    return function(res) {\n      _this.messageService.show(res);\n      defer.reject(res);\n      return res;\n    };\n  })(this));\n\n  return defer.promise;\n};\n/**\n * @Date:    2015-11-16 20:30:37\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.cookie', [])\n  .service('cookieService', CookieService);\n\nvar keys = {\n  language: 'voyageone.user.language',\n  company: 'voyageone.user.company',\n  channel: 'voyageone.user.channel',\n  application: \"voyageone.user.application\",\n};\n\nfunction gentProps(key) {\n  return function(val) {\n    if (arguments.length === 1) {\n      return this.set(key, val);\n    } else if (arguments.length > 1) {\n      return this.set(key, arguments);\n    }\n    return this.get(key);\n  };\n}\n\nfunction CookieService($cookieStore) {\n  this.$cookieStore = $cookieStore;\n}\nCookieService.$inject = [\"$cookieStore\"];\n\nCookieService.prototype.get = function(key) {\n  var result = this.$cookieStore.get(key);\n  return result == undefined || result == null ? \"\" : this.$cookieStore.get(key);\n};\n\nCookieService.prototype.set = function(key, value) {\n  return this.$cookieStore.put(key, value);\n};\n\nCookieService.prototype.language = gentProps(keys.language);\n\nCookieService.prototype.company = gentProps(keys.company);\n\nCookieService.prototype.channel = gentProps(keys.channel);\n\nCookieService.prototype.application = gentProps(keys.application);\n\nCookieService.prototype.removeAll = function () {\n  this.$cookieStore.remove(keys.language);\n  this.$cookieStore.remove(keys.company);\n  this.$cookieStore.remove(keys.channel);\n  this.$cookieStore.remove(keys.application);\n};\n\n/**\n * 对后台的信息进行自动处理\n * @Date:    2015-11-19 14:47:23\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.message', [])\n  .service('messageService', MessageService);\n\n// 同步,DisplayType 枚举\nvar DISPLAY_TYPES = {\n  /**\n   * 弹出提示\n   */\n  ALERT: 1,\n  /**\n   * 顶端弹出自动关闭\n   */\n  NOTIFY: 2,\n  /**\n   * 右下弹出自动关闭\n   */\n  POP: 3,\n  /**\n   * 用户自定义处理\n   */\n  CUSTOM: 4\n};\n\nfunction MessageService(alert, confirm, notify) {\n  this.alert = alert;\n  this.confirm = confirm;\n  this.notify = notify;\n}\nMessageService.$inject = [\"alert\", \"confirm\", \"notify\"];\n\nMessageService.prototype = {\n  /**\n   * 根据类型自动显示信息\n   * @param {{displayType:Number, message:String}} res\n   */\n  show: function(res) {\n\n    var displayType = res.displayType;\n    var message = res.message;\n\n    switch (displayType) {\n      case DISPLAY_TYPES.ALERT:\n        this.alert(message);\n        break;\n      case DISPLAY_TYPES.NOTIFY:\n        this.notify(message);\n        break;\n      case DISPLAY_TYPES.POP:\n        this.notify({message: message, position: 'right bottom'});\n        break;\n    }\n  }\n};\n/**\n * @Date:    2015-11-19 14:26:43\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.permission', [])\n  .service('permissionService', PermissionService);\n\nfunction PermissionService($rootScope) {\n  this.$rootScope = $rootScope;\n  this.permissions = [];\n}\nPermissionService.$inject = [\"$rootScope\"];\n\nPermissionService.prototype = {\n  /**\n   * set the action permissions.\n   * @param permissions\n   */\n  setPermissions: function(permissions) {\n    this.permissions = permissions;\n    this.$rootScope.$broadcast('permissionsChanged');\n  },\n  /**\n   * check the permission has been in action permissions.\n   * @param permission\n   * @returns {boolean|*}\n   */\n  has: function(permission) {\n    return _.contains(this.permissions, permission.trim());\n  }\n};\n\n/**\n * @Date:    2015-11-19 14:35:25\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.translate', [])\n  .service('translateService', TranslateService);\n\nfunction TranslateService($translate) {\n  this.$translate = $translate;\n}\nTranslateService.$inject = [\"$translate\"];\n\nTranslateService.prototype = {\n  languages: {\n    en: \"en\",\n    zh: \"zh\"\n  },\n  /**\n   * set the web side language type.\n   * @param key\n   */\n  setLanguage: function(language) {\n    if (!_.contains(this.languages, language)) {\n      language = this.getBrowserLanguage();\n    }\n    this.$translate.use(language);\n    return language;\n  },\n  /**\n   * get the browser language type.\n   * @returns {string}\n   */\n  getBrowserLanguage: function() {\n    var currentLang = navigator.language;\n    if (!currentLang)\n      currentLang = navigator.browserLanguage;\n    return currentLang.substr(0, 2);\n  }\n};\nangular.module(\"voyageone.angular.controllers\",[\"voyageone.angular.controllers.datePicker\",\"voyageone.angular.controllers.selectRows\",\"voyageone.angular.controllers.showPopover\"]);\nangular.module(\"voyageone.angular.directives\",[\"voyageone.angular.directives.dateModelFormat\",\"voyageone.angular.directives.enterClick\",\"voyageone.angular.directives.fileStyle\",\"voyageone.angular.directives.ifNoRows\",\"voyageone.angular.directives.uiNav\",\"voyageone.angular.directives.schema\",\"voyageone.angular.directives.voption\",\"voyageone.angular.directives.vpagination\",\"voyageone.angular.directives.validator\"]);\nangular.module(\"voyageone.angular.factories\",[\"voyageone.angular.factories.dialogs\",\"voyageone.angular.factories.interceptor\",\"voyageone.angular.factories.notify\",\"voyageone.angular.factories.schema\",\"voyageone.angular.factories.vpagination\"]);\nangular.module(\"voyageone.angular.services\",[\"voyageone.angular.services.ajax\",\"voyageone.angular.services.cookie\",\"voyageone.angular.services.message\",\"voyageone.angular.services.permission\",\"voyageone.angular.services.translate\"]);\nreturn angular.module(\"voyageone.angular\",[\"voyageone.angular.controllers\",\"voyageone.angular.directives\",\"voyageone.angular.factories\",\"voyageone.angular.services\"])});","/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.dateModelFormat', [])\n    .directive('dateModelFormat', function ($filter) {\n        return {\n            restrict: \"A\",\n            require: 'ngModel',\n            link: function (scope, elem, attrs, ngModel) {\n                ngModel.$parsers.push(function (viewValue) {\n                    return $filter('date')(viewValue, attrs.dateModelFormat || 'yyyy-MM-dd HH:mm:ss');\n                });\n            }\n        };\n    });\n","/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.directives.enterClick', [])\n  .directive('enterClick', function() {\n    return {\n      restrict: \"A\",\n      link: function(scope, elem, attr) {\n        $(elem).keyup(function(e) {\n          if (e.keyCode !== 13) return;\n\n          var selectExp = attr.enterClick;\n\n          var targetElem, handler = function() {\n            targetElem.click();\n          };\n\n          try {\n            targetElem = angular.element(selectExp);\n          } catch (e) {\n            targetElem = null\n          }\n\n          if (!targetElem || !targetElem.length) {\n            // 如果取不到元素，则尝试作为表达式执行\n            handler = function() {\n              scope.$eval(selectExp);\n            };\n          } else if (targetElem.attr(\"disabled\")) {\n            // 如果元素存在，但是是禁用状态的，放弃执行\n            return;\n          }\n\n          handler();\n        });\n      }\n    };\n  });\n","/**\n * @Description:\n * 引入对上传框插件 fileStyle 的指令支持\n * @Date:    2015-11-19 17:35:22\n * @User:    Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.fileStyle', [])\n  .directive('fileStyle', function () {\n    return {\n      restrict: 'A',\n      controller: [\"$scope\", \"$element\", function ($scope, $element) {\n        var options = $element.data();\n        // old usage support\n        options.classInput = $element.data('classinput') || options.classInput;\n        if ($element.filestyle) {\n          $element.filestyle(options);\n        }\n      }]\n    };\n  });","/**\n * @Description:\n * table中无数据范围的数据\n * @User: linanbin\n * @Version: 2.0.0, 15/12/11\n */\n\nangular.module('voyageone.angular.directives.ifNoRows', [])\n    .directive('ifNoRows', function ($templateCache, $compile) {\n\n        var tempNoDataKey = \"voyageone.angular.directives.ifNoRows.tpl.html\";\n\n        // 没有数据显示警告\n        if (!$templateCache.get(tempNoDataKey)) {\n            $templateCache.put(tempNoDataKey,\n            '<div class=\"text-center text-hs\" id=\"noData\">\\n' +\n            '    <h4 class=\"text-vo\"><i class=\"icon fa fa-warning\"></i>&nbsp;{{\\'TXT_COM_WARNING\\' | translate}}</h4>\\n' +\n            '{{\\'TXT_COM_MSG_NO_DATE\\' | translate}}' +\n            '</dv>');\n        }\n\n        return {\n            restrict: \"A\",\n            replace: false,\n            scope: {\n                $$data: \"@ifNoRows\"\n            },\n            link: function (scope, element) {\n\n                scope.$parent.$watch(scope.$$data, function () {\n\n                    // 如果数据不存在则显示警告信息\n                    if(scope.$parent.$eval(scope.$$data)  == 0) {\n                        element.find(\"#noData\").remove();\n                        element.append($compile($templateCache.get(tempNoDataKey))(scope));\n                    } else {\n                        element.find(\"#noData\").remove();\n                    }\n                })\n            }\n        };\n    });\n","/**\n * @Description:\n * 用于菜单目录二级展开\n * @User:    Jonas\n * @Version: 0.2.0, 2015-12-07\n */\n\nangular.module('voyageone.angular.directives.uiNav', [])\n    .directive('uiNav', function () {\n\n        return {\n            restrict: 'AC',\n            link: function(scope, el) {\n                var _window = $(window),\n                    _mb = 768,\n                    wrap = $('.app-aside'),\n                    next,\n                    backdrop = '.dropdown-backdrop';\n                // unfolded\n                el.on('click', 'a', function(e) {\n                    next && next.trigger('mouseleave.nav');\n                    var _this = $(this);\n                    _this.parent().siblings( \".active\" ).toggleClass('active');\n                    _this.next().is('ul') &&  _this.parent().toggleClass('active') &&  e.preventDefault();\n                    // mobile\n                    _this.next().is('ul') || ( ( _window.width() < _mb ) && $('.app-aside').removeClass('show off-screen') );\n                });\n\n                // folded & fixed\n                el.on('mouseenter', 'a', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                    if ( !$('.app-aside-fixed.app-aside-folded').length || ( _window.width() < _mb ) || $('.app-aside-dock').length) return;\n                    var _this = $(e.target)\n                        , top\n                        , w_h = $(window).height()\n                        , offset = 50\n                        , min = 150;\n\n                    !_this.is('a') && (_this = _this.closest('a'));\n                    if( _this.next().is('ul') ){\n                        next = _this.next();\n                    }else{\n                        return;\n                    }\n\n                    _this.parent().addClass('active');\n                    top = _this.parent().position().top + offset;\n                    next.css('top', top);\n                    if( top + next.height() > w_h ){\n                        next.css('bottom', 0);\n                    }\n                    if(top + min > w_h){\n                        next.css('bottom', w_h - top - offset).css('top', 'auto');\n                    }\n                    next.appendTo(wrap);\n\n                    next.on('mouseleave.nav', function(e){\n                        $(backdrop).remove();\n                        next.appendTo(_this.parent());\n                        next.off('mouseleave.nav').css('top', 'auto').css('bottom', 'auto');\n                        _this.parent().removeClass('active');\n                    });\n\n                    $('.smart').length && $('<div class=\"dropdown-backdrop\"/>').insertAfter('.app-aside').on('click', function(next){\n                        next && next.trigger('mouseleave.nav');\n                    });\n\n                });\n\n                wrap.on('mouseleave', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                });\n            }\n        };\n    });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/24\n */\n\nangular.module('voyageone.angular.directives.schema', [])\n    // 定义fieldTypes\n    .constant('fieldTypes', {\n        INPUT: \"INPUT\",\n        DATE: \"DATE\",\n        DATETIME: \"DATETIME\",\n        TEXTAREA: \"TEXTAREA\",\n        SINGLE_CHECK: \"SINGLECHECK\",// 在complex中的显示select,以外的默认显示singlecheck,如果用户觉得select显示不方便,就将该field的type改成radio\n        RADIO: \"RADIO\",\n        MULTI_INPUT: \"MULTIINPUT\", // 没有被使用\n        MULTI_CHECK: \"MULTICHECK\",\n        COMPLEX: \"COMPLEX\", // TODO\n        MULTI_COMPLEX: \"MULTICOMPLEX\",\n        LABEL: \"LABEL\"  // 可以不显示\n    })\n    // 定义ruleTypes\n    .constant('ruleTypes', {\n        VALUE_TYPE_RULE: \"valueTypeRule\",\n        REQUIRED_RULE: \"requiredRule\",\n        DISABLE_RULE: \"disableRule\",\n        READ_ONLY_RULE: \"readOnlyRule\",\n        REGEX_RULE: \"regexRule\",\n        SET_RULE: \"setRule\", // TODO 暂时不知道怎么用\n        TIP_RULE: \"tipRule\", // TODO 不需要处理\n        DEV_TIP_RULE: \"devTipRule\", // 不需要处理\n        MIN_LENGTH_RULE: \"minLengthRule\",\n        MAX_LENGTH_RULE: \"maxLengthRule\",\n        MIN_VALUE_RULE: \"minValueRule\",\n        MAX_VALUE_RULE: \"maxValueRule\",\n        MIN_INPUT_NUM_RULE: \"minInputNumRule\",\n        MAX_INPUT_NUM_RULE: \"maxInputNumRule\",\n        MIN_DECIMAL_DIGITS_RULE: \"minDecimalDigitsRule\", // TODO\n        MAX_DECIMAL_DIGITS_RULE: \"maxDecimalDigitsRule\", // TODO\n        MIN_TARGET_SIZE_RULE: \"minTargetSizeRule\", // TODO\n        MAX_TARGET_SIZE_RULE: \"maxTargetSizeRule\", // TODO\n        MIN_IMAGE_SIZE_RULE: \"minImageSizeRule\", // TODO\n        MAX_IMAGE_SIZE_RULE: \"maxImageSizeRule\" // TODO\n    })\n    // 定义valueTypes\n    .constant('valueTypes', {\n        TEXT: \"text\",\n        DECIMAL: \"decimal\",\n        INTEGER: \"integer\",\n        LONG: \"long\",\n        DATE: \"date\",\n        TIME: \"time\",\n        URL: \"url\",\n        TEXTAREA: \"textarea\",\n        HTML: \"html\"\n    })\n\n    .directive('schemaHeader', function ($templateCache, schemaHeaderFactory, fieldTypes, ruleTypes, valueTypes) {\n\n        // 定义header\n        var templateKey_header = \"voyageone.angular.directives.schemaHeader.tpl.html\";\n        if (!$templateCache.get(templateKey_header)) {$templateCache.put(templateKey_header\n            , '<div class=\"form-group\">' +\n              '  <label class=\"col-sm-2 control-label\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" ng-bind=\"$$data.name\"></label>' +\n              '  <div class=\"col-sm-8\" ng-class=\"{\\'hierarchy_main modal-open\\' : showHtmlData.isMultiComplex, \\'hierarchy_main\\': showHtmlData.isComplex}\" ng-transclude></div>' +\n              '  <div class=\"col-sm-2\" ng-if=\"showHtmlData.isMultiComplex\"><button class=\"btn btn-success\" ng-click=\"addField($$data)\"><i class=\"fa fa-plus\"></i>{{\\'BTN_COM_ADD\\' | translate}}</button></div>' +\n              '  <div class=\"row\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><div class=\"col-sm-8 col-sm-offset-2 text-warnings\"><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div></div>' +\n              '</div>');}\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            transclude: true,\n            templateUrl: templateKey_header,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope) {\n                var schemaHeader = new schemaHeaderFactory();\n\n                _returnType (scope.$$data.type);\n                _operateRule (scope.$$data.rules);\n                scope.showHtmlData = angular.copy(schemaHeader.schemaHearInfo);\n\n                /**\n                 * 设置multi complex添加一条新记录\n                 * @param data\n                 */\n                scope.addField= function (data) {\n                    var newFieldMap = {};\n                    angular.forEach(data.fields, function (field) {\n                        eval(\"newFieldMap.\" + field.id + \"=field\");\n                    });\n\n                    scope.$$data.values.push({fieldMap: angular.copy(newFieldMap)});\n                };\n\n                /**\n                 * 返回需要展示的页面样式\n                 * @param type\n                 * @param valueTypeRule\n                 * @private\n                 */\n                function _returnType (type) {\n\n                    switch (type) {\n                        case fieldTypes.MULTI_COMPLEX:\n                            schemaHeader.isMultiComplex(true);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            schemaHeader.isComplex(true);\n                            break;\n                    }\n                }\n\n                /**\n                 * 处理rules\n                 * @param rules\n                 * @private\n                 */\n                function _operateRule (rules) {\n                    angular.forEach(rules, function (rule) {\n                        switch (rule.name) {\n                            case ruleTypes.REQUIRED_RULE:\n                                _requiredRule(rule);\n                                break;\n                            case ruleTypes.TIP_RULE:\n                                _tipRule(rule);\n                                break;\n                        }\n                    })\n\n                }\n\n                /**\n                 * 处理requiredRule\n                 * @param requiredRule\n                 * @private\n                 */\n                function _requiredRule (requiredRule) {\n                    if (\"true\" == requiredRule.value) {\n                        schemaHeader.isRequired(true);\n                    }\n                }\n\n                /**\n                * 处理tipRule\n                * @param tipRule\n                * @private\n                */\n                function _tipRule (tipRule) {\n                    schemaHeader.tipMsg(tipRule.value);\n                }\n            }\n        }\n    })\n\n    .directive('schemaItem', function ($templateCache, $compile, schemaFactory, fieldTypes, ruleTypes, valueTypes) {\n\n        // label\n        var templateKey_label = \"voyageone.angular.directives.schemaLabel.tpl.html\";\n        if (!$templateCache.get(templateKey_label)) {$templateCache.put(templateKey_label,\n            '<input style=\"min-width: 150px; max-width: 250px;\" type=\"text\" readonly ng-model=\"$$data.value\" class=\"form-control inherited\">');}\n\n        // input\n        var templateKey_input = \"voyageone.angular.directives.schemaInput.tpl.html\";\n        if (!$templateCache.get(templateKey_input)) {$templateCache.put(templateKey_input,\n            '<input style=\"min-width: 150px; max-width: 250px;\" ng-model=\"$$data.value\" class=\"form-control inherited\" replaceInfo>');}\n\n        // data\n        var templateKey_date = \"voyageone.angular.directives.schemaDate.tpl.html\";\n        if (!$templateCache.get(templateKey_date)) {$templateCache.put(templateKey_date,\n            '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input replaceInfo type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDate}}\" ng-model=\"$parent.$$data.value\" date-model-format=\"{{formatDate}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>');}\n\n        // datetime\n        var templateKey_datetime = \"voyageone.angular.directives.schemaDatetime.tpl.html\";\n        if (!$templateCache.get(templateKey_datetime)) {$templateCache.put(templateKey_datetime,\n            '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input replaceInfo type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDateTime}}\" ng-model=\"$parent.$$data.value\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>');}\n\n        // textarea\n        var templateKey_textarea = \"voyageone.angular.directives.schemaTextarea.tpl.html\";\n        if (!$templateCache.get(templateKey_textarea)) {$templateCache.put(templateKey_textarea,\n            '<textarea style=\"min-width: 150px; max-width: 650px;\" class=\"form-control no-resize\" ng-model=\"$$data.value\" rows=\"{{showHtmlData.rowNum}}\" replaceInfo></textarea>');}\n\n        // single check-select\n        var templateKey_select = \"voyageone.angular.directives.schemaSelect.tpl.html\";\n        if (!$templateCache.get(templateKey_select)) {$templateCache.put(templateKey_select,\n            '<select style=\"min-width: 150px; max-width: 250px;\" replaceInfo class=\"form-control\" ng-model=\"$$data.value.value\" ng-options=\"option.value as option.displayName for option in $$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');}\n\n        // single check-radio\n        var templateKey_radio = \"voyageone.angular.directives.schemaRadio.tpl.html\";\n        if (!$templateCache.get(templateKey_radio)) {$templateCache.put(templateKey_radio,\n            '<label class=\"checkbox-inline c-radio\" ng-repeat=\"option in $$data.options\"><input name=\"{{$$data.id}}\" type=\"radio\" ng-value=\"option.value\" ng-model=\"$$data.value.value\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>');}\n\n        // multi check-checkbox\n        var templateKey_checkbox = \"voyageone.angular.directives.schemaCheckbox.tpl.html\";\n        if (!$templateCache.get(templateKey_checkbox)) {$templateCache.put(templateKey_checkbox,\n            '<label class=\"checkbox-inline c-checkbox\" ng-repeat=\"option in $$data.options\"><input type=\"checkbox\" ng-value=\"option.value\" ng-click=\"checkboxValue()\" ng-model=\"showHtmlData.checkValues[option.value]\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>');}\n\n        // multi complex\n        var templateKey_multiComplex = \"voyageone.angular.directives.schemaMultiComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_multiComplex)) {$templateCache.put(templateKey_multiComplex,\n            '<table class=\"table text-center\">' +\n            '<thead><tr>' +\n            //'<schema-header ng-repeat=\"field in $$data.fields\" data=\"field\" is-complex=\"true\"></schema-header>' +\n            '<th ng-repeat=\"field in $$data.fields\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" class=\"text-center\" style=\"min-width: 180px;\">{{field.name}}</th>' +\n            '<th style=\"min-width: 60px;\" class=\"text-center\" translate=\"TXT_COM_EDIT\"></th>' +\n            '</tr></thead>' +\n            '<tbody><tr ng-repeat=\"value in $$data.values\">' +\n            '<td class=\"text-left\" ng-repeat=\"field in value.fieldMap\"><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></td>' +\n            '<td style=\"min-width: 60px;\"><button title=\"{\\'BTN_COM_DELETE\\' | translate}\" class=\"btn btn-danger btn-xs\" ng-click=\"delField($index)\"><i class=\"fa  fa-trash-o\"></i></button></td>' +\n            '</tr></tbody>' +\n            '</table>');}\n\n        // complex\n        var templateKey_complex = \"voyageone.angular.directives.schemaComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_complex)) {$templateCache.put(templateKey_complex,\n            '<schema-header ng-repeat=\"field in $$data.fields\" data=\"field\"><schema-item data=\"field\"></schema-item></schema-header>');}\n\n        // multi complex tip\n        var templateKey_multiComplex_tip = \"voyageone.angular.directives.schemaMultiComplexTip.tpl.html\";\n        if (!$templateCache.get(templateKey_multiComplex_tip)) {$templateCache.put(templateKey_multiComplex_tip,\n            '<div class=\"text-warnings\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><br><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div>');}\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                $$data: \"=data\",\n                $$hastip: \"=hastip\",\n                $$complex: \"=complex\"\n            },\n            link: function (scope, element) {\n\n                var schema = new schemaFactory();\n\n                _returnType (scope.$$data.type);\n                _operateRule (scope.$$data.rules);\n\n                var tempHtml = \"\";\n                // 拼接body\n                switch (schema.type()) {\n                    case fieldTypes.INPUT:\n                        tempHtml = $templateCache.get(templateKey_input).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.DATE:\n                        tempHtml = $templateCache.get(templateKey_date).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.DATETIME:\n                        tempHtml = $templateCache.get(templateKey_datetime).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.TEXTAREA:\n                        tempHtml = $templateCache.get(templateKey_textarea).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.SINGLE_CHECK:\n                        tempHtml = $templateCache.get(templateKey_select).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.RADIO:\n                        tempHtml = $templateCache.get(templateKey_radio).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.MULTI_CHECK:\n                        tempHtml = $templateCache.get(templateKey_checkbox).replace(\"replaceInfo\", schema.html());\n                        break;\n                    case fieldTypes.LABEL:\n                        tempHtml = $templateCache.get(templateKey_label);\n                        break;\n                    case fieldTypes.MULTI_COMPLEX:\n                        tempHtml = $templateCache.get(templateKey_multiComplex);\n                        break;\n                    case fieldTypes.COMPLEX:\n                        tempHtml = $templateCache.get(templateKey_complex);\n                        break;\n                }\n\n                // 添加规则说明\n                if (schema.tipMsg() != null && scope.$$hastip) {\n                    tempHtml += $templateCache.get(templateKey_multiComplex_tip);\n                }\n                scope.showHtmlData = angular.copy(schema.schemaInfo());\n                element.html($compile(tempHtml)(scope));\n\n                /**\n                * 设置checkbox被选中的value值处理\n                * @param value\n                */\n                scope.checkboxValue = function () {\n                    scope.$$data.values = [];\n                    angular.forEach(_returnKey(scope.showHtmlData.checkValues), function (obj) {\n                        scope.$$data.values.push({id: null, value: obj});\n                    })\n                };\n\n                /**\n                * 设置multi complex删除该条记录\n                * @param index\n                */\n                scope.delField = function (index) {\n                    scope.$$data.values.splice(index, 1);\n                };\n\n                /**\n                * 返回需要展示的页面样式\n                * @param type\n                * @param valueTypeRule\n                * @private\n                */\n                function _returnType (type) {\n                    schema.type(type);\n                    switch (type) {\n                        case fieldTypes.RADIO:\n                            if (scope.$$complex)\n                                schema.type(fieldTypes.SINGLE_CHECK);\n                            break;\n                        case fieldTypes.MULTI_CHECK:\n                            _setCheckValues(scope.$$data.values);\n                            break;\n                        case fieldTypes.MULTI_COMPLEX:\n                            scope.$$data.values = _resetMultiComplex(scope.$$data);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            scope.$$data.values = _resetComplex(scope.$$data);\n                            break;\n                    }\n                }\n\n                /**\n                * 设置checkvalues\n                * @param values\n                * @private\n                */\n                function _setCheckValues (values) {\n                    if (values != undefined && values != null) {\n                        angular.forEach(values, function (obj) {\n                            schema.checkValues(obj.value, true);\n                        })\n                    }\n                }\n\n                /**\n                * 重新设置multicomplex的一些属性\n                * @param fields\n                * @private\n                */\n                function _resetMultiComplex (data) {\n                    var tempValues = [];\n                    angular.forEach(data.values, function (value) {\n                        var tempFieldMap = {};\n                        angular.forEach(data.fields, function (field) {\n                            if (value.fieldMap[field.id] != undefined)\n                                tempFieldMap[field.id] = value.fieldMap[field.id];\n                            else\n                                tempFieldMap[field.id] = field;\n                        });\n                        tempValues.push({fieldMap: angular.copy(tempFieldMap)});\n                    });\n\n                    return tempValues;\n                }\n\n                /**\n                 * 重新\n                 * @param data\n                 * @private\n                 */\n                function _resetComplex (data) {\n                    //var tempValues = {};\n                    //angular.forEach(data.fields, function (value) {\n                    //    if (value.type === fieldTypes.COMPLEX) {\n                    //        tempValues[]\n                    //    } else if (value.type === fieldTypes.MULTI_COMPLEX) {\n                    //        tempValues[value.id] =\n                    //    }\n                    //})\n                }\n\n                /**\n                * 处理rules\n                * @param rules\n                * @private\n                */\n                function _operateRule (rules) {\n                    angular.forEach(rules, function (rule) {\n                        switch (rule.name) {\n                            case ruleTypes.VALUE_TYPE_RULE:\n                                _valueTypeRule(rule);\n                                break;\n                            case ruleTypes.REQUIRED_RULE:\n                                _requiredRule(rule);\n                                break;\n                            case ruleTypes.DISABLE_RULE:\n                                _disableRule(rule);\n                                break;\n                            case ruleTypes.READ_ONLY_RULE:\n                                _readOnlyRule(rule);\n                                break;\n                            case ruleTypes.REGEX_RULE:\n                                _regexRule(rule);\n                                break;\n                            case ruleTypes.TIP_RULE:\n                                _tipRule(rule);\n                                break;\n                            case ruleTypes.MIN_LENGTH_RULE:\n                                _minLengthRule(rule);\n                                break;\n                            case ruleTypes.MAX_LENGTH_RULE:\n                                _maxLengthRule(rule);\n                                break;\n                            case ruleTypes.MIN_VALUE_RULE:\n                                _minValueRule(rule);\n                                break;\n                            case ruleTypes.MAX_VALUE_RULE:\n                                _maxValueRule(rule);\n                                break;\n                            case ruleTypes.MIN_INPUT_NUM_RULE:\n                                _minInputNumRule(rule);\n                                break;\n                            case ruleTypes.MAX_INPUT_NUM_RULE:\n                                _maxInputNumRule(rule);\n                                break;\n                        }\n                    })\n                }\n\n                /**\n                 * 处理valueTypeRule\n                 * @param valueTypeRule\n                 * @private\n                 */\n                function _valueTypeRule (valueTypeRule) {\n                    switch (valueTypeRule.value) {\n                        case valueTypes.TEXT:\n                        case valueTypes.DECIMAL:\n                        case valueTypes.INTEGER:\n                        case valueTypes.LONG:\n                            schema.type(fieldTypes.INPUT);\n                            schema.html(\"type=\\\"text\\\"\");\n                            break;\n                        case valueTypes.DATE:\n                            schema.type(fieldTypes.DATE);\n                            break;\n                        case valueTypes.TIME:\n                            schema.type(fieldTypes.DATETIME);\n                            break;\n                        case valueTypes.URL:\n                            schema.type(fieldTypes.INPUT);\n                            schema.html(\"type=\\\"url\\\"\");\n                            break;\n                        case valueTypes.TEXTAREA:\n                            schema.type(fieldTypes.TEXTAREA);\n                            schema.rowNum(4);\n                            break;\n                        case valueTypes.HTML:\n                            schema.type(fieldTypes.TEXTAREA);\n                            schema.rowNum(10);\n                            break;\n                    }\n                }\n\n                /**\n                 * 处理requiredRule\n                 * @param requiredRule\n                 * @private\n                 */\n                function _requiredRule (requiredRule) {\n                    if (\"true\" == requiredRule.value) {\n                        schema.isRequired(true);\n                        schema.html(\"required\");\n                    }\n                }\n\n                /**\n                 * 处理disableRule\n                 * @param disableRule\n                 * @private\n                 */\n                function _disableRule (disableRule) {\n                    if (\"true\" == disableRule.value) {\n                        schema.html(\"ng-disabled=\\\"true\\\"\");\n                    }\n                }\n\n                /**\n                 * 处理readOnlyRule\n                 * @param readOnlyRule\n                 * @private\n                 */\n                function _readOnlyRule (readOnlyRule) {\n                    if (\"true\" == readOnlyRule.value) {\n                        schema.html(\"readonly\");\n                    }\n                }\n\n                /**\n                 * 处理regexRule\n                 * @param regexRule\n                 * @private\n                 */\n                function _regexRule (regexRule) {\n                    schema.html(\"ng-pattern=\\\"/\" + regexRule.value +\"/\\\"\");\n                }\n\n                /**\n                 * 处理tipRule\n                 * @param tipRule\n                 * @private\n                 */\n                function _tipRule (tipRule) {\n                    schema.tipMsg(tipRule.value);\n                }\n\n                /**\n                 * 处理minLengthRule\n                 * @param minLengthRule\n                 * @private\n                 */\n                function _minLengthRule (minLengthRule) {\n                    var value = isNaN(parseInt(minLengthRule.value)) ? 0 : minLengthRule.value;\n\n                    if (\"not include\" === minLengthRule.exProperty)\n                        value = (value > 0) ? value -1 : 0;\n\n                    if (\"character\" == minLengthRule.unit)\n                        schema.html(\"ng-minlength=\\\"\" + value +\"\\\"\");\n                    else\n                        schema.html(\"ng-char-minlength=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 处理maxLengthRule\n                 * @param maxLengthRule\n                 * @private\n                 */\n                function _maxLengthRule (maxLengthRule) {\n                    var value = isNaN(parseInt(maxLengthRule.value)) ? 0 : maxLengthRule.value;\n\n                    if (\"not include\" === maxLengthRule.exProperty)\n                        value = (value > 0) ? value -1 : 0;\n\n                    if (\"character\" == maxLengthRule.unit)\n                        schema.html(\"ng-maxlength=\\\"\" + value +\"\\\"\");\n                    else\n                        schema.html(\"ng-char-maxlength=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 处理minValueRule\n                 * @param minValueRule\n                 * @private\n                 */\n                function _minValueRule (minValueRule) {\n                    var value = isNaN(parseFloat(minValueRule.value)) || 0;\n\n                    if (\"not include\" === minValueRule.exProperty)\n                        value = (value > 0) ? value - 0.01 : 0;\n\n                    schema.html(\"ng-minvalue=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 处理maxValueRule\n                 * @param maxValueRule\n                 * @private\n                 */\n                function _maxValueRule (maxValueRule) {\n                    var value = isNaN(parseFloat(maxValueRule.value)) || 0;\n\n                    if (\"not include\" === maxValueRule.exProperty)\n                        value = (value > 0) ? value - 0.01 : 0;\n\n                    schema.html(\"ng-maxvalue=\\\"\" + value +\"\\\"\");\n\n                }\n\n                /**\n                 * 处理minInputNumRule\n                 * @param minInputNumRule\n                 * @private\n                 */\n                function _minInputNumRule (minInputNumRule) {\n                    var value = isNaN(parseInt(minInputNumRule.value)) || 0;\n\n                    if (\"not include\" === minInputNumRule.exProperty)\n                        value = (value > 0) ? value - 1 : 0;\n\n                    schema.html(\"ng-mininputnum=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 处理maxInputNumRule\n                 * @param maxInputNumRule\n                 * @private\n                 */\n                function _maxInputNumRule (maxInputNumRule) {\n                    var value = isNaN(parseInt(maxInputNumRule.value)) || 0;\n\n                    if (\"not include\" === maxInputNumRule.exProperty)\n                        value = (value > 0) ? value - 1 : 0;\n\n                    schema.html(\"ng-maxinputnum=\\\"\" + value +\"\\\"\");\n                }\n\n                /**\n                 * 如果checkbox被选中,返回被选中的value.\n                 * eg.[{new: true, pending: false, approved: true}] -> [new, approved]\n                 * @param object\n                 * @returns {*}\n                 */\n                function _returnKey(object) {\n                    var result = [];\n                    angular.forEach(object, function(value, index) {\n                        if (value) result.push(index);\n                    });\n                    return result;\n                }\n            }\n        }\n    });\n","/**\n * @Description:\n * 用于动态显示options\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-22\n */\n\nangular.module('voyageone.angular.directives.voption', [])\n    .directive('voption', function ($templateCache, $compile) {\n\n        var templateKey_select = \"voyageone.angular.directives.optionSelect.tpl.html\";\n\n        // 显示成select样式\n        if (!$templateCache.get(templateKey_select)) {\n            $templateCache.put(templateKey_select,\n                '<select class=\"form-control\" ng-model=\"$$data.value.value\" ng-options=\"option.value as option.displayName for option in $$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');\n        }\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope, element) {\n\n                // 定义不同的展示种类\n                var typeList = {\n                    SINGLE_CHECK: \"SINGLECHECK\"\n                };\n\n                // 监视配置变动\n                scope.$watch('$$data', function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 根据type选择展示不同的控件\n                 */\n                function refresh() {\n                    var tempHtml;\n                    switch (scope.$$data.type) {\n                        case typeList.SINGLE_CHECK:\n                            tempHtml = $compile($templateCache.get(templateKey_select))(scope);\n                            break;\n                    }\n                    element.html(tempHtml);\n                }\n            }\n        };\n    });","/**\n * @Description:\n * 用于分页\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-08\n */\n\nangular.module('voyageone.angular.directives.vpagination', [])\n    .directive('vpagination', function ($templateCache, $compile, vpagination) {\n\n        var templateKey = \"voyageone.angular.directives.pagination.tpl.html\";\n        var templateKeyNoData = \"voyageone.angular.directives.paginationNoData.tpl.html\";\n\n        // 有数据分页样式\n        if (!$templateCache.get(templateKey)) {\n            $templateCache.put(templateKey,\n                '<div class=\"col-sm-2\">\\n' +\n                '    <div class=\"page-main form-inline\">{{\\'TXT_COM_SHOWING_NO\\' | translate}}&nbsp;<input class=\"text-center\" type=\"text\" ng-model=\"curr.pageNo\"/>&nbsp;/&nbsp;{{totalPages}}&nbsp;{{\\'TXT_COM_PAGE\\' | translate}}&nbsp;' +\n                '        <button class=\"btn btn-xs btn-default\" type=\"button\" ng-click=\"goPage(curr.pageNo)\" translate=\"BTN_GO\"></button>\\n' +\n                '    </div>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-7 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_COM_SHOWING\\' | translate}}&nbsp;{{curr.start}}-{{curr.end}}&nbsp;{{\\'TXT_COM_OF\\' | translate}}&nbsp;{{totalItems}}&nbsp{{\\'TXT_COM_ITEMS\\' | translate}}</small>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-3 text-right text-center-xs\"><div>' +\n                '    <ul class=\"pagination-sm m-t-none m-b pagination ng-isolate-scope ng-valid ng-dirty ng-valid-parse\">\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-first\"><a href ng-click=\"goPage(1)\" ng-disabled=\"curr.isFirst\">&laquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-prev\"><a href ng-click=\"goPage(curr.pageNo - 1)\" ng-disabled=\"curr.isFirst\">&lsaquo;</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowStart\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-repeat=\"page in curr.pages track by $index\" ng-class=\"{active: isCurr(page)}\" class=\"pagination-page\"><a href ng-click=\"goPage(page)\">{{page}}</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowEnd\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-next\"><a href ng-click=\"goPage(curr.pageNo + 1)\" ng-disabled=\"curr.isLast\">&rsaquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-last\"><a href ng-click=\"goPage(totalPages)\" ng-disabled=\"curr.isLast\">&raquo;</a></li>\\n' +\n                '    </ul>\\n' +\n                '</div>');\n        }\n\n        // 无数据分页样式\n        if (!$templateCache.get(templateKeyNoData)) {\n            $templateCache.put(templateKeyNoData,\n                '<div class=\"col-sm-7 col-sm-offset-2 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_COM_SHOWING\\' | translate}}&nbsp;0-0&nbsp;{{\\'TXT_COM_OF\\' | translate}}&nbsp;0&nbsp{{\\'TXT_COM_ITEMS\\' | translate}}</small>\\n' +\n                '</div>');\n        }\n\n        var defConfig = {curr: 1, total: 0, size: 20, showPageNo:5};\n\n        return {\n            restrict: \"AE\",\n            //templateUrl: templateKey,\n            replace: false,\n            scope: {\n                $$configNameForA: \"@vpagination\",\n                $$configNameForE: \"@config\"\n            },\n            link: function (scope, element) {\n\n                // 获取用户的config配置\n                var userConfigName = scope.$$configNameForA || scope.$$configNameForE;\n                var userConfig = scope.$parent.$eval(userConfigName);\n\n                // 将用户配置覆盖到默认配置后，在重新覆盖到用户配置上，用于补全配置属性\n                var userWithDefConfig = angular.extend({}, defConfig, userConfig);\n                scope.config = angular.extend(userConfig, userWithDefConfig);\n\n                var p = new vpagination(scope.config);\n\n                // 监视配置变动\n                scope.$parent.$watch(userConfigName, function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 跳转到指定页\n                 * @param num\n                 */\n                scope.goPage = function (num) {\n                    p.goPage(isNaN(Number(num)) ? 1 : Number(num));\n                };\n\n                /**\n                 * 判断是否是当前页\n                 * @param num\n                 * @returns {*|boolean}\n                 */\n                scope.isCurr = function (num) {\n                    return p.isCurr(num);\n                };\n\n                function refresh() {\n\n                    // 获取总页数\n                    scope.totalPages = p.getPageCount();\n                    // 获取总items数\n                    scope.totalItems = p.getTotal();\n                    // 获取当前页的信息\n                    scope.curr = p.getCurr();\n\n                    // 根据总数量显示不同的分页样式\n                    var tempHtml;\n                    if(p.getTotal() == 0) {\n                        tempHtml = $compile($templateCache.get(templateKeyNoData))(scope);\n                    } else {\n                        tempHtml = $compile($templateCache.get(templateKey))(scope);\n                    }\n                    element.html(tempHtml);\n\n                }\n            }\n        };\n    });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\nangular.module('voyageone.angular.directives.validator', [])\n\n    // 定义ng-char-maxlength\n    .directive('ngCharMaxlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxlength = -1;\n                attr.$observe('ngCharMaxlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    maxlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxlength = function(modelValue, viewValue) {\n                    return (maxlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) <= maxlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-char-minlength\n    .directive('ngCharMinlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minlength = -1;\n                attr.$observe('ngCharMinlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    minlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minlength = function(modelValue, viewValue) {\n                    return (maxlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) >= minlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-maxvalue\n    .directive('ngMaxvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        maxvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        maxvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        maxvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxvalue = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-minvalue\n    .directive('ngMinvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMinvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        minvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        minvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        minvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minvalue = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue >= minvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-maxinputnum\n    .directive('ngMaxinputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxinputvalue', function(value) {\n                    maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxinputnum = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-mininputnum\n    .directive('ngMininputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMininputnum', function(value) {\n                    minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.mininputnum = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length >= minvalue);\n                };\n            }\n        }\n    })\n;","/**\n * @Description:\n * 弹出日期控件\n * @User:    Edward\n * @Version: 0.2.0, 2015-10-10\n */\n\nangular.module('voyageone.angular.controllers.datePicker', [])\n    .controller('datePickerCtrl', function ($scope) {\n        var vm = this;\n\n        vm.formats = ['yyyy-MM-dd', 'yyyy-MM-dd HH:mm:ss'];\n\n        $scope.formatDate = vm.formats[0];\n        $scope.formatDateTime = vm.formats[1];\n\n        $scope.open = open;\n\n        function open($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n\n            $scope.opened = true;\n        }\n    });","/**\n * @Description:\n * select tables items\n * @User: linanbin\n * @Version: 2.0.0, 15/12/16\n */\n\nangular.module('voyageone.angular.controllers.selectRows', [])\n    .controller('selectRowsCtrl', function ($scope) {\n\n        $scope.selectAll = selectAll;\n        $scope.selectOne = selectOne;\n\n        /**\n         * 全部选中当前页数据\n         * @param objectList\n         */\n        function selectAll(objectList) {\n\n            objectList.selAllFlag = !objectList.selAllFlag;\n\n            // 循环处理全选中的数据\n            angular.forEach(objectList.currPageRows, function (object) {\n                if(objectList.selFlag.hasOwnProperty(object.id)) {\n\n                    // 单签页面所有产品选中flag被标示\n                    objectList.selFlag[object.id] = objectList.selAllFlag;\n\n                    if (objectList.hasOwnProperty('selList')) {\n                        if (objectList.selAllFlag && objectList.selList.indexOf(object) < 0) {\n                            objectList.selList.push(object);\n                        } else if (!objectList.selAllFlag && objectList.selList.indexOf(object) > -1) {\n                            objectList.selList.splice(objectList.selList.indexOf(object), 1);\n                        }\n                    }\n                }\n            });\n        }\n\n        /**\n         * 选中单条数据\n         * @param currentId\n         * @param objectList\n         */\n        function selectOne(currentId, objectList) {\n            currentId = parseInt(currentId);\n            if (objectList.hasOwnProperty('selList')) {\n\n                angular.forEach(objectList.selList, function(object) {\n\n                    if (_.isEqual(object.id, currentId)) {\n                        if (objectList.selList.indexOf(object) > -1) {\n                            objectList.selList.splice(objectList.selList.indexOf(object), 1);\n                        } else {\n                            objectList.selList.push(object);\n                        }\n                    }\n                });\n            }\n\n            objectList.selAllFlag = true;\n            angular.forEach(objectList.currPageRows, function(object) {\n                if (!objectList.selFlag[object.id]) {\n                    objectList.selAllFlag = false;\n                }\n            })\n        }\n    });","/**\n * @Description:\n * 显示html的popover的共同方法\n * @User: linanbin\n * @Version: 2.0.0, 15/12/14\n */\n\nangular.module('voyageone.angular.controllers.showPopover', [])\n    .controller('showPopoverCtrl', function ($scope) {\n\n        $scope.showInfo = showInfo;\n\n        function showInfo(values) {\n            var tempHtml = \"\";\n\n            angular.forEach(values, function (data, index) {\n                tempHtml += data;\n                if (index !== values.length) {\n                    tempHtml += \"<br>\";\n                }\n            });\n            return tempHtml\n        }\n    });\n","/**\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.dialogs', [])\n  .factory(\"$dialogs\", function ($modal, $filter, $templateCache) {\n\n    var templateName = 'voyageone.angular.factories.dialogs.tpl.html';\n    $templateCache.put(templateName, '<div class=\"vo_modal\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" ng-click=\"close()\"><span aria-hidden=\"true\"><i ng-click=\"close()\" class=\"fa fa-close\"></i></span></button><h4 class=\"modal-title\" ng-bind-html=\"title\"></h4></div><div class=\"modal-body wrapper-lg\"><div class=\"row\"><p ng-bind-html=\"content\"></p></div></div><div class=\"modal-footer\"><button class=\"btn btn-default btn-sm\" ng-if=\"!isAlert\" ng-click=\"close()\" translate=\"BTN_COM_CANCEL\"></button><button class=\"btn btn-vo btn-sm\" ng-click=\"ok()\" translate=\"BTN_COM_OK\"></button></div></div>');\n\n    function tran(translationId, values) {\n      return $filter('translate')(translationId, values);\n    }\n\n    return function (options) {\n\n      if (!_.isObject(options)) throw \"arg type must be object\";\n\n      var values;\n\n      if (_.isObject(options.content)) {\n        values = options.content.values;\n        options.content = options.content.id;\n      }\n\n      options.title = tran(options.title);\n      options.content = tran(options.content, values);\n\n      var modalInstance = $modal.open({\n        templateUrl: templateName,\n        controller: [\"$scope\", function (scope) {\n          _.extend(scope, options);\n        }],\n        size: 'md'\n      });\n\n      options.close = function () {\n        modalInstance.dismiss('close')\n      };\n\n      options.ok = function () {\n        modalInstance.close('');\n      };\n\n      return modalInstance;\n    };\n  })\n\n  .factory(\"alert\", function ($dialogs) {\n    return function (content, title) {\n      return $dialogs({\n        title: title || 'TXT_COM_ALERT',\n        content: content,\n        isAlert: true\n      });\n    };\n  })\n\n  .factory(\"confirm\", function vConfirm($dialogs) {\n    return function (content, title) {\n      return $dialogs({\n        title: title || 'TXT_COM_CONFIRM',\n        content: content,\n        isAlert: false\n      });\n    };\n  });","/**\n * @Date:    2015-11-16 20:51:05\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.factories.interceptor', [])\n  .factory('interceptorFactory', InterceptorFactory)\n  .config(function ($httpProvider) {\n    $httpProvider.interceptors.push('interceptorFactory');\n  });\n\nfunction InterceptorFactory() {\n\n  // 未知的系统错误\n  var UNKNOWN_CODE = \"5\";\n  // 和 JAVA 同步,系统通知前端自动跳转的特殊代码\n  var CODE_SYS_REDIRECT = \"SYS_REDIRECT\";\n  // 和 JAVA 同步,回话过期的信息\n  var MSG_TIMEOUT = \"300001\";\n\n  /**\n   * 对系统自动跳转的响应,执行跳转\n   * @param {{code:string,redirectTo:string}} res\n   * @returns {boolean}\n   */\n  function autoRedirect(res) {\n    if (res.code != CODE_SYS_REDIRECT) {\n      return false;\n    }\n    // 如果跳转数据异常,则默认跳转登陆页\n    location.href = res.redirectTo || '/login.html';\n    return true;\n  }\n\n  /**\n   * 对会话超时和未登录进行特殊处理\n   * @param {{code:string}} res\n   * @returns {boolean}\n   */\n  function sessionTimeout(res) {\n    if (res.code != MSG_TIMEOUT) {\n      return false;\n    }\n    // 会话超时,默认跳转到登陆页\n    location.href = '/login.html';\n    return true;\n  }\n\n  /**\n   * 处理位置的异常\n   * @param response\n   */\n  function unknownException(response) {\n\n    if (response.data.code !== UNKNOWN_CODE) {\n      return;\n    }\n\n    window.$$lastUnknow = response;\n    console.error('Server throw unknown exceptio. Message:', response.data.message);\n  }\n\n  return {\n    request: function (config) {\n      return config;\n    },\n    response: function (res) {\n      var result = res.data;\n\n      if (autoRedirect(result) || sessionTimeout(result)) {\n        return res;\n      }\n\n      unknownException(res);\n\n      return res;\n    },\n    requestError: function (config) {\n      return config;\n    },\n    responseError: function (res) {\n    }\n  };\n}","/**\n * Notify 的可用参数\n * {\n *    // whether to hide the notification on click\n *    clickToHide: true,\n *    // whether to auto-hide the notification\n *    autoHide: true,\n *    // if autoHide, hide after milliseconds\n *    autoHideDelay: 5000,\n *    // show the arrow pointing at the element\n *    arrowShow: true,\n *    // arrow size in pixels\n *    arrowSize: 5,\n *    // position defines the notification position though uses the defaults below\n *    position: '...',\n *    // default positions\n *    elementPosition: 'bottom left',\n *    globalPosition: 'top right',\n *    // default style\n *    style: 'bootstrap',\n *    // default class (string or [string])\n *    className: 'error',\n *    // show animation\n *    showAnimation: 'slideDown',\n *    // show animation duration\n *    showDuration: 400,\n *    // hide animation\n *    hideAnimation: 'slideUp',\n *    // hide animation duration\n *    hideDuration: 200,\n *    // padding between element and notification\n *    gap: 2\n * }\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.notify', [])\n  .factory('notify', function ($filter) {\n    function notify(options) {\n\n      if (!options) return;\n      if (_.isString(options)) options = {message: options};\n      if (!_.isObject(options)) return;\n\n      var values;\n\n      // 为 translate 的格式化提供支持，检测类型并转换\n      if (_.isObject(options.message)) {\n\n        values = options.message.values;\n        options.message = options.message.id;\n      }\n\n      options.message = $filter('translate')(options.message, values);\n\n      return $.notify(options.message, options);\n    }\n\n    notify.success = function (message) {\n      return notify({message: message, className: \"success\"});\n    };\n\n    notify.warning = function (message) {\n      return notify({message: message, className: \"warning\"});\n    };\n\n    notify.danger = function (message) {\n      return notify({message: message, className: \"danger\"});\n    };\n\n    return notify;\n  });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\n\nangular.module('voyageone.angular.factories.schema', [])\n\n    // 定义schemaHeaderFactory\n    .factory('schemaHeaderFactory', function () {\n        return function (config) {\n            var _schemaHeaderInfo = config ? config : {\n                isRequired: false,\n                //size: null,\n                isMultiComplex: false,\n                isComplex: false,\n                tipMsg: []\n            };\n\n            this.isRequired = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isRequired = value : _schemaHeaderInfo.isRequired;\n            };\n\n            //this.size = function (value) {\n            //    return value !== undefined ? _schemaHeaderInfo.size = value : _schemaHeaderInfo.size;\n            //};\n\n            this.isComplex = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isComplex = value : _schemaHeaderInfo.isComplex;\n            };\n\n            this.isMultiComplex = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.isMultiComplex = value : _schemaHeaderInfo.isMultiComplex;\n            };\n\n            this.tipMsg = function (value) {\n                return value !== undefined ? _schemaHeaderInfo.tipMsg.push(value) : _schemaHeaderInfo.tipMsg;\n            };\n\n            this.schemaHearInfo = _schemaHeaderInfo;\n        }\n    })\n\n    // 定义schemaFactory\n    .factory('schemaFactory', function () {\n\n        return function (config) {\n\n            var _schemaInfo = config ? config : {\n                type: null,\n                //size: null,\n                rowNum: null,\n                isRequired: false,\n                checkValues: [],\n                tipMsg: [],\n                html: []\n            };\n\n            this.type = function (value) {\n                return value !== undefined ? _schemaInfo.type = value : _schemaInfo.type;\n            };\n\n            //this.size = function (value) {\n            //    return value !== undefined ? _schemaInfo.size = value : _schemaInfo.size;\n            //};\n\n            this.html = function (value) {\n                return value !== undefined ? _schemaInfo.html.push(value) : htmlToString(_schemaInfo.html);\n            };\n\n            this.isRequired = function (value) {\n                return value !== undefined ? _schemaInfo.isRequired = value : _schemaInfo.isRequired;\n            };\n\n            this.rowNum = function (value) {\n                return value !== undefined ? _schemaInfo.rowNum = value : _schemaInfo.rowNum;\n            };\n\n            this.tipMsg = function (value) {\n                return value !== undefined ? _schemaInfo.tipMsg.push(value) : _schemaInfo.tipMsg;\n            };\n\n            this.checkValues = function (index, value) {\n                return value !== undefined ? _schemaInfo.checkValues[index] = value : _schemaInfo.checkValues;\n            };\n\n            this.schemaInfo = function () {\n                return _schemaInfo;\n            };\n\n            function htmlToString (htmls) {\n                var result = \"\";\n                angular.forEach(htmls, function (html) {\n                    result += \" \" + html + \" \";\n                });\n                return result;\n            }\n        };\n    });","/**\n * @User: Edward\n * @Version: 2.0.0, 2015-12-09\n */\n\nangular.module('voyageone.angular.factories.vpagination', [])\n    .factory('vpagination', function () {\n\n        /**\n         * 创建一个分页服务\n         * @param {{ curr: number, size: number, total: number, fetch: function }} config 配置\n         */\n        return function (config) {\n\n            var _pages, _lastTotal = 0, _showPages = [];\n\n            /**\n             * 返回总件数\n             * @returns {*}\n             */\n            this.getTotal = function () {\n                return config.total;\n            };\n\n            /**\n             * 返回当前页的开始和结束号\n             * @returns {{start: number, end: number}}\n             */\n            this.getCurr = function () {\n                return {\n                    pageNo: curr(),\n                    start: getCurrStartItems(),\n                    end: getCurrEndItems(),\n                    isFirst: isFirst(),\n                    isLast: isLast(),\n                    pages: createShowPages(),\n                    isShowStart: isShowStart(),\n                    isShowEnd: isShowEnd()\n                }\n            };\n\n            // 跳转到指定页\n            this.goPage = load;\n            // 返回总页数\n            this.getPageCount = getPages;\n            // 是否是当前页\n            this.isCurr = isCurr;\n\n            /**\n             * 跳转到指定页\n             * @param {number} page 页号\n             */\n            function load(page) {\n                page = page || config.curr;\n\n                if (page < 1 || page > getPages() || isCurr(page)) return;\n\n                config.curr = page;\n\n                config.fetch(page, config.size);\n            }\n\n            /**\n             * 初始化page列表\n             * @returns {Array}\n             */\n            function createShowPages () {\n\n                var minPage, maxPage, _showPages= [];\n                if (config.curr < config.showPageNo) {\n                    minPage = 1;\n                    if(_pages <= config.showPageNo) maxPage = _pages;\n                    else maxPage = config.showPageNo;\n                } else if (config.curr + 2 > _pages) {\n                    minPage = _pages + 1 - config.showPageNo;\n                    maxPage = _pages;\n                } else {\n                    minPage = config.curr + 3 - config.showPageNo;\n                    maxPage = config.curr + 2;\n                }\n\n                // 按照指定数量创建按钮\n                for (var i =  minPage; i <= maxPage; i++) {\n                    //scope.pages.push({num: 1, active: \"\", show: false});\n                    _showPages.push(i);\n                }\n\n                return _showPages;\n            }\n\n            /**\n             * 获取当前总页数\n             * @returns {number}\n             */\n            function getPages() {\n                if (_lastTotal != config.total) {\n                    _pages = parseInt(config.total / config.size) + ((config.total % config.size) > 0 ? 1 : 0);\n                    _lastTotal = config.total;\n                }\n                return _pages;\n            }\n\n            /**\n             * 返回当前页的起始号\n             * @returns {number}\n             */\n            function getCurrStartItems() {\n                return (config.curr - 1) * config.size + 1\n            }\n\n            /**\n             * 返回当前页的结束号\n             * @returns {number}\n             */\n            function getCurrEndItems() {\n                var currEndItems = config.curr * config.size;\n                return currEndItems <= config.total ? currEndItems : config.total;\n\n            }\n\n            /**\n             * 是否是最后一页\n             * @returns {boolean}\n             */\n            function isLast() {\n                return config.curr == getPages();\n            }\n\n            /**\n             * 是否是第一页\n             * @returns {boolean}\n             */\n            function isFirst() {\n                return config.curr == 1;\n            }\n\n            /**\n             * 是否是当前页\n             * @param page 页码\n             * @returns {boolean}\n             */\n            function isCurr(page) {\n                return config.curr == page;\n            }\n\n            function curr() {\n                return config.curr;\n            }\n\n            /**\n             * 是否显示开始...项目\n             * @returns {boolean}\n             */\n            function isShowStart () {\n                _showPages = createShowPages();\n                return _showPages[0] > 1\n            }\n\n            /**\n             * 是否显示结束...项目\n             * @returns {boolean}\n             */\n            function isShowEnd () {\n                _showPages = createShowPages();\n                return _showPages[_showPages.length - 1] < _pages;\n            }\n\n        };\n    });","/**\n * @description\n *\n * 自动创建基于地址定义的数据访问 service.\n * 传入的定义必须是 {object}, 并且至少有 root 属性\n *\n * @User: Jonas\n * @Date: 2015-12-10 19:32:37\n * @Version: 2.0.0\n */\n\n//@Skip\nangular.module('voyageone.angular.vresources', [])\n  .provider('$vresources', function ($provide) {\n\n    /**\n     * @description 构建请求地址的 url\n     * @param {string} root 请求的根路径\n     * @param {string} action 请求的名称\n     * @returns {string}\n     */\n    function getActionUrl(root, action) {\n      return root + (root.lastIndexOf('/') === root.length - 1 ? '' : '/') + action;\n    }\n\n    /**\n     * 闭包声明一个数据访问的 Service\n     * @param {string} name Service 的名称\n     * @param {object} actions 方法和地址定义\n     * @param {AjaxService} ajaxService 封装的 ajax 发送服务\n     */\n    function closureDataService(name, actions, ajaxService) {\n      /**\n       * @description 与 actions 一同闭包的构造函数\n       * @constructor\n       */\n      function DataResource() {\n        if (!actions) {\n          return;\n        }\n\n        if (typeof actions !== \"object\") {\n          console.log(\"Failed to new DataResource: [\" + actions + \"] is not a object\");\n          return;\n        }\n\n        if (!actions.root) {\n          console.log(\"Failed to new DataResource: no root prop\" + (JSON && JSON.stringify ? \": \" + JSON.stringify(actions) : \"\"));\n          return;\n        }\n\n        // 遍历配置\n        for (var name in actions) {\n          // 不对 root 进行创建\n          if (name === \"root\") continue;\n          // 额外的检查\n          if (actions.hasOwnProperty(name)) {\n            // 闭包创建函数\n            this[name] = (function (actionUrl) {\n              return function (data) {\n                return ajaxService.post(actionUrl, data);\n              };\n            })(getActionUrl(actions.root, actions[name]));\n          }\n        }\n      }\n\n      $provide.service(name, DataResource);\n    }\n\n    this.$get = function (ajaxService) {\n\n      return {\n        register: function (name, actions) {\n\n          if (!actions) return;\n\n          if (typeof actions !== 'object') return;\n\n          // 如果有 root 这个属性,就创建 service\n          if (actions.root) {\n            closureDataService(name, actions, ajaxService);\n            return;\n          }\n\n          // 否则继续访问子属性\n          for (var childName in actions) {\n            // 额外的检查\n            if (actions.hasOwnProperty(childName)) {\n\n              this.register(childName, actions[childName]);\n            }\n          }\n        }\n      };\n    };\n  })\n\n  .run(function ($vresources, $actions) {\n    $vresources.register(null, $actions);\n  });","/**\n * @Date:    2015-11-16 18:48:29\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.ajax', [])\n  .service('$ajax', $Ajax)\n  .service('ajaxService', AjaxService);\n\nfunction $Ajax($http, blockUI, $q) {\n  this.$http = $http;\n  this.blockUI = blockUI;\n  this.$q = $q;\n}\n$Ajax.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n  this.$http.post(url, data).then(function (response) {\n    var res = response.data;\n    if (!res) {\n      alert('相应结果不存在?????');\n      defer.reject(null);\n      return;\n    }\n    if (res.message || res.code) {\n      defer.reject(res);\n      return;\n    }\n    defer.resolve(res);\n  }, function (response) {\n    defer.reject(null, response);\n  });\n  return defer.promise;\n};\n\nfunction AjaxService($q, $ajax, messageService) {\n  this.$q = $q;\n  this.$ajax = $ajax;\n  this.messageService = messageService;\n}\nAjaxService.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n\n  this.$ajax.post(url, data).then(function(res) {\n    // 成功\n    defer.resolve(res);\n    return res;\n  }, (function (_this) {\n    // 失败\n    return function(res) {\n      _this.messageService.show(res);\n      defer.reject(res);\n      return res;\n    };\n  })(this));\n\n  return defer.promise;\n};","/**\n * @Date:    2015-11-16 20:30:37\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.cookie', [])\n  .service('cookieService', CookieService);\n\nvar keys = {\n  language: 'voyageone.user.language',\n  company: 'voyageone.user.company',\n  channel: 'voyageone.user.channel',\n  application: \"voyageone.user.application\",\n};\n\nfunction gentProps(key) {\n  return function(val) {\n    if (arguments.length === 1) {\n      return this.set(key, val);\n    } else if (arguments.length > 1) {\n      return this.set(key, arguments);\n    }\n    return this.get(key);\n  };\n}\n\nfunction CookieService($cookieStore) {\n  this.$cookieStore = $cookieStore;\n}\n\nCookieService.prototype.get = function(key) {\n  var result = this.$cookieStore.get(key);\n  return result == undefined || result == null ? \"\" : this.$cookieStore.get(key);\n};\n\nCookieService.prototype.set = function(key, value) {\n  return this.$cookieStore.put(key, value);\n};\n\nCookieService.prototype.language = gentProps(keys.language);\n\nCookieService.prototype.company = gentProps(keys.company);\n\nCookieService.prototype.channel = gentProps(keys.channel);\n\nCookieService.prototype.application = gentProps(keys.application);\n\nCookieService.prototype.removeAll = function () {\n  this.$cookieStore.remove(keys.language);\n  this.$cookieStore.remove(keys.company);\n  this.$cookieStore.remove(keys.channel);\n  this.$cookieStore.remove(keys.application);\n};\n","/**\n * 对后台的信息进行自动处理\n * @Date:    2015-11-19 14:47:23\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.message', [])\n  .service('messageService', MessageService);\n\n// 同步,DisplayType 枚举\nvar DISPLAY_TYPES = {\n  /**\n   * 弹出提示\n   */\n  ALERT: 1,\n  /**\n   * 顶端弹出自动关闭\n   */\n  NOTIFY: 2,\n  /**\n   * 右下弹出自动关闭\n   */\n  POP: 3,\n  /**\n   * 用户自定义处理\n   */\n  CUSTOM: 4\n};\n\nfunction MessageService(alert, confirm, notify) {\n  this.alert = alert;\n  this.confirm = confirm;\n  this.notify = notify;\n}\n\nMessageService.prototype = {\n  /**\n   * 根据类型自动显示信息\n   * @param {{displayType:Number, message:String}} res\n   */\n  show: function(res) {\n\n    var displayType = res.displayType;\n    var message = res.message;\n\n    switch (displayType) {\n      case DISPLAY_TYPES.ALERT:\n        this.alert(message);\n        break;\n      case DISPLAY_TYPES.NOTIFY:\n        this.notify(message);\n        break;\n      case DISPLAY_TYPES.POP:\n        this.notify({message: message, position: 'right bottom'});\n        break;\n    }\n  }\n};","/**\n * @Date:    2015-11-19 14:26:43\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.permission', [])\n  .service('permissionService', PermissionService);\n\nfunction PermissionService($rootScope) {\n  this.$rootScope = $rootScope;\n  this.permissions = [];\n}\n\nPermissionService.prototype = {\n  /**\n   * set the action permissions.\n   * @param permissions\n   */\n  setPermissions: function(permissions) {\n    this.permissions = permissions;\n    this.$rootScope.$broadcast('permissionsChanged');\n  },\n  /**\n   * check the permission has been in action permissions.\n   * @param permission\n   * @returns {boolean|*}\n   */\n  has: function(permission) {\n    return _.contains(this.permissions, permission.trim());\n  }\n};\n","/**\n * @Date:    2015-11-19 14:35:25\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.translate', [])\n  .service('translateService', TranslateService);\n\nfunction TranslateService($translate) {\n  this.$translate = $translate;\n}\n\nTranslateService.prototype = {\n  languages: {\n    en: \"en\",\n    zh: \"zh\"\n  },\n  /**\n   * set the web side language type.\n   * @param key\n   */\n  setLanguage: function(language) {\n    if (!_.contains(this.languages, language)) {\n      language = this.getBrowserLanguage();\n    }\n    this.$translate.use(language);\n    return language;\n  },\n  /**\n   * get the browser language type.\n   * @returns {string}\n   */\n  getBrowserLanguage: function() {\n    var currentLang = navigator.language;\n    if (!currentLang)\n      currentLang = navigator.browserLanguage;\n    return currentLang.substr(0, 2);\n  }\n};\n"],"sourceRoot":"components/angular"}