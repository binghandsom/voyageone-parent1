{"version":3,"sources":["voyageone.angular.com.js","directives/dateModelFormat.directive.js","directives/enterClick.directive.js","directives/filestyle.directive.js","directives/ifNoRows.directive.js","directives/navigation.directive.js","directives/schema.directive.js","directives/voption.directive.js","directives/vpagination.directive.js","directives/vvalidator.directive.js","controllers/datePicker.ctrl.js","controllers/selectRows.ctrl.js","controllers/showPopover.ctrl.js","factories/dialogs.factory.js","factories/interceptor.factory.js","factories/notify.factory.js","factories/pppAutoImpl.factory.js","factories/schema.factory.js","factories/selectRows.factory.js","factories/vpagination.factory.js","providers/vresources.js","services/ajax.service.js","services/cookie.service.js","services/message.service.js","services/permission.service.js","services/translate.service.js"],"names":["define","angular","module","directive","$filter","restrict","require","link","scope","elem","attrs","ngModel","$parsers","push","viewValue","dateModelFormat","attr","element","on","e","keyCode","selectExp","enterClick","targetElem","handler","triggerHandler","document","querySelector","$eval","controller","$scope","$element","options","data","classInput","filestyle","$templateCache","$compile","tempNoDataKey","get","put","replace","$$data","$parent","$watch","find","remove","append","el","_window","$","window","_mb","wrap","next","backdrop","trigger","_this","this","parent","siblings","toggleClass","is","preventDefault","width","removeClass","length","target","top","w_h","height","offset","min","closest","addClass","position","css","appendTo","off","insertAfter","constant","INPUT","DATE","DATETIME","TEXTAREA","SINGLE_CHECK","RADIO","MULTI_INPUT","MULTI_CHECK","COMPLEX","MULTI_COMPLEX","LABEL","VALUE_TYPE_RULE","REQUIRED_RULE","DISABLE_RULE","READ_ONLY_RULE","REGEX_RULE","SET_RULE","TIP_RULE","DEV_TIP_RULE","MIN_LENGTH_RULE","MAX_LENGTH_RULE","MIN_VALUE_RULE","MAX_VALUE_RULE","MIN_INPUT_NUM_RULE","MAX_INPUT_NUM_RULE","MIN_DECIMAL_DIGITS_RULE","MAX_DECIMAL_DIGITS_RULE","MIN_TARGET_SIZE_RULE","MAX_TARGET_SIZE_RULE","MIN_IMAGE_SIZE_RULE","MAX_IMAGE_SIZE_RULE","TEXT","DECIMAL","INTEGER","LONG","TIME","URL","HTML","schemaHeaderFactory","fieldTypes","ruleTypes","valueTypes","templateKey_header","transclude","templateUrl","schemaHeader","_returnType","type","_operateRule","rules","showHtmlData","copy","schemaHearInfo","addField","newFieldMap","forEach","fields","field","id","complexValues","fieldMap","isMultiComplex","isComplex","rule","name","_requiredRule","_tipRule","requiredRule","value","isRequired","tipRule","tipMsg","schemaFactory","templateKey_label","templateKey_input","templateKey_date","templateKey_datetime","templateKey_textarea","templateKey_select","templateKey_radio","templateKey_checkbox","templateKey_multiComplex","templateKey_complex","templateKey_multi_in_complex","templateKey_multiComplex_tip","bindToController","controllerAs","$$hastip","$$complex","$$notShowEdit","ctrl","refresh","schema","vm","$$from","notShowEdit","undefined","tempHtml","html","schemaInfo","checkboxValue","_","contains","checkValues","splice","indexOf","values","obj","isSelected","delField","index","_setCheckValues","_resetMultiComplex","_resetComplex","tempValues","tempFieldMap","tempField","complexValue","isEmpty","defaultComplexValue","_valueTypeRule","_disableRule","_readOnlyRule","_regexRule","_minLengthRule","_maxLengthRule","_minValueRule","_maxValueRule","_minInputNumRule","_maxInputNumRule","valueTypeRule","rowNum","disableRule","dependGroup","readOnlyRule","regexRule","minLengthRule","isNaN","parseInt","exProperty","unit","maxLengthRule","minValueRule","parseFloat","maxValueRule","minInputNumRule","maxInputNumRule","typeList","vpagination","templateKey","templateKeyNoData","defConfig","curr","total","size","showPageNo","$$configNameForA","$$configNameForE","userConfigName","userConfig","userWithDefConfig","extend","config","p","goPage","num","Number","isCurr","totalPages","getPageCount","totalItems","getTotal","getCurr","elm","maxlength","$observe","intVal","$validate","$validators","modelValue","$isEmpty","getByteLength","byteLen","len","i","charCodeAt","minlength","maxvalue","test","Date","minvalue","maxinputnum","mininputnum","formats","formatDate","formatDateTime","open","$event","stopPropagation","opened","selectAll","selectOne","isAllSelected","objectList","selAllFlag","currPageRows","object","selFlag","hasOwnProperty","tempList","pluck","selList","currentId","isEqual","showInfo","factory","$modal","templateName","template","tran","translationId","isObject","content","title","modalInstance","close","dismiss","ok","$dialogs","isAlert","vConfirm","UNKNOWN_CODE","CODE_SYS_REDIRECT","MSG_TIMEOUT","autoRedirect","res","code","location","href","redirectTo","sessionTimeout","unknownException","response","$$lastUnknow","console","error","message","request","result","requestError","responseError","$httpProvider","interceptors","notify","isString","success","className","warning","danger","$q","declares","viewBaseUrl","jsBaseUrl","$$$","impl","declarePopupMethods","popupBaseKey","each","declare","parentDir","popupKey","isArray","clone","pathBase","controllerUrl","getControllerName","context","resolve","defer","promise","key","m","m1","toUpperCase","toLowerCase","SchemaHeaderFactory","prototype","SchemaFactory","_schemaInfo","join","_selectRowsInfo","clearCurrPageRows","selectRowsInfo","_pages","_lastTotal","_showPages","pageNo","start","getCurrStartItems","end","getCurrEndItems","isFirst","isLast","pages","createShowPages","isShowStart","isShowEnd","load","getPages","page","fetch","minPage","maxPage","currEndItems","provider","$provide","getActionUrl","root","action","lastIndexOf","closureDataService","actions","ajaxService","DataResource","log","JSON","stringify","actionUrl","post","service","$get","register","childName","run","$vresources","$actions","$Ajax","$inject","AjaxService","$http","blockUI","url","then","alert","reject","$ajax","messageService","show","CookieService","keys","language","company","channel","application","gentProps","val","arguments","set","$cookieStore","removeAll","MessageService","DISPLAY_TYPES","ALERT","NOTIFY","POP","CUSTOM","confirm","displayType","PermissionService","$rootScope","permissions","setPermissions","$broadcast","has","permission","trim","TranslateService","$translate","languages","en","zh","setLanguage","getBrowserLanguage","use","currentLang","navigator","browserLanguage","substr"],"mappings":"AAAAA,OAAA;ECMAC,QAAQC,OAAO,oDACVC,UAAU,qBAAA,WAAmB,SAAUC;IACpC;MACIC,UAAU;MACVC,SAAS;MACTC,MAAM,SAAUC,OAAOC,MAAMC,OAAOC;QAChCA,QAAQC,SAASC,KAAK,SAAUC;UAC5B,OAAOV,QAAQ,QAAQU,WAAWJ,MAAMK,mBAAmB;;;;;ECP/Ed,QAAQC,OAAO,+CACVC,UAAU,cAAc;IACrB;MACIE,UAAU;MACVE,MAAM,SAAUC,OAAOC,MAAMO;QAEzBf,QAAQgB,QAAQR,MAAMS,GAAG,SAAS,SAAUC;UAExC,IAAIA,EAAEC,YAAY,IAAI;UAEtB,IAAIC,YAAYL,KAAKM;UAErB,IAAIC,YAAYC,UAAU;YACtBD,WAAWE,eAAe;;UAG9B;YACIF,aAAaG,SAASC,cAAcN;YACtC,OAAOF;YACLI,aAAa;;UAGjB,KAAKA,YAAY;YAEbC,UAAU;cACNhB,MAAMoB,MAAMP;;iBAEb;YACHE,aAAatB,QAAQgB,QAAQM;YAE7B,IAAIA,WAAWP,KAAK,aAAa;;UAGrCQ;;;;;EC/BpBvB,QAAQC,OAAO,8CACZC,UAAU,aAAa;IACtB;MACEE,UAAU;MACVwB,cAAa,UAAU,YAAY,SAAUC,QAAQC;QACnD,IAAIC,UAAUD,SAASE;QAEvBD,QAAQE,aAAaH,SAASE,KAAK,iBAAiBD,QAAQE;QAC5D,IAAIH,SAASI,WAAW;UACtBJ,SAASI,UAAUH;;;;;ECV7B/B,QAAQC,OAAO,6CACVC,UAAU,cAAA,kBAAA,YAAY,SAAUiC,gBAAgBC;IAE7C,IAAIC,gBAAgB;IAGpB,KAAKF,eAAeG,IAAID,gBAAgB;MACpCF,eAAeI,IAAIF,eACnB,oDACA,yGACA,sCACA;;IAGJ;MACIjC,UAAU;MACVoC,SAAS;MACTjC;QACIkC,QAAQ;;MAEZnC,MAAM,SAAUC,OAAOS;QAEnBT,MAAMmC,QAAQC,OAAOpC,MAAMkC,QAAQ;UAG/B,IAAGlC,MAAMmC,QAAQf,MAAMpB,MAAMkC,WAAY,GAAG;YACxCzB,QAAQ4B,KAAK,WAAWC;YACxB7B,QAAQ8B,OAAOV,SAASD,eAAeG,IAAID,gBAAgB9B;iBACxD;YACHS,QAAQ4B,KAAK,WAAWC;;;;;;EC7BhD7C,QAAQC,OAAO,0CACVC,UAAU,SAAS;IAEhB;MACIE,UAAU;MACVE,MAAM,SAASC,OAAOwC;QAClB,IAAIC,UAAUC,EAAEC,SACZC,MAAM,KACNC,OAAOH,EAAE,eACTI,MACAC,WAAW;QAEfP,GAAG9B,GAAG,SAAS,KAAK,SAASC;UACzBmC,QAAQA,KAAKE,QAAQ;UACrB,IAAIC,QAAQP,EAAEQ;UACdD,MAAME,SAASC,SAAU,WAAYC,YAAY;UACjDJ,MAAMH,OAAOQ,GAAG,SAAUL,MAAME,SAASE,YAAY,aAAc1C,EAAE4C;UAErEN,MAAMH,OAAOQ,GAAG,SAAab,QAAQe,UAAUZ,OAASF,EAAE,cAAce,YAAY;;QAIxFjB,GAAG9B,GAAG,cAAc,KAAK,SAASC;UAC9BmC,QAAQA,KAAKE,QAAQ;UACrBN,EAAE,UAAUG,MAAMP;UAClB,KAAMI,EAAE,qCAAqCgB,UAAYjB,QAAQe,UAAUZ,OAASF,EAAE,mBAAmBgB,QAAQ;UACjH,IAAIT,QAAQP,EAAE/B,EAAEgD,SACVC,KACAC,MAAMnB,EAAEC,QAAQmB,UAChBC,SAAS,IACTC,MAAM;WAEXf,MAAMK,GAAG,SAASL,QAAQA,MAAMgB,QAAQ;UACzC,IAAIhB,MAAMH,OAAOQ,GAAG,OAAO;YACvBR,OAAOG,MAAMH;iBACZ;YACD;;UAGJG,MAAME,SAASe,SAAS;UACxBN,MAAMX,MAAME,SAASgB,WAAWP,MAAMG;UACtCjB,KAAKsB,IAAI,OAAOR;UAChB,IAAIA,MAAMd,KAAKgB,WAAWD,KAAK;YAC3Bf,KAAKsB,IAAI,UAAU;;UAEvB,IAAGR,MAAMI,MAAMH,KAAI;YACff,KAAKsB,IAAI,UAAUP,MAAMD,MAAMG,QAAQK,IAAI,OAAO;;UAEtDtB,KAAKuB,SAASxB;UAEdC,KAAKpC,GAAG,kBAAkB,SAASC;YAC/B+B,EAAEK,UAAUT;YACZQ,KAAKuB,SAASpB,MAAME;YACpBL,KAAKwB,IAAI,kBAAkBF,IAAI,OAAO,QAAQA,IAAI,UAAU;YAC5DnB,MAAME,SAASM,YAAY;;UAG/Bf,EAAE,UAAUgB,UAAUhB,EAAE,oCAAoC6B,YAAY,cAAc7D,GAAG,SAAS,SAASoC;YACvGA,QAAQA,KAAKE,QAAQ;;;QAK7BH,KAAKnC,GAAG,cAAc,SAASC;UAC3BmC,QAAQA,KAAKE,QAAQ;UACrBN,EAAE,UAAUG,MAAMP;;;;;ECjEtC7C,QAAQC,OAAO,2CAEV8E,SAAS;IACNC,OAAO;IACPC,MAAM;IACNC,UAAU;IACVC,UAAU;IACVC,cAAc;IACdC,OAAO;IACPC,aAAa;IACbC,aAAa;IACbC,SAAS;IACTC,eAAe;IACfC,OAAO;KAGVX,SAAS;IACNY,iBAAiB;IACjBC,eAAe;IACfC,cAAc;IACdC,gBAAgB;IAChBC,YAAY;IACZC,UAAU;IACVC,UAAU;IACVC,cAAc;IACdC,iBAAiB;IACjBC,iBAAiB;IACjBC,gBAAgB;IAChBC,gBAAgB;IAChBC,oBAAoB;IACpBC,oBAAoB;IACpBC,yBAAyB;IACzBC,yBAAyB;IACzBC,sBAAsB;IACtBC,sBAAsB;IACtBC,qBAAqB;IACrBC,qBAAqB;KAGxB/B,SAAS;IACNgC,MAAM;IACNC,SAAS;IACTC,SAAS;IACTC,MAAM;IACNjC,MAAM;IACNkC,MAAM;IACNC,KAAK;IACLjC,UAAU;IACVkC,MAAM;KAGTnH,UAAU,kBAAA,kBAAA,uBAAA,cAAA,aAAA,cAAgB,SAAUiC,gBAAgBmF,qBAAqBC,YAAYC,WAAWC;IAG7F,IAAIC,qBAAqB;IACzB,KAAKvF,eAAeG,IAAIoF,qBAAqB;MACzCvF,eAAeI,IAAImF,oBAEf,6BACA,+HACA,qJACA,+LACA,iLACA;;IAGR;MACItH,UAAU;MACVoC,SAAS;MACTmF,YAAY;MACZC,aAAaF;MACbnH;QACIkC,QAAQ;;MAEZnC,MAAM,SAAUC;QAEZ,IAAIsH,eAAe,IAAIP;QAEvBQ,YAAYvH,MAAMkC,OAAOsF;QACzBC,aAAazH,MAAMkC,OAAOwF;QAE1B1H,MAAM2H,eAAelI,QAAQmI,KAAKN,aAAaO;QAM/C7H,MAAM8H,WAAW,SAAUrG;UACvB,IAAIsG;UACJtI,QAAQuI,QAAQvG,KAAKwG,QAAQ,SAAUC;YACnCH,YAAYG,MAAMC,MAAMD;;UAI5BzG,KAAK2G,cAAc/H;YAAMgI,UAAU5I,QAAQmI,KAAKG;;;QASpD,SAASR,YAAYC;UAEjB,QAAQA;WACJ,KAAKR,WAAW9B;YACZoC,aAAagB,eAAe;YAC5B;;WACJ,KAAKtB,WAAW/B;YACZqC,aAAaiB,UAAU;YACvB;;;QASZ,SAASd,aAAaC;UAClBjI,QAAQuI,QAAQN,OAAO,SAAUc;YAC7B,QAAQA,KAAKC;aACT,KAAKxB,UAAU5B;cACXqD,cAAcF;cACd;;aACJ,KAAKvB,UAAUvB;cACXiD,SAASH;cACT;;;;QAWhB,SAASE,cAAcE;UACnB,IAAI,UAAUA,aAAaC,OAAO;YAC9BvB,aAAawB,WAAW;;;QAShC,SAASH,SAASI;UACdzB,aAAa0B,OAAOD,QAAQF;;;;OAM3ClJ,UAAU,gBAAA,kBAAA,YAAA,iBAAA,cAAA,aAAA,cAAc,SAAUiC,gBAAgBC,UAAUoH,eAAejC,YAAYC,WAAWC;IAG/F,IAAIgC,oBAAoB;IACxB,KAAKtH,eAAeG,IAAImH,oBAAoB;MACxCtH,eAAeI,IAAIkH,mBACf;;IAIR,IAAIC,oBAAoB;IACxB,KAAKvH,eAAeG,IAAIoH,oBAAoB;MACxCvH,eAAeI,IAAImH,mBACf;;IAIR,IAAIC,mBAAmB;IACvB,KAAKxH,eAAeG,IAAIqH,mBAAmB;MACvCxH,eAAeI,IAAIoH,kBACf;;IAIR,IAAIC,uBAAuB;IAC3B,KAAKzH,eAAeG,IAAIsH,uBAAuB;MAC3CzH,eAAeI,IAAIqH,sBACf;;IAIR,IAAIC,uBAAuB;IAC3B,KAAK1H,eAAeG,IAAIuH,uBAAuB;MAC3C1H,eAAeI,IAAIsH,sBACf;;IAIR,IAAIC,qBAAqB;IACzB,KAAK3H,eAAeG,IAAIwH,qBAAqB;MACzC3H,eAAeI,IAAIuH,oBACf;;IAIR,IAAIC,oBAAoB;IACxB,KAAK5H,eAAeG,IAAIyH,oBAAoB;MACxC5H,eAAeI,IAAIwH,mBACf;;IAIR,IAAIC,uBAAuB;IAC3B,KAAK7H,eAAeG,IAAI0H,uBAAuB;MAC3C7H,eAAeI,IAAIyH,sBACf;;IAIR,IAAIC,2BAA2B;IAC/B,KAAK9H,eAAeG,IAAI2H,2BAA2B;MAC/C9H,eAAeI,IAAI0H,0BACf,sCACA,gBAEA,sKACA,oHACA,kBACA,6DACA,6NACA,uNACA,kBACA;;IAIR,IAAIC,sBAAsB;IAC1B,KAAK/H,eAAeG,IAAI4H,sBAAsB;MAC1C/H,eAAeI,IAAI2H,qBACf;;IAIR,IAAIC,+BAA+B;IACnC,KAAKhI,eAAeG,IAAI6H,+BAA+B;MACnDhI,eAAeI,IAAI4H,8BACf;;IAIR,IAAIC,+BAA+B;IACnC,KAAKjI,eAAeG,IAAI8H,+BAA+B;MACnDjI,eAAeI,IAAI6H,8BACf;;IAGR;MACIhK,UAAU;MACVC,WAAU;MACVmC,SAAS;MACT6H,kBAAkB;MAClBC,cAAc;MACd1I,YAAY;MAEZrB;QACIkC,QAAQ;QACR8H,UAAU;QACVC,WAAW;QACXC,eAAe;;MAEnBnK,MAAM,SAAUC,OAAOS,SAAS0J,MAAM3J;QAGlCR,MAAMoC,OAAO,aAAa;UACtBgI;;QAGJ,SAASA;UAEL,IAAIC,SAAS,IAAIpB;UACjBjJ,MAAMsK,GAAGC,SAASJ;UAGlBE,OAAO5B,KAAKzI,MAAMsK,GAAGpI,OAAOiG;UAG5BkC,OAAOG,YAAYxK,MAAMsK,GAAGJ,iBAAiBO,YAAY,QAAQzK,MAAMsK,GAAGJ;UAE1E3C,YAAYvH,MAAMsK,GAAGpI,OAAOsF;UAC5BC,aAAazH,MAAMsK,GAAGpI,OAAOwF;UAE7B,IAAIgD,WAAW;UAEf,QAAQL,OAAO7C;WACX,KAAKR,WAAWvC;YACZiG,WAAW9I,eAAeG,IAAIoH,mBAAmBlH,QAAQ,eAAeoI,OAAOM;YAC/E;;WACJ,KAAK3D,WAAWtC;YACZgG,WAAW9I,eAAeG,IAAIqH,kBAAkBnH,QAAQ,eAAeoI,OAAOM,QAAQ1I,QAAQ,eAAeoI,OAAOM;YACpH;;WACJ,KAAK3D,WAAWrC;YACZ+F,WAAW9I,eAAeG,IAAIsH,sBAAsBpH,QAAQ,eAAeoI,OAAOM,QAAQ1I,QAAQ,eAAeoI,OAAOM;YACxH;;WACJ,KAAK3D,WAAWpC;YACZ8F,WAAW9I,eAAeG,IAAIuH,sBAAsBrH,QAAQ,eAAeoI,OAAOM;YAClF;;WACJ,KAAK3D,WAAWnC;YACZ6F,WAAW9I,eAAeG,IAAIwH,oBAAoBtH,QAAQ,eAAeoI,OAAOM;YAChF;;WACJ,KAAK3D,WAAWlC;YACZ4F,WAAW9I,eAAeG,IAAIyH,mBAAmBvH,QAAQ,eAAeoI,OAAOM;YAC/E;;WACJ,KAAK3D,WAAWhC;YACZ0F,WAAW9I,eAAeG,IAAI0H,sBAAsBxH,QAAQ,eAAeoI,OAAOM;YAClF;;WACJ,KAAK3D,WAAW7B;YACZuF,WAAW9I,eAAeG,IAAImH;YAC9B;;WACJ,KAAKlC,WAAW9B;YACZwF,WAAW9I,eAAeG,IAAI2H;YAC9B;;WACJ,KAAK1C,WAAW/B;YACZyF,WAAW1K,MAAMsK,GAAGL,YAAYrI,eAAeG,IAAI6H,gCAAgChI,eAAeG,IAAI4H;YACtG;;UAIR,IAAIU,OAAOrB,YAAY,QAAQhJ,MAAMsK,GAAGN,UAAU;YAC9CU,YAAY9I,eAAeG,IAAI8H;;UAInCa,WAAW,cAAcA,WAAW;UAEpC1K,MAAM2H,eAAelI,QAAQmI,KAAKyC,OAAOO;UACzCnK,QAAQkK,KAAK9I,SAAS6I,UAAU1K;UAMhCA,MAAM6K,gBAAgB,SAAUhC;YAC5B,IAAIiC,EAAEC,SAAS/K,MAAM2H,aAAaqD,aAAanC,QAAQ;cACnD7I,MAAM2H,aAAaqD,YAAYC,OAAOH,EAAEI,QAAQlL,MAAM2H,aAAaqD,aAAanC,QAAQ;mBACrF;cACH7I,MAAM2H,aAAaqD,YAAY3K,KAAKwI;;YAExC7I,MAAMsK,GAAGpI,OAAOiJ;YAChB1L,QAAQuI,QAAQhI,MAAM2H,aAAaqD,aAAa,SAAUI;cACtDpL,MAAMsK,GAAGpI,OAAOiJ,OAAO9K;gBAAM8H,IAAI;gBAAMU,OAAOuC;;;;UAQtDpL,MAAMqL,aAAa,SAAUxC;YACzB,OAAOiC,EAAEC,SAAS/K,MAAM2H,aAAaqD,aAAanC;;UAOtD7I,MAAMsL,WAAW,SAAUC;YACvBvL,MAAMsK,GAAGpI,OAAOkG,cAAc6C,OAAOM,OAAO;;UAShD,SAAShE,YAAYC;YACjB6C,OAAO7C,KAAKA;YACZ,QAAQA;aACJ,KAAKR,WAAWlC;cACZ,IAAI9E,MAAMsK,GAAGL,WACTI,OAAO7C,KAAKR,WAAWnC;cAC3B;;aACJ,KAAKmC,WAAWhC;cACZwG,gBAAgBxL,MAAMsK,GAAGpI,OAAOiJ;cAChC;;aACJ,KAAKnE,WAAW9B;cACZlF,MAAMsK,GAAGpI,OAAOkG,gBAAgBqD,mBAAmBzL,MAAMsK,GAAGpI;cAC5D;;aACJ,KAAK8E,WAAW/B;cACZyG,cAAc1L,MAAMsK,GAAGpI;cACvB;;;UASZ,SAASsJ,gBAAgBL;YACrB,IAAIA,UAAUV,aAAaU,UAAU,MAAM;cACvC1L,QAAQuI,QAAQmD,QAAQ,SAAUC;gBAC9Bf,OAAOW,YAAYI,IAAIvC;;;;UAUnC,SAAS4C,mBAAmBhK;YACxB,IAAIkK;YACJlM,QAAQuI,QAAQvG,KAAK2G,eAAe,SAAUS;cAC1C,IAAI+C;cACJnM,QAAQuI,QAAQvG,KAAKwG,QAAQ,SAAUC;gBACnC,IAAI2D,YAAYpM,QAAQmI,KAAKM;gBAC7B,IAAIW,MAAMR,SAASH,MAAMC,OAAOsC,WAAW;kBACvC,QAAQvC,MAAMV;mBACV,KAAKR,WAAWvC;mBAChB,KAAKuC,WAAW7B;mBAChB,KAAK6B,WAAWtC;mBAChB,KAAKsC,WAAWrC;mBAChB,KAAKqC,WAAWpC;mBAChB,KAAKoC,WAAWnC;mBAChB,KAAKmC,WAAWlC;oBACZ+G,UAAUhD,QAAQA,MAAMR,SAASH,MAAMC,IAAIU;oBAC3C;;mBACJ,KAAK7B,WAAWjC;mBAChB,KAAKiC,WAAWhC;oBACZ6G,UAAUV,SAAStC,MAAMR,SAASH,MAAMC,IAAIgD;oBAC5C;;mBACJ,KAAKnE,WAAW/B;oBACZ4G,UAAUC,eAAejD,MAAMR,SAASH,MAAMC,IAAI2D;oBAClD;;mBACJ,KAAK9E,WAAW9B;oBACZ2G,UAAUzD,gBAAgBS,MAAMR,SAASH,MAAMC,IAAIC;oBACnD;;;gBAGZwD,aAAa1D,MAAMC,MAAM0D;;cAE7BF,WAAWtL;gBAAMgI,UAAU5I,QAAQmI,KAAKgE;;;YAI5C,IAAId,EAAEiB,QAAQtK,KAAK2G,gBAAgB;cAC/B,IAAIL;cACJtI,QAAQuI,QAAQvG,KAAKwG,QAAQ,SAAUC;gBACnCH,YAAYG,MAAMC,MAAMD;;cAI5ByD,WAAWtL;gBAAMgI,UAAU5I,QAAQmI,KAAKG;;;YAG5C,OAAO4D;;UAQX,SAASD,cAAcjK;YACnBhC,QAAQuI,QAAQvG,KAAKwG,QAAQ,SAAUC;cACnC,QAAQA,MAAMV;eACV,KAAKR,WAAWvC;eAChB,KAAKuC,WAAW7B;eAChB,KAAK6B,WAAWtC;eAChB,KAAKsC,WAAWrC;eAChB,KAAKqC,WAAWpC;eAChB,KAAKoC,WAAWnC;eAChB,KAAKmC,WAAWlC;gBACZ,KAAKgG,EAAEiB,QAAQtK,KAAKqK,aAAazD,WAC7BH,MAAMW,QAAQpH,KAAKqK,aAAazD,SAASH,MAAMC,IAAIU,YAEnDX,MAAMW,QAAQpH,KAAKuK,oBAAoB3D,SAASH,MAAMC,IAAIU;gBAC9D;;eACJ,KAAK7B,WAAWjC;eAChB,KAAKiC,WAAWhC;gBACZ,KAAK8F,EAAEiB,QAAQtK,KAAKqK,aAAazD,WAC7BH,MAAMiD,SAAS1J,KAAKqK,aAAazD,SAASH,MAAMC,IAAIgD,aAEpDjD,MAAMiD,SAAS1J,KAAKuK,oBAAoB3D,SAASH,MAAMC,IAAIgD;gBAC/D;;eACJ,KAAKnE,WAAW/B;gBACZ,KAAK6F,EAAEiB,QAAQtK,KAAKqK,aAAazD,WAC7BH,MAAM4D,eAAerK,KAAKqK,aAAazD,SAASH,MAAMC,IAAI2D,mBAE1D5D,MAAM4D,eAAerK,KAAKuK,oBAAoB3D,SAASH,MAAMC,IAAI2D;gBACrE;;eACJ,KAAK9E,WAAW9B;gBACZ,KAAK4F,EAAEiB,QAAQtK,KAAKqK,aAAazD,WAC7BH,MAAME,gBAAgB3G,KAAKqK,aAAazD,SAASH,MAAMC,IAAIC,oBAE3DF,MAAME,gBAAgB3G,KAAKuK,oBAAoB3D,SAASH,MAAMC,IAAIC;gBACtE;;;;UAUhB,SAASX,aAAaC;YAClBjI,QAAQuI,QAAQN,OAAO,SAAUc;cAC7B,QAAQA,KAAKC;eACT,KAAKxB,UAAU7B;gBACX6G,eAAezD;gBACf;;eACJ,KAAKvB,UAAU5B;gBACXqD,cAAcF;gBACd;;eACJ,KAAKvB,UAAU3B;gBACX4G,aAAa1D;gBACb;;eACJ,KAAKvB,UAAU1B;gBACX4G,cAAc3D;gBACd;;eACJ,KAAKvB,UAAUzB;gBACX4G,WAAW5D;gBACX;;eACJ,KAAKvB,UAAUvB;gBACXiD,SAASH;gBACT;;eACJ,KAAKvB,UAAUrB;gBACXyG,eAAe7D;gBACf;;eACJ,KAAKvB,UAAUpB;gBACXyG,eAAe9D;gBACf;;eACJ,KAAKvB,UAAUnB;gBACXyG,cAAc/D;gBACd;;eACJ,KAAKvB,UAAUlB;gBACXyG,cAAchE;gBACd;;eACJ,KAAKvB,UAAUjB;gBACXyG,iBAAiBjE;gBACjB;;eACJ,KAAKvB,UAAUhB;gBACXyG,iBAAiBlE;gBACjB;;;;UAUhB,SAASyD,eAAeU;YACpB,QAAQA,cAAc9D;aAClB,KAAK3B,WAAWV;aAChB,KAAKU,WAAWT;aAChB,KAAKS,WAAWR;aAChB,KAAKQ,WAAWP;cACZ0D,OAAO7C,KAAKR,WAAWvC;cACvB4F,OAAOM,KAAK;cACZ;;aACJ,KAAKzD,WAAWxC;cACZ2F,OAAO7C,KAAKR,WAAWtC;cACvB;;aACJ,KAAKwC,WAAWN;cACZyD,OAAO7C,KAAKR,WAAWrC;cACvB;;aACJ,KAAKuC,WAAWL;cACZwD,OAAO7C,KAAKR,WAAWvC;cACvB4F,OAAOM,KAAK;cACZ;;aACJ,KAAKzD,WAAWtC;cACZyF,OAAO7C,KAAKR,WAAWpC;cACvByF,OAAOuC,OAAO;cACd;;aACJ,KAAK1F,WAAWJ;cACZuD,OAAO7C,KAAKR,WAAWpC;cACvByF,OAAOuC,OAAO;cACd;;;UASZ,SAASlE,cAAcE;YACnB,IAAI,UAAUA,aAAaC,OAAO;cAC9BwB,OAAOvB,WAAW;cAClBuB,OAAOM,KAAK;;;UASpB,SAASuB,aAAaW;YAClB,IAAI,UAAUA,YAAYhE,SACnBgE,YAAYC,eAAe,MAAM;cACpCzC,OAAOM,KAAK;;;UASpB,SAASwB,cAAcY;YACnB,IAAI,UAAUA,aAAalE,OAAO;cAC9BwB,OAAOM,KAAK;;;UASpB,SAASyB,WAAWY;YAChB3C,OAAOM,KAAK,kBAAmBqC,UAAUnE,QAAQ;;UAQrD,SAASF,SAASI;YACdsB,OAAOrB,OAAOD,QAAQF;;UAQ1B,SAASwD,eAAeY;YACpB,IAAIpE,QAAQqE,MAAMC,SAASF,cAAcpE,UAAU,IAAIoE,cAAcpE;YAErE,IAAI,kBAAkBoE,cAAcG,YAChCvE,QAASA,QAAQ,IAAKA,QAAQ,IAAI;YAEtC,IAAI,eAAeoE,cAAcI,MAC7BhD,OAAOM,KAAK,mBAAoB9B,QAAQ,WAExCwB,OAAOM,KAAK,wBAAyB9B,QAAQ;;UAQrD,SAASyD,eAAegB;YACpB,IAAIzE,QAAQqE,MAAMC,SAASG,cAAczE,UAAU,IAAIyE,cAAczE;YAErE,IAAI,kBAAkByE,cAAcF,YAChCvE,QAASA,QAAQ,IAAKA,QAAQ,IAAI;YAEtC,IAAI,eAAeyE,cAAcD,MAC7BhD,OAAOM,KAAK,mBAAoB9B,QAAQ,WAExCwB,OAAOM,KAAK,wBAAyB9B,QAAQ;;UAQrD,SAAS0D,cAAcgB;YACnB,IAAI1E,QAAQqE,MAAMM,WAAWD,aAAa1E,UAAU,IAAI2E,WAAWD,aAAa1E;YAEhF,IAAI,kBAAkB0E,aAAaH,YAC/BvE,QAASA,QAAQ,IAAKA,QAAQ,MAAO;YAEzCwB,OAAOM,KAAK,kBAAmB9B,QAAQ;;UAQ3C,SAAS2D,cAAciB;YACnB,IAAI5E,QAAQqE,MAAMM,WAAWC,aAAa5E,UAAU,IAAI2E,WAAWC,aAAa5E;YAEhF,IAAI,kBAAkB4E,aAAaL,YAC/BvE,QAASA,QAAQ,IAAKA,QAAQ,MAAO;YAEzCwB,OAAOM,KAAK,kBAAmB9B,QAAQ;;UAS3C,SAAS4D,iBAAiBiB;YACtB,IAAI7E,QAAQqE,MAAMC,SAASO,gBAAgB7E,UAAU,IAAIsE,SAASO,gBAAgB7E;YAElF,IAAI,kBAAkB6E,gBAAgBN,YAClCvE,QAASA,QAAQ,IAAKA,QAAQ,IAAI;YAEtCwB,OAAOM,KAAK,qBAAsB9B,QAAQ;;UAQ9C,SAAS6D,iBAAiBiB;YACtB,IAAI9E,QAAQqE,MAAMC,SAASQ,gBAAgB9E,UAAU,IAAIsE,SAASQ,gBAAgB9E;YAElF,IAAI,kBAAkB8E,gBAAgBP,YAClCvE,QAASA,QAAQ,IAAKA,QAAQ,IAAI;YAEtCwB,OAAOM,KAAK,qBAAsB9B,QAAQ;;;;;;ECptBlEpJ,QAAQC,OAAO,4CACVC,UAAU,aAAA,kBAAA,YAAW,SAAUiC,gBAAgBC;IAE5C,IAAI0H,qBAAqB;IAGzB,KAAK3H,eAAeG,IAAIwH,qBAAqB;MACzC3H,eAAeI,IAAIuH,oBACf;;IAGR;MACI1J,UAAU;MACVoC,SAAS;MACTjC;QACIkC,QAAQ;;MAEZnC,MAAM,SAAUC,OAAOS;QAGnB,IAAImN;UACA/I,cAAc;;QAIlB7E,MAAMoC,OAAO,UAAU;UACnBgI;WACD;QAKH,SAASA;UACL,IAAIM;UACJ,QAAQ1K,MAAMkC,OAAOsF;WACjB,KAAKoG,SAAS/I;YACV6F,WAAW7I,SAASD,eAAeG,IAAIwH,qBAAqBvJ;YAC5D;;UAERS,QAAQkK,KAAKD;;;;;ECvCjCjL,QAAQC,OAAO,gDACVC,UAAU,iBAAA,kBAAA,YAAA,eAAe,SAAUiC,gBAAgBC,UAAUgM;IAE1D,IAAIC,cAAc;IAClB,IAAIC,oBAAoB;IAGxB,KAAKnM,eAAeG,IAAI+L,cAAc;MAClClM,eAAeI,IAAI8L,aACf,6BACA,sNACA,+HACA,iBACA,aACA,yCACA,oNACA,aACA,0DACA,+GACA,qKACA,mLACA,0FACA,6KACA,wFACA,iLACA,2KACA,gBACA;;IAIR,KAAKlM,eAAeG,IAAIgM,oBAAoB;MACxCnM,eAAeI,IAAI+L,mBACf,yDACA,+KACA;;IAGR,IAAIC;MAAaC,MAAM;MAAGC,OAAO;MAAGC,MAAM;MAAIC,YAAW;;IAEzD;MACIvO,UAAU;MAEVoC,SAAS;MACTjC;QACIqO,kBAAkB;QAClBC,kBAAkB;;MAEtBvO,MAAM,SAAUC,OAAOS;QAGnB,IAAI8N,iBAAiBvO,MAAMqO,oBAAoBrO,MAAMsO;QACrD,IAAIE,aAAaxO,MAAMmC,QAAQf,MAAMmN;QAGrC,IAAIE,oBAAoBhP,QAAQiP,WAAWV,WAAWQ;QACtDxO,MAAM2O,SAASlP,QAAQiP,OAAOF,YAAYC;QAE1C,IAAIG,IAAI,IAAIf,YAAY7N,MAAM2O;QAG9B3O,MAAMmC,QAAQC,OAAOmM,gBAAgB;UACjCnE;WACD;QAMHpK,MAAM6O,SAAS,SAAUC;UACrBF,EAAEC,OAAO3B,MAAM6B,OAAOD,QAAQ,IAAIC,OAAOD;;QAQ7C9O,MAAMgP,SAAS,SAAUF;UACrB,OAAOF,EAAEI,OAAOF;;QAGpB,SAAS1E;UAGLpK,MAAMiP,aAAaL,EAAEM;UAErBlP,MAAMmP,aAAaP,EAAEQ;UAErBpP,MAAMiO,OAAOW,EAAES;UAGf,IAAI3E;UACJ,IAAGkE,EAAEQ,cAAc,GAAG;YAClB1E,WAAW7I,SAASD,eAAeG,IAAIgM,oBAAoB/N;iBACxD;YACH0K,WAAW7I,SAASD,eAAeG,IAAI+L,cAAc9N;;UAEzDS,QAAQkK,KAAKD;;;;;EClGjCjL,QAAQC,OAAO,8CAGVC,UAAU,mBAAmB;IAE1B;MACIE,UAAU;MACVC,SAAS;MACTC,MAAM,SAASC,OAAOsP,KAAK9O,MAAM2J;QAC7B,KAAKA,MAAM;QAEX,IAAIoF,aAAa;QACjB/O,KAAKgP,SAAS,mBAAmB,SAAS3G;UACtC,IAAI4G,SAAUtC,SAAStE;UACvB0G,YAAYrC,MAAMuC,WAAW,IAAIA;UACjCtF,KAAKuF;;QAETvF,KAAKwF,YAAYJ,YAAY,SAASK,YAAYtP;UAC9C,OAAQiP,YAAY,KAAMpF,KAAK0F,SAASvP,cAAewP,cAAcxP,cAAciP;;;;IAU/F,SAASO,cAAcjH;MACnB,IAAIkH,UAAU,GAAEC,MAAMnH,MAAMnF;MAC5B,IAAGmF,OAAM;QACL,KAAI,IAAIoH,IAAI,GAAGA,IAAED,KAAKC,KAAI;UACtB,IAAGpH,MAAMqH,WAAWD,KAAG,KAAI;YACvBF,WAAW;iBAEX;YACAA;;;QAGR,OAAOA;aAEP;QACA,OAAO;;;KAMlBpQ,UAAU,mBAAmB;IAE1B;MACIE,UAAU;MACVC,SAAS;MACTC,MAAM,SAASC,OAAOsP,KAAK9O,MAAM2J;QAC7B,KAAKA,MAAM;QAEX,IAAIgG,aAAa;QACjB3P,KAAKgP,SAAS,mBAAmB,SAAS3G;UACtC,IAAI4G,SAAUtC,SAAStE;UACvBsH,YAAYjD,MAAMuC,WAAW,IAAIA;UACjCtF,KAAKuF;;QAETvF,KAAKwF,YAAYQ,YAAY,SAASP,YAAYtP;UAC9C,OAAQ6P,YAAY,KAAMhG,KAAK0F,SAASvP,cAAewP,cAAcxP,cAAc6P;;;;IAU/F,SAASL,cAAcjH;MACnB,IAAIkH,UAAU,GAAEC,MAAMnH,MAAMnF;MAC5B,IAAGmF,OAAM;QACL,KAAI,IAAIoH,IAAI,GAAGA,IAAED,KAAKC,KAAI;UACtB,IAAGpH,MAAMqH,WAAWD,KAAG,KAAI;YACvBF,WAAW;iBAEX;YACAA;;;QAGR,OAAOA;aAEP;QACA,OAAO;;;KAMlBpQ,UAAU,cAAc;IACrB;MACIE,UAAU;MACVC,SAAS;MACTC,MAAM,SAAUC,OAAOsP,KAAK9O,MAAM2J;QAC9B,KAAKA,MAAM;QAEX,IAAIiG,YAAY;QAChB5P,KAAKgP,SAAS,cAAc,SAAS3G;UACjC,IAAG,kCAAkCwH,KAAKxH,QACtCuH,WAAW,IAAIE,KAAKzH,aACnB,IAAI,yBAAyBwH,KAAKxH,QACnCuH,WAAWlD,MAAMM,WAAW3E,WAAW,IAAI2E,WAAW3E,aACrD,IAAI,UAAUwH,KAAKxH,QACpBuH,WAAWlD,MAAMC,SAAStE,WAAW,IAAIsE,SAAStE,aAElDuH,YAAY;UAChBjG,KAAKuF;;QAETvF,KAAKwF,YAAYS,WAAW,SAASR,YAAYtP;UAC7C,OAAQ8P,WAAW,KAAMjG,KAAK0F,SAASvP,cAAeA,aAAa8P;;;;KAOlFzQ,UAAU,cAAc;IACrB;MACIE,UAAU;MACVC,SAAS;MACTC,MAAM,SAAUC,OAAOsP,KAAK9O,MAAM2J;QAC9B,KAAKA,MAAM;QAEX,IAAIoG,YAAY;QAChB/P,KAAKgP,SAAS,cAAc,SAAS3G;UACjC,IAAG,kCAAkCwH,KAAKxH,QACtC0H,WAAW,IAAID,KAAKzH,aACnB,IAAI,yBAAyBwH,KAAKxH,QACnC0H,WAAWrD,MAAMM,WAAW3E,WAAW,IAAI2E,WAAW3E,aACrD,IAAI,UAAUwH,KAAKxH,QACpB0H,WAAWrD,MAAMC,SAAStE,WAAW,IAAIsE,SAAStE,aAElD0H,YAAY;UAChBpG,KAAKuF;;QAETvF,KAAKwF,YAAYY,WAAW,SAASX,YAAYtP;UAC7C,OAAQiQ,WAAW,KAAMpG,KAAK0F,SAASvP,cAAeA,aAAaiQ;;;;KAOlF5Q,UAAU,iBAAiB;IACxB;MACIE,UAAU;MACVC,SAAS;MACTC,MAAM,SAAUC,OAAOsP,KAAK9O,MAAM2J;QAC9B,KAAKA,MAAM;QAEX,IAAIiG,YAAY;QAChB5P,KAAKgP,SAAS,mBAAmB,SAAS3G;UACtCuH,WAAWlD,MAAMC,SAAStE,WAAW,IAAIsE,SAAStE;UAClDsB,KAAKuF;;QAETvF,KAAKwF,YAAYa,cAAc,SAASZ,YAAYtP;UAChD,OAAQ8P,WAAW,KAAMjG,KAAK0F,SAASvP,cAAeA,UAAUoD,UAAU0M;;;;KAOzFzQ,UAAU,iBAAiB;IACxB;MACIE,UAAU;MACVC,SAAS;MACTC,MAAM,SAAUC,OAAOsP,KAAK9O,MAAM2J;QAC9B,KAAKA,MAAM;QAEX,IAAIoG,YAAY;QAChB/P,KAAKgP,SAAS,iBAAiB,SAAS3G;UACpC0H,WAAWrD,MAAMC,SAAStE,WAAW,IAAIsE,SAAStE;UAClDsB,KAAKuF;;QAETvF,KAAKwF,YAAYc,cAAc,SAASb,YAAYtP;UAChD,OAAQiQ,WAAW,KAAMpG,KAAK0F,SAASvP,cAAeA,UAAUoD,UAAU6M;;;;;ECpL9F9Q,QAAQC,OAAO,gDACV2B,WAAW,oBAAA,UAAkB,SAAUC;IACpC,IAAIgJ,KAAKpH;IAEToH,GAAGoG,YAAW,cAAc;IAE5BpP,OAAOqP,aAAarG,GAAGoG,QAAQ;IAC/BpP,OAAOsP,iBAAiBtG,GAAGoG,QAAQ;IAEnCpP,OAAOuP,OAAOA;IAEd,SAASA,KAAKC;MACVA,OAAOvN;MACPuN,OAAOC;MAEPzP,OAAO0P,SAAS;;;ECf5BvR,QAAQC,OAAO,gDACV2B,WAAW,oBAAA,UAAkB,SAAUC;IAEpCA,OAAO2P,YAAYA;IACnB3P,OAAO4P,YAAYA;IACnB5P,OAAO6P,gBAAgBA;IAMvB,SAASF,UAAUG,YAAYjJ;MAE3BiJ,WAAWC,cAAcD,WAAWC;MACpC,KAAIlJ,IAAG;QACHA,KAAG;;MAIP1I,QAAQuI,QAAQoJ,WAAWE,cAAc,SAAUC;QAG/CH,WAAWI,QAAQD,OAAOpJ,OAAOiJ,WAAWC;QAE5C,IAAID,WAAWK,eAAe,YAAY;UAEtC,IAAIC,WAAW5G,EAAE6G,MAAMP,WAAWQ,SAASzJ;UAC3C,IAAIiJ,WAAWC,cAAcK,SAASxG,QAAQqG,OAAOpJ,OAAO,GAAG;YAC3DiJ,WAAWQ,QAAQvR,KAAKkR;iBACrB,KAAKH,WAAWC,cAAcK,SAASxG,QAAQqG,OAAOpJ,QAAQ,GAAG;YACpEiJ,WAAWQ,QAAQ3G,OAAOyG,SAASxG,QAAQqG,OAAOpJ,MAAM;;;;;IAWxE,SAAS+I,UAAUW,WAAWT,YAAYjJ;MACtC,KAAIA,IAAG;QACHA,KAAG;;MAEP,IAAIiJ,WAAWK,eAAe,YAAY;QAEtChS,QAAQuI,QAAQoJ,WAAWE,cAAc,SAASC;UAE9C,IAAIG,WAAW5G,EAAE6G,MAAMP,WAAWQ,SAASzJ;UAC3C,IAAI2C,EAAEgH,QAAQP,OAAOpJ,KAAK0J,YAAY;YAClC,IAAIH,SAASxG,QAAQqG,OAAOpJ,QAAQ,GAAG;cACnCiJ,WAAWQ,QAAQ3G,OAAOyG,SAASxG,QAAQqG,OAAOpJ,MAAM;mBACrD;cACHiJ,WAAWQ,QAAQvR,KAAKkR;;;;;MAMxCH,WAAWC,aAAa;MACxBK,WAAW5G,EAAE6G,MAAMP,WAAWQ,SAASzJ;MACvC1I,QAAQuI,QAAQoJ,WAAWE,cAAc,SAASC;QAC9C,IAAIG,SAASxG,QAAQqG,OAAOpJ,SAAS,GAAG;UACpCiJ,WAAWC,aAAa;;;;IAUpC,SAASF,cAAeC,YAAYjJ;MAChC,KAAIA,IAAG;QACHA,KAAG;;MAGP,IAAIiJ,cAAc3G,WAAW;QAEzB2G,WAAWC,aAAa;QACxB,IAAIK,WAAW5G,EAAE6G,MAAMP,WAAWQ,SAASzJ;QAC3C1I,QAAQuI,QAAQoJ,WAAWE,cAAc,SAASC;UAC9C,IAAIG,SAASxG,QAAQqG,OAAOpJ,SAAS,GAAG;YACpCiJ,WAAWC,aAAa;;;QAGhC,OAAOD,WAAWC;;MAGtB,OAAO;;;EC3FnB5R,QAAQC,OAAO,iDACV2B,WAAW,qBAAA,UAAmB,SAAUC;IAErCA,OAAOyQ,WAAWA;IAElB,SAASA,SAAS5G;MACd,IAAIT,WAAW;MAEfjL,QAAQuI,QAAQmD,QAAQ,SAAU1J,MAAM8J;QACpCb,YAAYjJ;QACZ,IAAI8J,UAAUJ,OAAOzH,QAAQ;UACzBgH,YAAY;;;MAGpB,OAAOA;;;ECfnBjL,QAAQC,OAAO,2CACVsS,QAAQ,cAAA,UAAA,WAAA,kBAAY,SAAUC,QAAQrS,SAASgC;IAE5C,IAAIsQ,eAAe;IACnB,IAAIC,WACA,2BACI,+BACI,oGACI,mFACJ,cACA,uDACJ,WACA,wCACI,sBACI,4FACJ,WACJ,WACA,+BACI,gHACA,mFACJ,WACJ;IACJvQ,eAAeI,IAAIkQ,cAAcC;IAEjC,SAASC,KAAKC,eAAelH;MACzB,OAAOvL,QAAQ,aAAayS,eAAelH;;IAG/C,OAAO,SAAU3J;MAEb,KAAKsJ,EAAEwH,SAAS9Q,UAAU,MAAM;MAEhC,IAAI2J;MAEJ,IAAIL,EAAEwH,SAAS9Q,QAAQ+Q,UAAU;QAC7BpH,SAAS3J,QAAQ+Q,QAAQpH;QACzB3J,QAAQ+Q,UAAU/Q,QAAQ+Q,QAAQpK;;MAGtC3G,QAAQgR,QAAQJ,KAAK5Q,QAAQgR;MAC7BhR,QAAQ+Q,UAAUH,KAAK5Q,QAAQ+Q,SAASpH;MAExC,IAAIsH,gBAAgBR,OAAOpB;QACvBxJ,aAAa6K;QACb7Q,cAAa,UAAU,SAAUrB;UAC7B8K,EAAE4D,OAAO1O,OAAOwB;;QAEpB2M,MAAM;;MAGV3M,QAAQkR,QAAQ;QACZD,cAAcE,QAAQ;;MAG1BnR,QAAQoR,KAAK;QACTH,cAAcC,MAAM;;MAGxB,OAAOD;;OAIdT,QAAQ,WAAA,YAAS,SAAUa;IACxB,OAAO,SAAUN,SAASC;MACtB,OAAOK;QACHL,OAAOA,SAAS;QAChBD,SAASA;QACTO,SAAS;;;OAKpBd,QAAQ,aAAA,YAAW,SAASe,SAASF;IAClC,OAAO,SAAUN,SAASC;MACtB,OAAOK;QACHL,OAAOA,SAAS;QAChBD,SAASA;QACTO,SAAS;;;;EC7EzBrT,QAAQC,OAAO,+CACVsS,QAAQ,sBAAsB;IAG3B,IAAIgB,eAAe;IAEnB,IAAIC,oBAAoB;IAExB,IAAIC,cAAc;IAOlB,SAASC,aAAaC;MAClB,IAAIA,IAAIC,QAAQJ,mBAAmB;QAC/B,OAAO;;MAGXK,SAASC,OAAOH,IAAII,cAAc;MAClC,OAAO;;IAQX,SAASC,eAAeL;MACpB,IAAIA,IAAIC,QAAQH,aAAa;QACzB,OAAO;;MAGXI,SAASC,OAAO;MAChB,OAAO;;IAOX,SAASG,iBAAiBC;MAEtB,IAAIA,SAASlS,KAAK4R,SAASL,cAAc;QACrC;;MAGJrQ,OAAOiR,eAAeD;MACtBE,QAAQC,MAAM,2CAA2CH,SAASlS,KAAKsS;;IAG3E;MACIC,SAAS,SAAUrF;QACf,OAAOA;;MAOXgF,UAAU,SAAUP;QAChB,IAAIa,SAASb,IAAI3R;QAGjB,IAAI0R,aAAac,WAAWR,eAAeQ,SAAS;UAChD,OAAOb;;QAGXM,iBAAiBN;QAEjB,OAAOA;;MAEXc,cAAc,SAAUvF;QACpB,OAAOA;;MAEXwF,eAAe,SAAUf;;KAIhCzE,SAAA,iBAAO,SAAUyF;IACdA,cAAcC,aAAahU,KAAK;;ECjDxCZ,QAAQC,OAAO,0CAEVsS,QAAQ,YAAA,WAAU,SAAUpS;IAQzB,SAAS0U,OAAO9S;MAEZ,KAAKA,SAAS;MACd,IAAIsJ,EAAEyJ,SAAS/S,UAAUA;QAAWuS,SAASvS;;MAC7C,KAAKsJ,EAAEwH,SAAS9Q,UAAU;MAE1B,IAAI2J;MAGJ,IAAIL,EAAEwH,SAAS9Q,QAAQuS,UAAU;QAE7B5I,SAAS3J,QAAQuS,QAAQ5I;QACzB3J,QAAQuS,UAAUvS,QAAQuS,QAAQ5L;;MAGtC3G,QAAQuS,UAAUnU,QAAQ,aAAa4B,QAAQuS,SAAS5I;MAExD,OAAOzI,EAAE4R,OAAO9S,QAAQuS,SAASvS;;IAGrC8S,OAAOE,UAAU,SAAUT;MACvB,OAAOO;QAAQP,SAASA;QAASU,WAAW;;;IAGhDH,OAAOI,UAAU,SAAUX;MACvB,OAAOO;QAAQP,SAASA;QAASU,WAAW;;;IAGhDH,OAAOK,SAAS,SAAUZ;MACtB,OAAOO;QAAQP,SAASA;QAASU,WAAW;;;IAGhD,OAAOH;;ECxEf7U,QAAQC,OAAO,+CACVsS,QAAQ,iBAAA,MAAA,UAAe,SAAU4C,IAAI3C;IAClC,OAAO,SAAU4C,UAAUC,aAAaC;MACpC,KAAKF,SAASG,QAAQH,SAASG,IAAIC,MAC/BJ,SAASG;QACLC,MAAMC,oBAAoBL,UAAUC,aAAaC,WAAW;;MAEpE,OAAOF,SAASG,IAAIC;;IAGxB,SAASC,oBAAoBL,UAAUC,aAAaC,WAAWI;MAC3D,IAAIF;MACJ,IAAIE,cAAcA,gBAAgB;MAClCrK,EAAEsK,KAAKP,UAAU,SAAUQ,SAASC;QAChC,KAAKD,QAAQE,UAAU;UACnB,IAAIzK,EAAEwH,SAAS+C,YAAYvK,EAAE0K,QAAQH,UAAUvK,EAAE4D,OAAOuG,MACpDC,oBAAoBG,SAChBP,aAAaC,WAAWI,eAAeG,WACvCV,IAAI3C;UACZ;;QAGJ,IAAIzQ,UAAUsJ,EAAE2K,MAAMJ,QAAQ7T;QAE9B,IAAIkU,WAAW,MAAMP;QACrB,IAAIrK,EAAEyJ,SAASe,YAAYI,YAAYJ,YAAY;QACnDI,YAAYL,QAAQE;QAEpB/T,QAAQ6F,cAAcyN,cAAcY,WAAW;QAC/ClU,QAAQmU,gBAAgBZ,YAAYW,WAAW;QAE/C,IAAIL,QAAQtL,gBAAgBsL,QAAQhU,YAChCG,QAAQH,aAAauU,kBAAkBP,QAAQE;QACnD,IAAIF,QAAQtL,cACRvI,QAAQH,cAAc,UAAUyJ,EAAEyJ,SAASc,QAAQtL,gBAAgBsL,QAAQtL,eAAe;QAE9FkL,KAAKI,QAAQE,YAAY,SAAUM;UAC/B,IAAIA,SAASrU,QAAQsU;YACjBD,SAAS;cACL,OAAOA;;;UAIf,IAAIE,QAAQnB,GAAGmB;UACfjW,UAAS0B,QAAQmU,iBAAgB;YAC7BI,MAAMD,QAAQ7D,OAAOpB,KAAKrP,SAASyS;;UAEvC,OAAO8B,MAAMC;;;MAGrB,OAAOf;;IAGX,SAASW,kBAAkBK;MACvB,OAAOA,IACEhU,QAAQ,WAAW,SAAUiU,GAAGC;QAC7B,OAAOA,GAAGC;SAEbnU,QAAQ,SAAS,SAAUiU,GAAGC;QAC3B,OAAOA,GAAGE;WACT;;;EC9DzB5W,QAAQC,OAAO,0CAGVsS,QAAQ,uBAAuB;IAE5B,SAASsE,oBAAoB3H;MACzBzL,KAAK2E,iBAAiB8G;QACd7F,YAAY;QAEZR,gBAAgB;QAChBC,WAAW;QACXS;;;IAIZsN,oBAAoBC;MAEhBzN,YAAY,SAAUD;QAClB,OAAOA,UAAU4B,YAAYvH,KAAK2E,eAAeiB,aAAaD,QAAQ3F,KAAK2E,eAAeiB;;MAG9FP,WAAW,SAAUM;QACjB,OAAOA,UAAU4B,YAAYvH,KAAK2E,eAAeU,YAAYM,QAAQ3F,KAAK2E,eAAeU;;MAG7FD,gBAAgB,SAAUO;QACtB,OAAOA,UAAU4B,YAAYvH,KAAK2E,eAAeS,iBAAiBO,QAAQ3F,KAAK2E,eAAeS;;MAGlGU,QAAQ,SAAUH;QACd,OAAOA,UAAU4B,YAAYvH,KAAK2E,eAAemB,OAAO3I,KAAKwI,SAAS3F,KAAK2E,eAAemB;;;IAQlG,OAAOsN;KAIVtE,QAAQ,iBAAiB;IAEtB,SAASwE,cAAc7H;MACnBzL,KAAKuT,cAAc9H;QACXnH,MAAM;QACNiB,MAAM;QACNmE,QAAQ;QACR9D,YAAY;QACZkC;QACAhC;QACA2B;QACAH,aAAa;;;IAIzBgM,cAAcD;MAEV/O,MAAM,SAAUqB;QACZ,OAAOA,UAAU4B,YAAYvH,KAAKuT,YAAYjP,OAAOqB,QAAQ3F,KAAKuT,YAAYjP;;MAElFiB,MAAM,SAAUI;QACZ,OAAOA,UAAU4B,YAAYvH,KAAKuT,YAAYhO,OAAOI,QAAQ3F,KAAKuT,YAAYhO;;MAElFkC,MAAM,SAAU9B;QACZ,OAAOA,UAAU4B,YAAYvH,KAAKuT,YAAY9L,KAAKtK,KAAKwI,SAAS3F,KAAKuT,YAAY9L,KAAK+L,KAAK;;MAEhG5N,YAAY,SAAUD;QAClB,OAAOA,UAAU4B,YAAYvH,KAAKuT,YAAY3N,aAAaD,QAAQ3F,KAAKuT,YAAY3N;;MAExF8D,QAAQ,SAAU/D;QACd,OAAOA,UAAU4B,YAAYvH,KAAKuT,YAAY7J,SAAS/D,QAAQ3F,KAAKuT,YAAY7J;;MAEpF5D,QAAQ,SAAUH;QACd,OAAOA,UAAU4B,YAAYvH,KAAKuT,YAAYzN,OAAO3I,KAAKwI,SAAS3F,KAAKuT,YAAYzN;;MAExFgC,aAAa,SAAUnC;QACnB,OAAOA,UAAU4B,YAAYvH,KAAKuT,YAAYzL,YAAY3K,KAAKwI,SAAS3F,KAAKuT,YAAYzL;;MAE7FR,aAAa,SAAU3B;QACnB,OAAOA,UAAU4B,YAAYvH,KAAKuT,YAAYjM,cAAc3B,QAAQ3F,KAAKuT,YAAYjM;;MAEzFI,YAAY;QACR,OAAO1H,KAAKuT;;;IAIpB,OAAOD;;ECvFf/W,QAAQC,OAAO,8CAGVsS,QAAQ,qBAAqB;IAC1B,OAAO,SAAUrD;MACb,IAAIgI,kBAAkBhI,SAASA;QAC3B0C,YAAY;QACZC;QACAE;QACAI;;MAGJ1O,KAAKmO,aAAa,SAAUxI;QACxB,OAAOA,UAAU4B,YAAYkM,gBAAgBtF,aAAaxI,QAAQ8N,gBAAgBtF;;MAGtFnO,KAAK0T,oBAAoB;QACrBD,gBAAgBrF;;MAGpBpO,KAAKoO,eAAe,SAAUzI;QAC1B,OAAOA,UAAU4B,YAAYkM,gBAAgBrF,aAAajR,KAAKwI,SAAS8N,gBAAgBrF;;MAG5FpO,KAAKsO,UAAU,SAAU3I;QACrB,OAAOA,UAAU4B,YAAYkM,gBAAgBnF,QAAQnR,KAAKwI,SAAS8N,gBAAgBnF;;MAGvFtO,KAAK0O,UAAU,SAAU/I;QACrB,OAAOA,UAAU4B,YAAYkM,gBAAgB/E,QAAQvR,KAAKwI,SAAS8N,gBAAgB/E;;MAGvF1O,KAAK2T,iBAAiBF;;;EClClClX,QAAQC,OAAO,+CACVsS,QAAQ,eAAe;IAMpB,OAAO,SAAUrD;MAEb,IAAImI,QAAQC,aAAa,GAAGC;MAM5B9T,KAAKkM,WAAW;QACZ,OAAOT,OAAOT;;MAOlBhL,KAAKmM,UAAU;QACX;UACI4H,QAAQhJ;UACRiJ,OAAOC;UACPC,KAAKC;UACLC,SAASA;UACTC,QAAQA;UACRC,OAAOC;UACPC,aAAaA;UACbC,WAAWA;;;MAKnBzU,KAAK2L,SAAS+I;MAEd1U,KAAKgM,eAAe2I;MAEpB3U,KAAK8L,SAASA;MAMd,SAAS4I,KAAKE;QACVA,OAAOA,QAAQnJ,OAAOV;QAEtB,IAAI6J,OAAO,KAAKA,OAAOD,cAAc7I,OAAO8I,OAAO;QAEnDnJ,OAAOV,OAAO6J;QAEdnJ,OAAOoJ,MAAMD,MAAMnJ,OAAOR;;MAO9B,SAASsJ;QAEL,IAAIO,SAASC,SAASjB;QACtB,IAAIrI,OAAOV,OAAOU,OAAOP,YAAY;UACjC4J,UAAU;UACV,IAAGlB,UAAUnI,OAAOP,YAAY6J,UAAUnB,aACrCmB,UAAUtJ,OAAOP;eACnB,IAAIO,OAAOV,OAAO,IAAI6I,QAAQ;UACjCkB,UAAUlB,SAAS,IAAInI,OAAOP;UAC9B6J,UAAUnB;eACP;UACHkB,UAAUrJ,OAAOV,OAAO,IAAIU,OAAOP;UACnC6J,UAAUtJ,OAAOV,OAAO;;QAI5B,KAAK,IAAIgC,IAAK+H,SAAS/H,KAAKgI,SAAShI,KAAK;UAEtC+G,WAAW3W,KAAK4P;;QAGpB,OAAO+G;;MAOX,SAASa;QACL,IAAId,cAAcpI,OAAOT,OAAO;UAC5B4I,SAAS3J,SAASwB,OAAOT,QAAQS,OAAOR,SAAUQ,OAAOT,QAAQS,OAAOR,OAAQ,IAAI,IAAI;UACxF4I,aAAapI,OAAOT;;QAExB,OAAO4I;;MAOX,SAASK;QACL,QAAQxI,OAAOV,OAAO,KAAKU,OAAOR,OAAO;;MAO7C,SAASkJ;QACL,IAAIa,eAAevJ,OAAOV,OAAOU,OAAOR;QACxC,OAAO+J,gBAAgBvJ,OAAOT,QAAQgK,eAAevJ,OAAOT;;MAQhE,SAASqJ;QACL,OAAO5I,OAAOV,QAAQ4J;;MAO1B,SAASP;QACL,OAAO3I,OAAOV,QAAQ;;MAQ1B,SAASe,OAAO8I;QACZ,OAAOnJ,OAAOV,QAAQ6J;;MAG1B,SAAS7J;QACL,OAAOU,OAAOV;;MAOlB,SAASyJ;QACLV,aAAaS;QACb,OAAOT,WAAW,KAAK;;MAO3B,SAASW;QACLX,aAAaS;QACb,OAAOT,WAAWA,WAAWtT,SAAS,KAAKoT;;;;ECxJ3DrX,QAAQC,OAAO,oCACZyY,SAAS,iBAAA,YAAe,SAAUC;IAQjC,SAASC,aAAaC,MAAMC;MAC1B,OAAOD,QAAQA,KAAKE,YAAY,SAASF,KAAK5U,SAAS,IAAI,KAAK,OAAO6U;;IASzE,SAASE,mBAAmBhQ,MAAMiQ,SAASC;MAKzC,SAASC;QACP,KAAKF,SAAS;UACZ;;QAGF,WAAWA,YAAY,UAAU;UAC/B7E,QAAQgF,IAAI,kCAAkCH,UAAU;UACxD;;QAGF,KAAKA,QAAQJ,MAAM;UACjBzE,QAAQgF,IAAI,8CAA8CC,QAAQA,KAAKC,YAAY,OAAOD,KAAKC,UAAUL,WAAW;UACpH;;QAIF,KAAK,IAAIjQ,QAAQiQ,SAAS;UAExB,IAAIjQ,SAAS,QAAQ;UAErB,IAAIiQ,QAAQjH,eAAehJ,OAAO;YAEhCvF,KAAKuF,QAAQ,SAAWuQ;cACtB,OAAO,SAAUvX;gBACf,OAAOkX,YAAYM,KAAKD,WAAWvX;;cAEpC4W,aAAaK,QAAQJ,MAAMI,QAAQjQ;;;;MAK5C2P,SAASc,QAAQzQ,MAAMmQ;;IAGzB1V,KAAKiW,SAAA,eAAO,SAAUR;MAEpB;QACES,UAAU,SAAU3Q,MAAMiQ;UAExB,KAAKA,SAAS;UAEd,WAAWA,YAAY,UAAU;UAGjC,IAAIA,QAAQJ,MAAM;YAChBG,mBAAmBhQ,MAAMiQ,SAASC;YAClC;;UAIF,KAAK,IAAIU,aAAaX,SAAS;YAE7B,IAAIA,QAAQjH,eAAe4H,YAAY;cAErCnW,KAAKkW,SAASC,WAAWX,QAAQW;;;;;;OAQ5CC,MAAA,eAAA,YAAI,SAAUC,aAAaC;IAC1BD,YAAYH,SAAS,MAAMI;;EpB6jE/BC,MAAMC,YAAW,SAAS,WAAW;EACrCC,YAAYD,YAAW,MAAM,SAAS;EqB3pEtCja,QAAQC,OAAO,uCACZwZ,QAAQ,SAASO,OACjBP,QAAQ,eAAeS;EAE1B,SAASF,MAAMG,OAAOC,SAASjF;IAC7B1R,KAAK0W,QAAQA;IACb1W,KAAK2W,UAAUA;IACf3W,KAAK0R,KAAKA;;EAEZ6E,MAAMlD,UAAU0C,OAAO,SAAUa,KAAKrY;IAEpC,IAAIsU,QAAQ7S,KAAK0R,GAAGmB;IACpB7S,KAAK0W,MAAMX,KAAKa,KAAKrY,MAAMsY,KAAK,SAAUpG;MACxC,IAAIP,MAAMO,SAASlS;MACnB,KAAK2R,KAAK;QACR4G,MAAM;QACNjE,MAAMkE,OAAO;QACb;;MAEF,IAAI7G,IAAIW,WAAWX,IAAIC,MAAM;QAC3B0C,MAAMkE,OAAO7G;QACb;;MAEF2C,MAAMD,QAAQ1C;OACb,SAAUO;MACXoC,MAAMkE,OAAO,MAAMtG;;IAErB,OAAOoC,MAAMC;;EAGf,SAAS2D,YAAY/E,IAAIsF,OAAOC;IAC9BjX,KAAK0R,KAAKA;IACV1R,KAAKgX,QAAQA;IACbhX,KAAKiX,iBAAiBA;;EAExBR,YAAYpD,UAAU0C,OAAO,SAAUa,KAAKrY;IAE1C,IAAIsU,QAAQ7S,KAAK0R,GAAGmB;IAEpB7S,KAAKgX,MAAMjB,KAAKa,KAAKrY,MAAMsY,KAAK,SAAS3G;MAEvC2C,MAAMD,QAAQ1C;MACd,OAAOA;OACN,SAAWnQ;MAEZ,OAAO,SAASmQ;QACdnQ,MAAMkX,eAAeC,KAAKhH;QAC1B2C,MAAMkE,OAAO7G;QACb,OAAOA;;MAERlQ;IAEH,OAAO6S,MAAMC;;ErBoqEfqE,cAAcX,YAAW;EsBxtEzBja,QAAQC,OAAO,yCACVwZ,QAAQ,iBAAiBmB;EAE9B,IAAIC;IACAC,UAAU;IACVC,SAAS;IACTC,SAAS;IACTC,aAAa;;EAGjB,SAASC,UAAU1E;IACf,OAAO,SAAU2E;MACb,IAAIC,UAAUnX,WAAW,GAAG;QACxB,OAAOR,KAAK4X,IAAI7E,KAAK2E;aAClB,IAAIC,UAAUnX,SAAS,GAAG;QAC7B,OAAOR,KAAK4X,IAAI7E,KAAK4E;;MAEzB,OAAO3X,KAAKnB,IAAIkU;;;EAIxB,SAASoE,cAAcU;IACnB7X,KAAK6X,eAAeA;;EAGxBV,cAAc9D,UAAUxU,MAAM,SAAUkU;IACpC,IAAIhC,SAAS/Q,KAAK6X,aAAahZ,IAAIkU;IACnC,OAAOhC,UAAUxJ,aAAawJ,UAAU,OAAO,KAAK/Q,KAAK6X,aAAahZ,IAAIkU;;EAG9EoE,cAAc9D,UAAUuE,MAAM,SAAU7E,KAAKpN;IACzC,OAAO3F,KAAK6X,aAAa/Y,IAAIiU,KAAKpN;;EAGtCwR,cAAc9D,UAAUgE,WAAWI,UAAUL,KAAKC;EAElDF,cAAc9D,UAAUiE,UAAUG,UAAUL,KAAKE;EAEjDH,cAAc9D,UAAUkE,UAAUE,UAAUL,KAAKG;EAEjDJ,cAAc9D,UAAUmE,cAAcC,UAAUL,KAAKI;EAErDL,cAAc9D,UAAUyE,YAAY;IAChC9X,KAAK6X,aAAazY,OAAOgY,KAAKC;IAC9BrX,KAAK6X,aAAazY,OAAOgY,KAAKE;IAC9BtX,KAAK6X,aAAazY,OAAOgY,KAAKG;IAC9BvX,KAAK6X,aAAazY,OAAOgY,KAAKI;;EtBmuElCO,eAAevB,YAAW,SAAS,WAAW;EuBhxE9Cja,QAAQC,OAAO,0CACZwZ,QAAQ,kBAAkB+B;EAG7B,IAAIC;IAIFC,OAAO;IAIPC,QAAQ;IAIRC,KAAK;IAILC,QAAQ;;EAGV,SAASL,eAAejB,OAAOuB,SAASjH;IACtCpR,KAAK8W,QAAQA;IACb9W,KAAKqY,UAAUA;IACfrY,KAAKoR,SAASA;;EAGhB2G,eAAe1E;IAKb6D,MAAM,SAAShH;MAEb,IAAIoI,cAAcpI,IAAIoI;MACtB,IAAIzH,UAAUX,IAAIW;MAElB,QAAQyH;OACN,KAAKN,cAAcC;QACjBjY,KAAK8W,MAAMjG;QACX;;OACF,KAAKmH,cAAcE;QACjBlY,KAAKoR,OAAOP;QACZ;;OACF,KAAKmH,cAAcG;QACjBnY,KAAKoR;UAAQP,SAASA;UAAS5P,UAAU;;QACzC;;;;EvB2xERsX,kBAAkB/B,YAAW;EwB50E7Bja,QAAQC,OAAO,6CACZwZ,QAAQ,qBAAqBuC;EAEhC,SAASA,kBAAkBC;IACzBxY,KAAKwY,aAAaA;IAClBxY,KAAKyY;;EAGPF,kBAAkBlF;IAKhBqF,gBAAgB,SAASD;MACvBzY,KAAKyY,cAAcA;MACnBzY,KAAKwY,WAAWG,WAAW;;IAO7BC,KAAK,SAASC;MACZ,OAAOjR,EAAEC,SAAS7H,KAAKyY,aAAaI,WAAWC;;;ExBu1EnDC,iBAAiBvC,YAAW;EyB92E5Bja,QAAQC,OAAO,4CACZwZ,QAAQ,oBAAoB+C;EAE/B,SAASA,iBAAiBC;IACxBhZ,KAAKgZ,aAAaA;;EAGpBD,iBAAiB1F;IACf4F;MACEC,IAAI;MACJC,IAAI;;IAMNC,aAAa,SAAS/B;MACpB,KAAKzP,EAAEC,SAAS7H,KAAKiZ,WAAW5B,WAAW;QACzCA,WAAWrX,KAAKqZ;;MAElBrZ,KAAKgZ,WAAWM,IAAIjC;MACpB,OAAOA;;IAMTgC,oBAAoB;MAClB,IAAIE,cAAcC,UAAUnC;MAC5B,KAAKkC,aACHA,cAAcC,UAAUC;MAC1B,OAAOF,YAAYG,OAAO,GAAG;;;EAGjCnd,QAAAC,OAAA,mCAAA,4CAAA,4CAAA;EzBg3EAD,QAAQC,OAAO,kCAAgC,gDAA+C,2CAA0C,0CAAyC,yCAAwC,sCAAqC,uCAAsC,wCAAuC,4CAA2C;EACtXD,QAAQC,OAAO,iCAA+B,uCAAsC,2CAA0C,sCAAqC,2CAA0C,sCAAqC,0CAAyC;EAC3RD,QAAQC,OAAO,gCAA8B,mCAAkC,qCAAoC,sCAAqC,yCAAwC;EAChM,OAAOD,QAAQC,OAAO,uBAAqB,iCAAgC,gCAA+B,+BAA8B","file":"voyageone.angular.com.js","sourcesContent":["define(function(){\n/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.dateModelFormat', [])\n    .directive('dateModelFormat', [\"$filter\", function ($filter) {\n        return {\n            restrict: \"A\",\n            require: 'ngModel',\n            link: function (scope, elem, attrs, ngModel) {\n                ngModel.$parsers.push(function (viewValue) {\n                    return $filter('date')(viewValue, attrs.dateModelFormat || 'yyyy-MM-dd HH:mm:ss');\n                });\n            }\n        };\n    }]);\n\n/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.directives.enterClick', [])\n    .directive('enterClick', function () {\n        return {\n            restrict: \"A\",\n            link: function (scope, elem, attr) {\n\n                angular.element(elem).on('keyup', function (e) {\n\n                    if (e.keyCode !== 13) return;\n\n                    var selectExp = attr.enterClick;\n\n                    var targetElem, handler = function () {\n                        targetElem.triggerHandler('click');\n                    };\n\n                    try {\n                        targetElem = document.querySelector(selectExp);\n                    } catch (e) {\n                        targetElem = null;\n                    }\n\n                    if (!targetElem) {\n                        // 如果取不到元素，则尝试作为表达式执行\n                        handler = function () {\n                            scope.$eval(selectExp);\n                        };\n                    } else {\n                        targetElem = angular.element(targetElem);\n                        // 如果元素存在，但是是禁用状态的，放弃执行\n                        if (targetElem.attr(\"disabled\")) return;\n                    }\n\n                    handler();\n                });\n            }\n        };\n    });\n\n/**\n * @Description:\n * 引入对上传框插件 fileStyle 的指令支持\n * @Date:    2015-11-19 17:35:22\n * @User:    Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.fileStyle', [])\n  .directive('fileStyle', function () {\n    return {\n      restrict: 'A',\n      controller: [\"$scope\", \"$element\", function ($scope, $element) {\n        var options = $element.data();\n        // old usage support\n        options.classInput = $element.data('classinput') || options.classInput;\n        if ($element.filestyle) {\n          $element.filestyle(options);\n        }\n      }]\n    };\n  });\n/**\n * @Description:\n * table中无数据范围的数据\n * @User: linanbin\n * @Version: 2.0.0, 15/12/11\n */\n\nangular.module('voyageone.angular.directives.ifNoRows', [])\n    .directive('ifNoRows', [\"$templateCache\", \"$compile\", function ($templateCache, $compile) {\n\n        var tempNoDataKey = \"voyageone.angular.directives.ifNoRows.tpl.html\";\n\n        // 没有数据显示警告\n        if (!$templateCache.get(tempNoDataKey)) {\n            $templateCache.put(tempNoDataKey,\n            '<div class=\"text-center text-hs\" id=\"noData\">\\n' +\n            '    <h4 class=\"text-vo\"><i class=\"icon fa fa-warning\"></i>&nbsp;{{\\'TXT_ALERT\\' | translate}}</h4>\\n' +\n            '{{\\'TXT_MSG_NO_DATE\\' | translate}}' +\n            '</dv>');\n        }\n\n        return {\n            restrict: \"A\",\n            replace: false,\n            scope: {\n                $$data: \"@ifNoRows\"\n            },\n            link: function (scope, element) {\n\n                scope.$parent.$watch(scope.$$data, function () {\n\n                    // 如果数据不存在则显示警告信息\n                    if(scope.$parent.$eval(scope.$$data)  == 0) {\n                        element.find(\"#noData\").remove();\n                        element.append($compile($templateCache.get(tempNoDataKey))(scope));\n                    } else {\n                        element.find(\"#noData\").remove();\n                    }\n                })\n            }\n        };\n    }]);\n\n/**\n * @Description:\n * 用于菜单目录二级展开\n * @User:    Jonas\n * @Version: 0.2.0, 2015-12-07\n */\n\nangular.module('voyageone.angular.directives.uiNav', [])\n    .directive('uiNav', function () {\n\n        return {\n            restrict: 'AC',\n            link: function(scope, el) {\n                var _window = $(window),\n                    _mb = 768,\n                    wrap = $('.app-aside'),\n                    next,\n                    backdrop = '.dropdown-backdrop';\n                // unfolded\n                el.on('click', 'a', function(e) {\n                    next && next.trigger('mouseleave.nav');\n                    var _this = $(this);\n                    _this.parent().siblings( \".active\" ).toggleClass('active');\n                    _this.next().is('ul') &&  _this.parent().toggleClass('active') &&  e.preventDefault();\n                    // mobile\n                    _this.next().is('ul') || ( ( _window.width() < _mb ) && $('.app-aside').removeClass('show off-screen') );\n                });\n\n                // folded & fixed\n                el.on('mouseenter', 'a', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                    if ( !$('.app-aside-fixed.app-aside-folded').length || ( _window.width() < _mb ) || $('.app-aside-dock').length) return;\n                    var _this = $(e.target)\n                        , top\n                        , w_h = $(window).height()\n                        , offset = 50\n                        , min = 150;\n\n                    !_this.is('a') && (_this = _this.closest('a'));\n                    if( _this.next().is('ul') ){\n                        next = _this.next();\n                    }else{\n                        return;\n                    }\n\n                    _this.parent().addClass('active');\n                    top = _this.parent().position().top + offset;\n                    next.css('top', top);\n                    if( top + next.height() > w_h ){\n                        next.css('bottom', 0);\n                    }\n                    if(top + min > w_h){\n                        next.css('bottom', w_h - top - offset).css('top', 'auto');\n                    }\n                    next.appendTo(wrap);\n\n                    next.on('mouseleave.nav', function(e){\n                        $(backdrop).remove();\n                        next.appendTo(_this.parent());\n                        next.off('mouseleave.nav').css('top', 'auto').css('bottom', 'auto');\n                        _this.parent().removeClass('active');\n                    });\n\n                    $('.smart').length && $('<div class=\"dropdown-backdrop\"/>').insertAfter('.app-aside').on('click', function(next){\n                        next && next.trigger('mouseleave.nav');\n                    });\n\n                });\n\n                wrap.on('mouseleave', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                });\n            }\n        };\n    });\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/24\n */\n\nangular.module('voyageone.angular.directives.schema', [])\n    // 定义fieldTypes\n    .constant('fieldTypes', {\n        INPUT: \"INPUT\",\n        DATE: \"DATE\",\n        DATETIME: \"DATETIME\",\n        TEXTAREA: \"TEXTAREA\",\n        SINGLE_CHECK: \"SINGLECHECK\",// 在complex中的显示select,以外的默认显示singlecheck,如果用户觉得select显示不方便,就将该field的type改成radio\n        RADIO: \"RADIO\",\n        MULTI_INPUT: \"MULTIINPUT\", // 没有被使用\n        MULTI_CHECK: \"MULTICHECK\",\n        COMPLEX: \"COMPLEX\", // TODO\n        MULTI_COMPLEX: \"MULTICOMPLEX\",\n        LABEL: \"LABEL\"  // 可以不显示\n    })\n    // 定义ruleTypes\n    .constant('ruleTypes', {\n        VALUE_TYPE_RULE: \"valueTypeRule\",\n        REQUIRED_RULE: \"requiredRule\",\n        DISABLE_RULE: \"disableRule\",\n        READ_ONLY_RULE: \"readOnlyRule\",\n        REGEX_RULE: \"regexRule\",\n        SET_RULE: \"setRule\", // TODO 暂时不知道怎么用\n        TIP_RULE: \"tipRule\", // TODO 不需要处理\n        DEV_TIP_RULE: \"devTipRule\", // 不需要处理\n        MIN_LENGTH_RULE: \"minLengthRule\",\n        MAX_LENGTH_RULE: \"maxLengthRule\",\n        MIN_VALUE_RULE: \"minValueRule\",\n        MAX_VALUE_RULE: \"maxValueRule\",\n        MIN_INPUT_NUM_RULE: \"minInputNumRule\",\n        MAX_INPUT_NUM_RULE: \"maxInputNumRule\",\n        MIN_DECIMAL_DIGITS_RULE: \"minDecimalDigitsRule\", // TODO\n        MAX_DECIMAL_DIGITS_RULE: \"maxDecimalDigitsRule\", // TODO\n        MIN_TARGET_SIZE_RULE: \"minTargetSizeRule\", // TODO\n        MAX_TARGET_SIZE_RULE: \"maxTargetSizeRule\", // TODO\n        MIN_IMAGE_SIZE_RULE: \"minImageSizeRule\", // TODO\n        MAX_IMAGE_SIZE_RULE: \"maxImageSizeRule\" // TODO\n    })\n    // 定义valueTypes\n    .constant('valueTypes', {\n        TEXT: \"text\",\n        DECIMAL: \"decimal\",\n        INTEGER: \"integer\",\n        LONG: \"long\",\n        DATE: \"date\",\n        TIME: \"time\",\n        URL: \"url\",\n        TEXTAREA: \"textarea\",\n        HTML: \"html\"\n    })\n\n    .directive('schemaHeader', [\"$templateCache\", \"schemaHeaderFactory\", \"fieldTypes\", \"ruleTypes\", \"valueTypes\", function ($templateCache, schemaHeaderFactory, fieldTypes, ruleTypes, valueTypes) {\n\n        // 定义header\n        var templateKey_header = \"voyageone.angular.directives.schemaHeader.tpl.html\";\n        if (!$templateCache.get(templateKey_header)) {\n            $templateCache.put(templateKey_header\n                ,\n                '<div class=\"form-group\">' +\n                '<label class=\"col-sm-2 control-label\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" ng-bind=\"$$data.name\"></label>' +\n                '<div class=\"col-sm-8\" ng-class=\"{\\'modal-open\\' : showHtmlData.isMultiComplex, \\'hierarchy_main\\': showHtmlData.isComplex}\" ng-transclude></div>' +\n                '<div class=\"col-sm-2\" ng-if=\"showHtmlData.isMultiComplex\"><button class=\"btn btn-success\" ng-click=\"addField($$data)\"><i class=\"fa fa-plus\"></i>{{\\'BTN_ADD\\' | translate}}</button></div>' +\n                '<div class=\"row\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><div class=\"col-sm-8 col-sm-offset-2 text-warnings\"><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div></div>' +\n                '</div>');\n        }\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            transclude: true,\n            templateUrl: templateKey_header,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope) {\n\n                var schemaHeader = new schemaHeaderFactory();\n\n                _returnType(scope.$$data.type);\n                _operateRule(scope.$$data.rules);\n\n                scope.showHtmlData = angular.copy(schemaHeader.schemaHearInfo);\n\n                /**\n                 * 设置multi complex添加一条新记录\n                 * @param data\n                 */\n                scope.addField = function (data) {\n                    var newFieldMap = {};\n                    angular.forEach(data.fields, function (field) {\n                        newFieldMap[field.id] = field;\n                        //eval(\"newFieldMap.\" + field.id + \"=field\");\n                    });\n\n                    data.complexValues.push({fieldMap: angular.copy(newFieldMap)});\n                };\n\n                /**\n                 * 返回需要展示的页面样式\n                 * @param type\n                 * @param valueTypeRule\n                 * @private\n                 */\n                function _returnType(type) {\n\n                    switch (type) {\n                        case fieldTypes.MULTI_COMPLEX:\n                            schemaHeader.isMultiComplex(true);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            schemaHeader.isComplex(true);\n                            break;\n                    }\n                }\n\n                /**\n                 * 处理rules\n                 * @param rules\n                 * @private\n                 */\n                function _operateRule(rules) {\n                    angular.forEach(rules, function (rule) {\n                        switch (rule.name) {\n                            case ruleTypes.REQUIRED_RULE:\n                                _requiredRule(rule);\n                                break;\n                            case ruleTypes.TIP_RULE:\n                                _tipRule(rule);\n                                break;\n                        }\n                    })\n\n                }\n\n                /**\n                 * 处理requiredRule\n                 * @param requiredRule\n                 * @private\n                 */\n                function _requiredRule(requiredRule) {\n                    if (\"true\" == requiredRule.value) {\n                        schemaHeader.isRequired(true);\n                    }\n                }\n\n                /**\n                 * 处理tipRule\n                 * @param tipRule\n                 * @private\n                 */\n                function _tipRule(tipRule) {\n                    schemaHeader.tipMsg(tipRule.value);\n                }\n            }\n        }\n    }])\n\n    .directive('schemaItem', [\"$templateCache\", \"$compile\", \"schemaFactory\", \"fieldTypes\", \"ruleTypes\", \"valueTypes\", function ($templateCache, $compile, schemaFactory, fieldTypes, ruleTypes, valueTypes) {\n\n        // label\n        var templateKey_label = \"voyageone.angular.directives.schemaLabel.tpl.html\";\n        if (!$templateCache.get(templateKey_label)) {\n            $templateCache.put(templateKey_label,\n                '<input style=\"min-width: 150px; max-width: 250px;\" type=\"text\" readonly ng-model=\"vm.$$data.value\" class=\"form-control inherited\">');\n        }\n\n        // input\n        var templateKey_input = \"voyageone.angular.directives.schemaInput.tpl.html\";\n        if (!$templateCache.get(templateKey_input)) {\n            $templateCache.put(templateKey_input,\n                '<input style=\"min-width: 150px; max-width: 250px;\" ng-model=\"vm.$$data.value\" class=\"form-control inherited\" replaceInfo>');\n        }\n\n        // data\n        var templateKey_date = \"voyageone.angular.directives.schemaDate.tpl.html\";\n        if (!$templateCache.get(templateKey_date)) {\n            $templateCache.put(templateKey_date,\n                '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input replaceInfo type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDate}}\" ng-model=\"$parent.vm.$$data.value\" date-model-format=\"{{formatDate}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button replaceInfo type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>');\n        }\n\n        // datetime\n        var templateKey_datetime = \"voyageone.angular.directives.schemaDatetime.tpl.html\";\n        if (!$templateCache.get(templateKey_datetime)) {\n            $templateCache.put(templateKey_datetime,\n                '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input replaceInfo type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDateTime}}\" ng-model=\"$parent.vm.$$data.value\" date-model-format=\"{{formatDateTime}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button replaceInfo type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>');\n        }\n\n        // textarea\n        var templateKey_textarea = \"voyageone.angular.directives.schemaTextarea.tpl.html\";\n        if (!$templateCache.get(templateKey_textarea)) {\n            $templateCache.put(templateKey_textarea,\n                '<textarea style=\"min-width: 150px; max-width: 650px;\" class=\"form-control no-resize\" ng-model=\"vm.$$data.value\" rows=\"{{showHtmlData.rowNum}}\" replaceInfo></textarea>');\n        }\n\n        // single check-select\n        var templateKey_select = \"voyageone.angular.directives.schemaSelect.tpl.html\";\n        if (!$templateCache.get(templateKey_select)) {\n            $templateCache.put(templateKey_select,\n                '<select style=\"min-width: 150px; max-width: 250px;\" replaceInfo class=\"form-control\" ng-model=\"vm.$$data.value.value\" ng-options=\"option.value as option.displayName for option in vm.$$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');\n        }\n\n        // single check-radio\n        var templateKey_radio = \"voyageone.angular.directives.schemaRadio.tpl.html\";\n        if (!$templateCache.get(templateKey_radio)) {\n            $templateCache.put(templateKey_radio,\n                '<label class=\"checkbox-inline c-radio\" ng-repeat=\"option in vm.$$data.options\"><input name=\"{{vm.$$data.id}}\" type=\"radio\" ng-value=\"option.value\" ng-model=\"vm.$$data.value.value\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>');\n        }\n\n        // multi check-checkbox\n        var templateKey_checkbox = \"voyageone.angular.directives.schemaCheckbox.tpl.html\";\n        if (!$templateCache.get(templateKey_checkbox)) {\n            $templateCache.put(templateKey_checkbox,\n                '<label class=\"checkbox-inline c-checkbox\" ng-repeat=\"option in vm.$$data.options\"><input type=\"checkbox\" ng-value=\"option.value\" ng-click=\"checkboxValue(option.value)\" ng-checked=\"isSelected(option.value)\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>');\n        }\n\n        // multi complex\n        var templateKey_multiComplex = \"voyageone.angular.directives.schemaMultiComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_multiComplex)) {\n            $templateCache.put(templateKey_multiComplex,\n                '<table class=\"table text-center\">' +\n                '<thead><tr>' +\n                    //'<schema-header ng-repeat=\"field in vm.$$data.fields\" data=\"field\" is-complex=\"true\"></schema-header>' +\n                '<th ng-repeat=\"field in vm.$$data.fields\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" class=\"text-center\" style=\"min-width: 180px;\">{{field.name}}</th>' +\n                '<th ng-if=\"!showHtmlData.notShowEdit\" style=\"min-width: 60px;\" class=\"text-center\" translate=\"TXT_ACTION\"></th>' +\n                '</tr></thead>' +\n                '<tbody><tr ng-repeat=\"value in vm.$$data.complexValues\">' +\n                '<td class=\"text-left\" ng-repeat=\"field in value.fieldMap\"><div class=\"tableLayer\"><p ng-if=\"field.type != \\'COMPLEX\\'\">&nbsp;</p><p><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></p></div></td>' +\n                '<td ng-if=\"!showHtmlData.notShowEdit\" style=\"min-width: 60px;\"><button title=\"{\\'BTN_DELETE\\' | translate}\" class=\"btn btn-danger btn-xs\" ng-click=\"delField($index)\"><i class=\"fa  fa-trash-o\"></i></button></td>' +\n                '</tr></tbody>' +\n                '</table>');\n        }\n\n        // complex\n        var templateKey_complex = \"voyageone.angular.directives.schemaComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_complex)) {\n            $templateCache.put(templateKey_complex,\n                '<schema-header ng-repeat=\"field in vm.$$data.fields\" data=\"field\"><schema-item data=\"field\" ></schema-item></schema-header>');\n        }\n\n        // complex\n        var templateKey_multi_in_complex = \"voyageone.angular.directives.schemaMultiInComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_multi_in_complex)) {\n            $templateCache.put(templateKey_multi_in_complex,\n                '<div ng-repeat=\"field in vm.$$data.fields\"><p ng-bind=\"field.name\"></p><p><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></p></div>');\n        }\n\n        // multi complex tip\n        var templateKey_multiComplex_tip = \"voyageone.angular.directives.schemaMultiComplexTip.tpl.html\";\n        if (!$templateCache.get(templateKey_multiComplex_tip)) {\n            $templateCache.put(templateKey_multiComplex_tip,\n                '<div class=\"text-warnings\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><br><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div>');\n        }\n\n        return {\n            restrict: \"E\",\n            require: ['^?form'],\n            replace: true,\n            bindToController: true,\n            controllerAs: \"vm\",\n            controller: function () {\n            },\n            scope: {\n                $$data: \"=data\",\n                $$hastip: \"=hastip\",\n                $$complex: \"=complex\",\n                $$notShowEdit: \"=notShowEdit\"\n            },\n            link: function (scope, element, ctrl, attr) {\n\n                // 监视配置变动\n                scope.$watch('vm.$$data', function () {\n                    refresh();\n                });\n\n                function refresh() {\n\n                    var schema = new schemaFactory();\n                    scope.vm.$$from = ctrl;\n\n                    // 设置空间name\n                    schema.name(scope.vm.$$data.id);\n\n                    // 设置edit是否显示\n                    schema.notShowEdit(scope.vm.$$notShowEdit == undefined ? false : scope.vm.$$notShowEdit);\n\n                    _returnType(scope.vm.$$data.type);\n                    _operateRule(scope.vm.$$data.rules);\n\n                    var tempHtml = \"\";\n                    // 拼接body\n                    switch (schema.type()) {\n                        case fieldTypes.INPUT:\n                            tempHtml = $templateCache.get(templateKey_input).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.DATE:\n                            tempHtml = $templateCache.get(templateKey_date).replace(\"replaceInfo\", schema.html()).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.DATETIME:\n                            tempHtml = $templateCache.get(templateKey_datetime).replace(\"replaceInfo\", schema.html()).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.TEXTAREA:\n                            tempHtml = $templateCache.get(templateKey_textarea).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.SINGLE_CHECK:\n                            tempHtml = $templateCache.get(templateKey_select).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.RADIO:\n                            tempHtml = $templateCache.get(templateKey_radio).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.MULTI_CHECK:\n                            tempHtml = $templateCache.get(templateKey_checkbox).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.LABEL:\n                            tempHtml = $templateCache.get(templateKey_label);\n                            break;\n                        case fieldTypes.MULTI_COMPLEX:\n                            tempHtml = $templateCache.get(templateKey_multiComplex);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            tempHtml = scope.vm.$$complex ? $templateCache.get(templateKey_multi_in_complex) : $templateCache.get(templateKey_complex);\n                            break;\n                    }\n\n                    // 添加规则说明\n                    if (schema.tipMsg() != null && scope.vm.$$hastip) {\n                        tempHtml += $templateCache.get(templateKey_multiComplex_tip);\n                    }\n\n                    // 包裹 ng-form\n                    tempHtml = '<ng-form>' + tempHtml + '</ng-form>';\n\n                    scope.showHtmlData = angular.copy(schema.schemaInfo());\n                    element.html($compile(tempHtml)(scope));\n\n                    /**\n                     * 设置checkbox被选中的value值处理\n                     * @param value\n                     */\n                    scope.checkboxValue = function (value) {\n                        if (_.contains(scope.showHtmlData.checkValues, value)) {\n                            scope.showHtmlData.checkValues.splice(_.indexOf(scope.showHtmlData.checkValues, value), 1);\n                        } else {\n                            scope.showHtmlData.checkValues.push(value);\n                        }\n                        scope.vm.$$data.values = [];\n                        angular.forEach(scope.showHtmlData.checkValues, function (obj) {\n                            scope.vm.$$data.values.push({id: null, value: obj});\n                        })\n                    };\n\n                    /**\n                     * 判断是否被选中\n                     * @param value\n                     */\n                    scope.isSelected = function (value) {\n                        return _.contains(scope.showHtmlData.checkValues, value)\n                    };\n\n                    /**\n                     * 设置multi complex删除该条记录\n                     * @param index\n                     */\n                    scope.delField = function (index) {\n                        scope.vm.$$data.complexValues.splice(index, 1);\n                    };\n\n                    /**\n                     * 返回需要展示的页面样式\n                     * @param type\n                     * @param valueTypeRule\n                     * @private\n                     */\n                    function _returnType(type) {\n                        schema.type(type);\n                        switch (type) {\n                            case fieldTypes.RADIO:\n                                if (scope.vm.$$complex)\n                                    schema.type(fieldTypes.SINGLE_CHECK);\n                                break;\n                            case fieldTypes.MULTI_CHECK:\n                                _setCheckValues(scope.vm.$$data.values);\n                                break;\n                            case fieldTypes.MULTI_COMPLEX:\n                                scope.vm.$$data.complexValues = _resetMultiComplex(scope.vm.$$data);\n                                break;\n                            case fieldTypes.COMPLEX:\n                                _resetComplex(scope.vm.$$data);\n                                break;\n                        }\n                    }\n\n                    /**\n                     * 设置checkvalues\n                     * @param values\n                     * @private\n                     */\n                    function _setCheckValues(values) {\n                        if (values != undefined && values != null) {\n                            angular.forEach(values, function (obj) {\n                                schema.checkValues(obj.value);\n                            })\n                        }\n                    }\n\n                    /**\n                     * 重新设置multicomplex的一些属性\n                     * @param fields\n                     * @private\n                     */\n                    function _resetMultiComplex(data) {\n                        var tempValues = [];\n                        angular.forEach(data.complexValues, function (value) {\n                            var tempFieldMap = {};\n                            angular.forEach(data.fields, function (field) {\n                                var tempField = angular.copy(field);\n                                if (value.fieldMap[field.id] != undefined) {\n                                    switch (field.type) {\n                                        case fieldTypes.INPUT:\n                                        case fieldTypes.LABEL:\n                                        case fieldTypes.DATE:\n                                        case fieldTypes.DATETIME:\n                                        case fieldTypes.TEXTAREA:\n                                        case fieldTypes.SINGLE_CHECK:\n                                        case fieldTypes.RADIO:\n                                            tempField.value = value.fieldMap[field.id].value;\n                                            break;\n                                        case fieldTypes.MULTI_INPUT:\n                                        case fieldTypes.MULTI_CHECK:\n                                            tempField.values = value.fieldMap[field.id].values;\n                                            break;\n                                        case fieldTypes.COMPLEX:\n                                            tempField.complexValue = value.fieldMap[field.id].complexValue;\n                                            break;\n                                        case fieldTypes.MULTI_COMPLEX:\n                                            tempField.complexValues = value.fieldMap[field.id].complexValues;\n                                            break;\n                                    }\n                                }\n                                tempFieldMap[field.id] = tempField;\n                            });\n                            tempValues.push({fieldMap: angular.copy(tempFieldMap)});\n                        });\n\n                        // 如果values为空,默认添加空白行\n                        if (_.isEmpty(data.complexValues)) {\n                            var newFieldMap = {};\n                            angular.forEach(data.fields, function (field) {\n                                newFieldMap[field.id] = field;\n                                //eval(\"newFieldMap.\" + field.id + \"=field\");\n                            });\n\n                            tempValues.push({fieldMap: angular.copy(newFieldMap)});\n                        }\n\n                        return tempValues;\n                    }\n\n                    /**\n                     * 重新\n                     * @param data\n                     * @private\n                     */\n                    function _resetComplex(data) {\n                        angular.forEach(data.fields, function (field) {\n                            switch (field.type) {\n                                case fieldTypes.INPUT:\n                                case fieldTypes.LABEL:\n                                case fieldTypes.DATE:\n                                case fieldTypes.DATETIME:\n                                case fieldTypes.TEXTAREA:\n                                case fieldTypes.SINGLE_CHECK:\n                                case fieldTypes.RADIO:\n                                    if (!_.isEmpty(data.complexValue.fieldMap))\n                                        field.value = data.complexValue.fieldMap[field.id].value;\n                                    else\n                                        field.value = data.defaultComplexValue.fieldMap[field.id].value;\n                                    break;\n                                case fieldTypes.MULTI_INPUT:\n                                case fieldTypes.MULTI_CHECK:\n                                    if (!_.isEmpty(data.complexValue.fieldMap))\n                                        field.values = data.complexValue.fieldMap[field.id].values;\n                                    else\n                                        field.values = data.defaultComplexValue.fieldMap[field.id].values;\n                                    break;\n                                case fieldTypes.COMPLEX:\n                                    if (!_.isEmpty(data.complexValue.fieldMap))\n                                        field.complexValue = data.complexValue.fieldMap[field.id].complexValue;\n                                    else\n                                        field.complexValue = data.defaultComplexValue.fieldMap[field.id].complexValue;\n                                    break;\n                                case fieldTypes.MULTI_COMPLEX:\n                                    if (!_.isEmpty(data.complexValue.fieldMap))\n                                        field.complexValues = data.complexValue.fieldMap[field.id].complexValues;\n                                    else\n                                        field.complexValues = data.defaultComplexValue.fieldMap[field.id].complexValues;\n                                    break;\n                            }\n                        });\n                    }\n\n                    /**\n                     * 处理rules\n                     * @param rules\n                     * @private\n                     */\n                    function _operateRule(rules) {\n                        angular.forEach(rules, function (rule) {\n                            switch (rule.name) {\n                                case ruleTypes.VALUE_TYPE_RULE:\n                                    _valueTypeRule(rule);\n                                    break;\n                                case ruleTypes.REQUIRED_RULE:\n                                    _requiredRule(rule);\n                                    break;\n                                case ruleTypes.DISABLE_RULE:\n                                    _disableRule(rule);\n                                    break;\n                                case ruleTypes.READ_ONLY_RULE:\n                                    _readOnlyRule(rule);\n                                    break;\n                                case ruleTypes.REGEX_RULE:\n                                    _regexRule(rule);\n                                    break;\n                                case ruleTypes.TIP_RULE:\n                                    _tipRule(rule);\n                                    break;\n                                case ruleTypes.MIN_LENGTH_RULE:\n                                    _minLengthRule(rule);\n                                    break;\n                                case ruleTypes.MAX_LENGTH_RULE:\n                                    _maxLengthRule(rule);\n                                    break;\n                                case ruleTypes.MIN_VALUE_RULE:\n                                    _minValueRule(rule);\n                                    break;\n                                case ruleTypes.MAX_VALUE_RULE:\n                                    _maxValueRule(rule);\n                                    break;\n                                case ruleTypes.MIN_INPUT_NUM_RULE:\n                                    _minInputNumRule(rule);\n                                    break;\n                                case ruleTypes.MAX_INPUT_NUM_RULE:\n                                    _maxInputNumRule(rule);\n                                    break;\n                            }\n                        })\n                    }\n\n                    /**\n                     * 处理valueTypeRule\n                     * @param valueTypeRule\n                     * @private\n                     */\n                    function _valueTypeRule(valueTypeRule) {\n                        switch (valueTypeRule.value) {\n                            case valueTypes.TEXT:\n                            case valueTypes.DECIMAL:\n                            case valueTypes.INTEGER:\n                            case valueTypes.LONG:\n                                schema.type(fieldTypes.INPUT);\n                                schema.html(\"type=\\\"text\\\"\");\n                                break;\n                            case valueTypes.DATE:\n                                schema.type(fieldTypes.DATE);\n                                break;\n                            case valueTypes.TIME:\n                                schema.type(fieldTypes.DATETIME);\n                                break;\n                            case valueTypes.URL:\n                                schema.type(fieldTypes.INPUT);\n                                schema.html(\"type=\\\"url\\\"\");\n                                break;\n                            case valueTypes.TEXTAREA:\n                                schema.type(fieldTypes.TEXTAREA);\n                                schema.rowNum(4);\n                                break;\n                            case valueTypes.HTML:\n                                schema.type(fieldTypes.TEXTAREA);\n                                schema.rowNum(10);\n                                break;\n                        }\n                    }\n\n                    /**\n                     * 处理requiredRule\n                     * @param requiredRule\n                     * @private\n                     */\n                    function _requiredRule(requiredRule) {\n                        if (\"true\" == requiredRule.value) {\n                            schema.isRequired(true);\n                            schema.html(\"required\");\n                        }\n                    }\n\n                    /**\n                     * 处理disableRule\n                     * @param disableRule\n                     * @private\n                     */\n                    function _disableRule(disableRule) {\n                        if (\"true\" == disableRule.value\n                            && disableRule.dependGroup == null) {\n                            schema.html(\"ng-disabled=\\\"true\\\"\");\n                        }\n                    }\n\n                    /**\n                     * 处理readOnlyRule\n                     * @param readOnlyRule\n                     * @private\n                     */\n                    function _readOnlyRule(readOnlyRule) {\n                        if (\"true\" == readOnlyRule.value) {\n                            schema.html(\"readonly\");\n                        }\n                    }\n\n                    /**\n                     * 处理regexRule\n                     * @param regexRule\n                     * @private\n                     */\n                    function _regexRule(regexRule) {\n                        schema.html(\"ng-pattern=\\\"/\" + regexRule.value + \"/\\\"\");\n                    }\n\n                    /**\n                     * 处理tipRule\n                     * @param tipRule\n                     * @private\n                     */\n                    function _tipRule(tipRule) {\n                        schema.tipMsg(tipRule.value);\n                    }\n\n                    /**\n                     * 处理minLengthRule\n                     * @param minLengthRule\n                     * @private\n                     */\n                    function _minLengthRule(minLengthRule) {\n                        var value = isNaN(parseInt(minLengthRule.value)) ? 0 : minLengthRule.value;\n\n                        if (\"not include\" === minLengthRule.exProperty)\n                            value = (value > 0) ? value - 1 : 0;\n\n                        if (\"character\" == minLengthRule.unit)\n                            schema.html(\"ng-minlength=\\\"\" + value + \"\\\"\");\n                        else\n                            schema.html(\"ng-char-minlength=\\\"\" + value + \"\\\"\");\n                    }\n\n                    /**\n                     * 处理maxLengthRule\n                     * @param maxLengthRule\n                     * @private\n                     */\n                    function _maxLengthRule(maxLengthRule) {\n                        var value = isNaN(parseInt(maxLengthRule.value)) ? 0 : maxLengthRule.value;\n\n                        if (\"not include\" === maxLengthRule.exProperty)\n                            value = (value > 0) ? value - 1 : 0;\n\n                        if (\"character\" == maxLengthRule.unit)\n                            schema.html(\"ng-maxlength=\\\"\" + value + \"\\\"\");\n                        else\n                            schema.html(\"ng-char-maxlength=\\\"\" + value + \"\\\"\");\n                    }\n\n                    /**\n                     * 处理minValueRule\n                     * @param minValueRule\n                     * @private\n                     */\n                    function _minValueRule(minValueRule) {\n                        var value = isNaN(parseFloat(minValueRule.value)) ? 0 : parseFloat(minValueRule.value);\n\n                        if (\"not include\" === minValueRule.exProperty)\n                            value = (value > 0) ? value - 0.01 : 0;\n\n                        schema.html(\"ng-minvalue=\\\"\" + value + \"\\\"\");\n                    }\n\n                    /**\n                     * 处理maxValueRule\n                     * @param maxValueRule\n                     * @private\n                     */\n                    function _maxValueRule(maxValueRule) {\n                        var value = isNaN(parseFloat(maxValueRule.value)) ? 0 : parseFloat(maxValueRule.value);\n\n                        if (\"not include\" === maxValueRule.exProperty)\n                            value = (value > 0) ? value - 0.01 : 0;\n\n                        schema.html(\"ng-maxvalue=\\\"\" + value + \"\\\"\");\n\n                    }\n\n                    /**\n                     * 处理minInputNumRule\n                     * @param minInputNumRule\n                     * @private\n                     */\n                    function _minInputNumRule(minInputNumRule) {\n                        var value = isNaN(parseInt(minInputNumRule.value)) ? 0 : parseInt(minInputNumRule.value);\n\n                        if (\"not include\" === minInputNumRule.exProperty)\n                            value = (value > 0) ? value - 1 : 0;\n\n                        schema.html(\"ng-mininputnum=\\\"\" + value + \"\\\"\");\n                    }\n\n                    /**\n                     * 处理maxInputNumRule\n                     * @param maxInputNumRule\n                     * @private\n                     */\n                    function _maxInputNumRule(maxInputNumRule) {\n                        var value = isNaN(parseInt(maxInputNumRule.value)) ? 0 : parseInt(maxInputNumRule.value);\n\n                        if (\"not include\" === maxInputNumRule.exProperty)\n                            value = (value > 0) ? value - 1 : 0;\n\n                        schema.html(\"ng-maxinputnum=\\\"\" + value + \"\\\"\");\n                    }\n\n                    /**\n                     * 如果checkbox被选中,返回被选中的value.\n                     * eg.[{new: true, pending: false, approved: true}] -> [new, approved]\n                     * @param object\n                     * @returns {*}\n                     */\n                    //function _returnKey(object) {\n                    //    var result = [];\n                    //    angular.forEach(object, function(value, index) {\n                    //        if (value) result.push(index);\n                    //    });\n                    //    return result;\n                    //}\n                }\n            }\n        }\n    }]);\n\n/**\n * @Description:\n * 用于动态显示options\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-22\n */\n\nangular.module('voyageone.angular.directives.voption', [])\n    .directive('voption', [\"$templateCache\", \"$compile\", function ($templateCache, $compile) {\n\n        var templateKey_select = \"voyageone.angular.directives.optionSelect.tpl.html\";\n\n        // 显示成select样式\n        if (!$templateCache.get(templateKey_select)) {\n            $templateCache.put(templateKey_select,\n                '<select class=\"form-control\" ng-model=\"$$data.value.value\" ng-options=\"option.value as option.displayName for option in $$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');\n        }\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope, element) {\n\n                // 定义不同的展示种类\n                var typeList = {\n                    SINGLE_CHECK: \"SINGLECHECK\"\n                };\n\n                // 监视配置变动\n                scope.$watch('$$data', function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 根据type选择展示不同的控件\n                 */\n                function refresh() {\n                    var tempHtml;\n                    switch (scope.$$data.type) {\n                        case typeList.SINGLE_CHECK:\n                            tempHtml = $compile($templateCache.get(templateKey_select))(scope);\n                            break;\n                    }\n                    element.html(tempHtml);\n                }\n            }\n        };\n    }]);\n/**\n * @Description:\n * 用于分页\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-08\n */\n\nangular.module('voyageone.angular.directives.vpagination', [])\n    .directive('vpagination', [\"$templateCache\", \"$compile\", \"vpagination\", function ($templateCache, $compile, vpagination) {\n\n        var templateKey = \"voyageone.angular.directives.pagination.tpl.html\";\n        var templateKeyNoData = \"voyageone.angular.directives.paginationNoData.tpl.html\";\n\n        // 有数据分页样式\n        if (!$templateCache.get(templateKey)) {\n            $templateCache.put(templateKey,\n                '<div class=\"col-sm-3\">\\n' +\n                '    <div class=\"page-main form-inline\">{{\\'TXT_SHOWING_NO\\' | translate}}&nbsp;<input class=\"text-center\" type=\"text\" ng-model=\"curr.pageNo\"/>&nbsp;/&nbsp;{{totalPages}}&nbsp;{{\\'TXT_PAGE\\' | translate}}&nbsp;' +\n                '        <button class=\"btn btn-xs btn-default\" type=\"button\" ng-click=\"goPage(curr.pageNo)\" translate=\"BTN_GO\"></button>\\n' +\n                '    </div>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-4 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_SHOWING\\' | translate}}&nbsp;{{curr.start}}-{{curr.end}}&nbsp;{{\\'TXT_OF\\' | translate}}&nbsp;{{totalItems}}&nbsp{{\\'TXT_ITEMS\\' | translate}}</small>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-5 text-right text-center-xs\"><div>' +\n                '    <ul class=\"pagination-sm m-t-none m-b pagination ng-isolate-scope ng-valid ng-dirty ng-valid-parse\">\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-first\"><a href ng-click=\"goPage(1)\" ng-disabled=\"curr.isFirst\">&laquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-prev\"><a href ng-click=\"goPage(curr.pageNo - 1)\" ng-disabled=\"curr.isFirst\">&lsaquo;</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowStart\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-repeat=\"page in curr.pages track by $index\" ng-class=\"{active: isCurr(page)}\" class=\"pagination-page\"><a href ng-click=\"goPage(page)\">{{page}}</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowEnd\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-next\"><a href ng-click=\"goPage(curr.pageNo + 1)\" ng-disabled=\"curr.isLast\">&rsaquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-last\"><a href ng-click=\"goPage(totalPages)\" ng-disabled=\"curr.isLast\">&raquo;</a></li>\\n' +\n                '    </ul>\\n' +\n                '</div>');\n        }\n\n        // 无数据分页样式\n        if (!$templateCache.get(templateKeyNoData)) {\n            $templateCache.put(templateKeyNoData,\n                '<div class=\"col-sm-7 col-sm-offset-2 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_SHOWING\\' | translate}}&nbsp;0-0&nbsp;{{\\'TXT_OF\\' | translate}}&nbsp;0&nbsp{{\\'TXT_ITEMS\\' | translate}}</small>\\n' +\n                '</div>');\n        }\n\n        var defConfig = {curr: 1, total: 0, size: 20, showPageNo:5};\n\n        return {\n            restrict: \"AE\",\n            //templateUrl: templateKey,\n            replace: false,\n            scope: {\n                $$configNameForA: \"@vpagination\",\n                $$configNameForE: \"@config\"\n            },\n            link: function (scope, element) {\n\n                // 获取用户的config配置\n                var userConfigName = scope.$$configNameForA || scope.$$configNameForE;\n                var userConfig = scope.$parent.$eval(userConfigName);\n\n                // 将用户配置覆盖到默认配置后，在重新覆盖到用户配置上，用于补全配置属性\n                var userWithDefConfig = angular.extend({}, defConfig, userConfig);\n                scope.config = angular.extend(userConfig, userWithDefConfig);\n\n                var p = new vpagination(scope.config);\n\n                // 监视配置变动\n                scope.$parent.$watch(userConfigName, function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 跳转到指定页\n                 * @param num\n                 */\n                scope.goPage = function (num) {\n                    p.goPage(isNaN(Number(num)) ? 1 : Number(num));\n                };\n\n                /**\n                 * 判断是否是当前页\n                 * @param num\n                 * @returns {*|boolean}\n                 */\n                scope.isCurr = function (num) {\n                    return p.isCurr(num);\n                };\n\n                function refresh() {\n\n                    // 获取总页数\n                    scope.totalPages = p.getPageCount();\n                    // 获取总items数\n                    scope.totalItems = p.getTotal();\n                    // 获取当前页的信息\n                    scope.curr = p.getCurr();\n\n                    // 根据总数量显示不同的分页样式\n                    var tempHtml;\n                    if(p.getTotal() == 0) {\n                        tempHtml = $compile($templateCache.get(templateKeyNoData))(scope);\n                    } else {\n                        tempHtml = $compile($templateCache.get(templateKey))(scope);\n                    }\n                    element.html(tempHtml);\n\n                }\n            }\n        };\n    }]);\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\nangular.module('voyageone.angular.directives.validator', [])\n\n    // 定义ng-char-maxlength\n    .directive('ngCharMaxlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxlength = -1;\n                attr.$observe('ngCharMaxlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    maxlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxlength = function(modelValue, viewValue) {\n                    return (maxlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) <= maxlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-char-minlength\n    .directive('ngCharMinlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minlength = -1;\n                attr.$observe('ngCharMinlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    minlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minlength = function(modelValue, viewValue) {\n                    return (minlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) >= minlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-maxvalue\n    .directive('ngMaxvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        maxvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        maxvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        maxvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxvalue = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-minvalue\n    .directive('ngMinvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMinvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        minvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        minvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        minvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minvalue = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue >= minvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-maxinputnum\n    .directive('ngMaxinputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxinputvalue', function(value) {\n                    maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxinputnum = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-mininputnum\n    .directive('ngMininputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMininputnum', function(value) {\n                    minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.mininputnum = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length >= minvalue);\n                };\n            }\n        }\n    })\n;\n/**\n * @Description:\n * 弹出日期控件\n * @User:    Edward\n * @Version: 0.2.0, 2015-10-10\n */\n\nangular.module('voyageone.angular.controllers.datePicker', [])\n    .controller('datePickerCtrl', [\"$scope\", function ($scope) {\n        var vm = this;\n\n        vm.formats = ['yyyy-MM-dd', 'yyyy-MM-dd HH:mm:ss'];\n\n        $scope.formatDate = vm.formats[0];\n        $scope.formatDateTime = vm.formats[1];\n\n        $scope.open = open;\n\n        function open($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n\n            $scope.opened = true;\n        }\n    }]);\n/**\n * @Description:\n * select tables items\n * @User: linanbin\n * @Version: 2.0.0, 15/12/16\n */\n\nangular.module('voyageone.angular.controllers.selectRows', [])\n    .controller('selectRowsCtrl', [\"$scope\", function ($scope) {\n\n        $scope.selectAll = selectAll;\n        $scope.selectOne = selectOne;\n        $scope.isAllSelected = isAllSelected;\n\n        /**\n         * 全部选中当前页数据\n         * @param objectList\n         */\n        function selectAll(objectList, id) {\n\n            objectList.selAllFlag = !objectList.selAllFlag;\n            if(!id){\n                id=\"id\";\n            }\n\n            // 循环处理全选中的数据\n            angular.forEach(objectList.currPageRows, function (object) {\n\n                // 单签页面所有产品选中flag被标示\n                objectList.selFlag[object[id]] = objectList.selAllFlag;\n\n                if (objectList.hasOwnProperty('selList')) {\n\n                    var tempList = _.pluck(objectList.selList, id);\n                    if (objectList.selAllFlag && tempList.indexOf(object[id]) < 0) {\n                        objectList.selList.push(object);\n                    } else if (!objectList.selAllFlag && tempList.indexOf(object[id]) > -1) {\n                        objectList.selList.splice(tempList.indexOf(object[id]), 1);\n                    }\n                }\n            });\n        }\n\n        /**\n         * 选中单条数据\n         * @param currentId\n         * @param objectList\n         */\n        function selectOne(currentId, objectList, id) {\n            if(!id){\n                id=\"id\";\n            }\n            if (objectList.hasOwnProperty('selList')) {\n\n                angular.forEach(objectList.currPageRows, function(object) {\n\n                    var tempList = _.pluck(objectList.selList, id);\n                    if (_.isEqual(object[id], currentId)) {\n                        if (tempList.indexOf(object[id]) > -1) {\n                            objectList.selList.splice(tempList.indexOf(object[id]), 1);\n                        } else {\n                            objectList.selList.push(object);\n                        }\n                    }\n                });\n            }\n\n            objectList.selAllFlag = true;\n            tempList = _.pluck(objectList.selList, id);\n            angular.forEach(objectList.currPageRows, function(object) {\n                if (tempList.indexOf(object[id]) == -1) {\n                    objectList.selAllFlag = false;\n                }\n            })\n        }\n\n        /**\n         * 判断当前页是否为全选中\n         * @param objectList\n         * @param id\n         */\n        function isAllSelected (objectList, id) {\n            if(!id){\n                id=\"id\";\n            }\n\n            if (objectList != undefined) {\n\n                objectList.selAllFlag = true;\n                var tempList = _.pluck(objectList.selList, id);\n                angular.forEach(objectList.currPageRows, function(object) {\n                    if (tempList.indexOf(object[id]) == -1) {\n                        objectList.selAllFlag = false;\n                    }\n                });\n                return objectList.selAllFlag;\n            }\n\n            return false;\n        }\n    }]);\n/**\n * @Description:\n * 显示html的popover的共同方法\n * @User: linanbin\n * @Version: 2.0.0, 15/12/14\n */\n\nangular.module('voyageone.angular.controllers.showPopover', [])\n    .controller('showPopoverCtrl', [\"$scope\", function ($scope) {\n\n        $scope.showInfo = showInfo;\n\n        function showInfo(values) {\n            var tempHtml = \"\";\n\n            angular.forEach(values, function (data, index) {\n                tempHtml += data;\n                if (index !== values.length) {\n                    tempHtml += \"<br>\";\n                }\n            });\n            return tempHtml\n        }\n    }]);\n\n/**\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.dialogs', [])\n    .factory(\"$dialogs\", [\"$modal\", \"$filter\", \"$templateCache\", function ($modal, $filter, $templateCache) {\n\n        var templateName = 'voyageone.angular.factories.dialogs.tpl.html';\n        var template =\n            '<div class=\"vo_modal\">' +\n                '<div class=\"modal-header\">' +\n                    '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" ng-click=\"close()\">' +\n                        '<span aria-hidden=\"true\"><i ng-click=\"close()\" class=\"fa fa-close\"></i></span>' +\n                    '</button>' +\n                    '<h5 class=\"modal-title\" ng-bind-html=\"title\"></h5>' +\n                '</div>' +\n                '<div class=\"modal-body wrapper-lg\">' +\n                    '<div class=\"row\">' +\n                        '<h5 class=\"text-center text-hs\"><p class=\"text-center\" ng-bind-html=\"content\"></p></h5>' +\n                    '</div>' +\n                '</div>' +\n                '<div class=\"modal-footer\">' +\n                    '<button class=\"btn btn-default btn-sm\" ng-if=\"!isAlert\" ng-click=\"close()\" translate=\"BTN_CANCEL\"></button>' +\n                    '<button class=\"btn btn-vo btn-sm\" ng-click=\"ok()\" translate=\"BTN_OK\"></button>' +\n                '</div>' +\n            '</div>';\n        $templateCache.put(templateName, template);\n\n        function tran(translationId, values) {\n            return $filter('translate')(translationId, values);\n        }\n\n        return function (options) {\n\n            if (!_.isObject(options)) throw \"arg type must be object\";\n\n            var values;\n\n            if (_.isObject(options.content)) {\n                values = options.content.values;\n                options.content = options.content.id;\n            }\n\n            options.title = tran(options.title);\n            options.content = tran(options.content, values);\n\n            var modalInstance = $modal.open({\n                templateUrl: templateName,\n                controller: [\"$scope\", function (scope) {\n                    _.extend(scope, options);\n                }],\n                size: 'md'\n            });\n\n            options.close = function () {\n                modalInstance.dismiss('close')\n            };\n\n            options.ok = function () {\n                modalInstance.close('');\n            };\n\n            return modalInstance;\n        };\n    }])\n\n    .factory(\"alert\", [\"$dialogs\", function ($dialogs) {\n        return function (content, title) {\n            return $dialogs({\n                title: title || 'TXT_ALERT',\n                content: content,\n                isAlert: true\n            });\n        };\n    }])\n\n    .factory(\"confirm\", [\"$dialogs\", function vConfirm($dialogs) {\n        return function (content, title) {\n            return $dialogs({\n                title: title || 'TXT_CONFIRM',\n                content: content,\n                isAlert: false\n            });\n        };\n    }]);\n/**\n * @Date:    2015-11-16 20:51:05\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.factories.interceptor', [])\n    .factory('interceptorFactory', function () {\n\n        // 未知的系统错误\n        var UNKNOWN_CODE = \"5\";\n        // 和 JAVA 同步,系统通知前端自动跳转的特殊代码\n        var CODE_SYS_REDIRECT = \"SYS_REDIRECT\";\n        // 和 JAVA 同步,回话过期的信息\n        var MSG_TIMEOUT = \"300001\";\n\n        /**\n         * 对系统自动跳转的响应,执行跳转\n         * @param {{code:string,redirectTo:string}} res\n         * @returns {boolean}\n         */\n        function autoRedirect(res) {\n            if (res.code != CODE_SYS_REDIRECT) {\n                return false;\n            }\n            // 如果跳转数据异常,则默认跳转登陆页\n            location.href = res.redirectTo || '/login.html';\n            return true;\n        }\n\n        /**\n         * 对会话超时和未登录进行特殊处理\n         * @param {{code:string}} res\n         * @returns {boolean}\n         */\n        function sessionTimeout(res) {\n            if (res.code != MSG_TIMEOUT) {\n                return false;\n            }\n            // 会话超时,默认跳转到登陆页\n            location.href = '/login.html';\n            return true;\n        }\n\n        /**\n         * 处理位置的异常\n         * @param response\n         */\n        function unknownException(response) {\n\n            if (response.data.code !== UNKNOWN_CODE) {\n                return;\n            }\n\n            window.$$lastUnknow = response;\n            console.error('Server throw unknown exceptio. Message:', response.data.message);\n        }\n\n        return {\n            request: function (config) {\n                return config;\n            },\n            /**\n             * 响应拦截\n             * @param {{config:object, data:*, headers:function, status:number, statusText:string}} res\n             * @returns {*}\n             */\n            response: function (res) {\n                var result = res.data;\n\n                // 特殊处理部分内容\n                if (autoRedirect(result) || sessionTimeout(result)) {\n                    return res;\n                }\n\n                unknownException(res);\n\n                return res;\n            },\n            requestError: function (config) {\n                return config;\n            },\n            responseError: function (res) {\n            }\n        };\n    })\n    .config([\"$httpProvider\", function ($httpProvider) {\n        $httpProvider.interceptors.push('interceptorFactory');\n    }]);\n/**\n * Notify 的可用参数\n * {\n *    // whether to hide the notification on click\n *    clickToHide: true,\n *    // whether to auto-hide the notification\n *    autoHide: true,\n *    // if autoHide, hide after milliseconds\n *    autoHideDelay: 5000,\n *    // show the arrow pointing at the element\n *    arrowShow: true,\n *    // arrow size in pixels\n *    arrowSize: 5,\n *    // position defines the notification position though uses the defaults below\n *    position: '...',\n *    // default positions\n *    elementPosition: 'bottom left',\n *    globalPosition: 'top right',\n *    // default style\n *    style: 'bootstrap',\n *    // default class (string or [string])\n *    className: 'error',\n *    // show animation\n *    showAnimation: 'slideDown',\n *    // show animation duration\n *    showDuration: 400,\n *    // hide animation\n *    hideAnimation: 'slideUp',\n *    // hide animation duration\n *    hideDuration: 200,\n *    // padding between element and notification\n *    gap: 2\n * }\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.notify', [])\n\n    .factory('notify', [\"$filter\", function ($filter) {\n\n        /**\n         * @ngdoc function\n         * @name voNotify\n         * @description\n         * 自动关闭的弹出提示框\n         */\n        function notify(options) {\n\n            if (!options) return;\n            if (_.isString(options)) options = {message: options};\n            if (!_.isObject(options)) return;\n\n            var values;\n\n            // 为 translate 的格式化提供支持，检测类型并转换\n            if (_.isObject(options.message)) {\n\n                values = options.message.values;\n                options.message = options.message.id;\n            }\n\n            options.message = $filter('translate')(options.message, values);\n\n            return $.notify(options.message, options);\n        }\n\n        notify.success = function (message) {\n            return notify({message: message, className: \"success\"});\n        };\n\n        notify.warning = function (message) {\n            return notify({message: message, className: \"warning\"});\n        };\n\n        notify.danger = function (message) {\n            return notify({message: message, className: \"danger\"});\n        };\n\n        return notify;\n    }]);\n/**\n * @ngdoc\n * @factory\n * @name pppAutoImpl\n * @description\n * 根据定义自动生成方法实现. 注意! 依赖 ui-bootstrap\n */\n\nangular.module('voyageone.angular.factories.pppAutoImpl', [])\n    .factory('pppAutoImpl', [\"$q\", \"$modal\", function ($q, $modal) {\n        return function (declares, viewBaseUrl, jsBaseUrl) {\n            if (!declares.$$$ || !declares.$$$.impl)\n                declares.$$$ = {\n                    impl: declarePopupMethods(declares, viewBaseUrl, jsBaseUrl, '')\n                };\n            return declares.$$$.impl;\n        };\n\n        function declarePopupMethods(declares, viewBaseUrl, jsBaseUrl, popupBaseKey) {\n            var impl = {};\n            if (popupBaseKey) popupBaseKey += '/';\n            _.each(declares, function (declare, parentDir) {\n                if (!declare.popupKey) {\n                    if (_.isObject(declare) || _.isArray(declare)) _.extend(impl,\n                        declarePopupMethods(declare,\n                            viewBaseUrl, jsBaseUrl, popupBaseKey + parentDir,\n                            $q, $modal));\n                    return;\n                }\n\n                var options = _.clone(declare.options) || {};\n\n                var pathBase = '/' + popupBaseKey;\n                if (_.isString(parentDir)) pathBase += parentDir + '/';\n                pathBase += declare.popupKey;\n\n                options.templateUrl = viewBaseUrl + pathBase + '.tpl.html';\n                options.controllerUrl = jsBaseUrl + pathBase + '.ctl';\n\n                if (declare.controllerAs || declare.controller)\n                    options.controller = getControllerName(declare.popupKey);\n                if (declare.controllerAs)\n                    options.controller += ' as ' + (_.isString(declare.controllerAs) ? declare.controllerAs : 'ctrl');\n\n                impl[declare.popupKey] = function (context) {\n                    if (context) options.resolve = {\n                        context: function () {\n                            return context;\n                        }\n                    };\n\n                    var defer = $q.defer();\n                    require([options.controllerUrl], function () {\n                        defer.resolve($modal.open(options).result);\n                    });\n                    return defer.promise;\n                };\n            });\n            return impl;\n        }\n\n        function getControllerName(key) {\n            return key\n                    .replace(/\\.(\\w)/g, function (m, m1) {\n                        return m1.toUpperCase();\n                    })\n                    .replace(/^(\\w)/, function (m, m1) {\n                        return m1.toLowerCase()\n                    }) + 'PopupController';\n        }\n    }]);\n/**\n * @User: linanbin\n * @Date: 15/12/25\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.schema', [])\n\n    // 定义schemaHeaderFactory\n    .factory('schemaHeaderFactory', function () {\n\n        function SchemaHeaderFactory(config) {\n            this.schemaHearInfo = config || {\n                    isRequired: false,\n                    //size: null,\n                    isMultiComplex: false,\n                    isComplex: false,\n                    tipMsg: []\n                };\n        }\n\n        SchemaHeaderFactory.prototype = {\n\n            isRequired: function (value) {\n                return value !== undefined ? this.schemaHearInfo.isRequired = value : this.schemaHearInfo.isRequired;\n            },\n\n            isComplex: function (value) {\n                return value !== undefined ? this.schemaHearInfo.isComplex = value : this.schemaHearInfo.isComplex;\n            },\n\n            isMultiComplex: function (value) {\n                return value !== undefined ? this.schemaHearInfo.isMultiComplex = value : this.schemaHearInfo.isMultiComplex;\n            },\n\n            tipMsg: function (value) {\n                return value !== undefined ? this.schemaHearInfo.tipMsg.push(value) : this.schemaHearInfo.tipMsg;\n            }\n\n            // size: function (value) {\n            //     return value !== undefined ? this.schemaHearInfo.size = value : this.schemaHearInfo.size;\n            // }\n        };\n\n        return SchemaHeaderFactory;\n    })\n\n    // 定义schemaFactory\n    .factory('schemaFactory', function () {\n\n        function SchemaFactory(config) {\n            this._schemaInfo = config || {\n                    type: null,\n                    name: null,\n                    rowNum: null,\n                    isRequired: false,\n                    checkValues: [],\n                    tipMsg: [],\n                    html: [],\n                    notShowEdit: true\n                };\n        }\n\n        SchemaFactory.prototype = {\n\n            type: function (value) {\n                return value !== undefined ? this._schemaInfo.type = value : this._schemaInfo.type;\n            },\n            name: function (value) {\n                return value !== undefined ? this._schemaInfo.name = value : this._schemaInfo.name;\n            },\n            html: function (value) {\n                return value !== undefined ? this._schemaInfo.html.push(value) : this._schemaInfo.html.join(\" \");\n            },\n            isRequired: function (value) {\n                return value !== undefined ? this._schemaInfo.isRequired = value : this._schemaInfo.isRequired;\n            },\n            rowNum: function (value) {\n                return value !== undefined ? this._schemaInfo.rowNum = value : this._schemaInfo.rowNum;\n            },\n            tipMsg: function (value) {\n                return value !== undefined ? this._schemaInfo.tipMsg.push(value) : this._schemaInfo.tipMsg;\n            },\n            checkValues: function (value) {\n                return value !== undefined ? this._schemaInfo.checkValues.push(value) : this._schemaInfo.checkValues;\n            },\n            notShowEdit: function (value) {\n                return value !== undefined ? this._schemaInfo.notShowEdit = value : this._schemaInfo.notShowEdit;\n            },\n            schemaInfo: function () {\n                return this._schemaInfo;\n            }\n        };\n\n        return SchemaFactory;\n    });\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 16/1/11\n */\n\nangular.module('voyageone.angular.factories.selectRows', [])\n\n    // selectRowsFactory\n    .factory('selectRowsFactory', function () {\n        return function (config) {\n            var _selectRowsInfo = config ? config : {\n                selAllFlag: false,\n                currPageRows: [],// [{id: \"12345\"}], [{id: \"123456\", name: \"test1\"}]\n                selFlag:[], // [{\"12345\": true}, {\"12346\": false}]\n                selList: [] // [{id: \"12345\"}], [{id: \"123456\", name: \"test1\"}]\n            };\n\n            this.selAllFlag = function (value) {\n                return value !== undefined ? _selectRowsInfo.selAllFlag = value : _selectRowsInfo.selAllFlag;\n            };\n\n            this.clearCurrPageRows = function () {\n                _selectRowsInfo.currPageRows = [];\n            };\n\n            this.currPageRows = function (value) {\n                return value !== undefined ? _selectRowsInfo.currPageRows.push(value) : _selectRowsInfo.currPageRows;\n            };\n\n            this.selFlag = function (value) {\n                return value !== undefined ? _selectRowsInfo.selFlag.push(value) : _selectRowsInfo.selFlag;\n            };\n\n            this.selList = function (value) {\n                return value !== undefined ? _selectRowsInfo.selList.push(value) : _selectRowsInfo.selList;\n            };\n\n            this.selectRowsInfo = _selectRowsInfo;\n        }\n    });\n/**\n * @User: Edward\n * @Version: 2.0.0, 2015-12-09\n */\n\nangular.module('voyageone.angular.factories.vpagination', [])\n    .factory('vpagination', function () {\n\n        /**\n         * 创建一个分页服务\n         * @param {{ curr: number, size: number, total: number, fetch: function }} config 配置\n         */\n        return function (config) {\n\n            var _pages, _lastTotal = 0, _showPages = [];\n\n            /**\n             * 返回总件数\n             * @returns {*}\n             */\n            this.getTotal = function () {\n                return config.total;\n            };\n\n            /**\n             * 返回当前页的开始和结束号\n             * @returns {{start: number, end: number}}\n             */\n            this.getCurr = function () {\n                return {\n                    pageNo: curr(),\n                    start: getCurrStartItems(),\n                    end: getCurrEndItems(),\n                    isFirst: isFirst(),\n                    isLast: isLast(),\n                    pages: createShowPages(),\n                    isShowStart: isShowStart(),\n                    isShowEnd: isShowEnd()\n                }\n            };\n\n            // 跳转到指定页\n            this.goPage = load;\n            // 返回总页数\n            this.getPageCount = getPages;\n            // 是否是当前页\n            this.isCurr = isCurr;\n\n            /**\n             * 跳转到指定页\n             * @param {number} page 页号\n             */\n            function load(page) {\n                page = page || config.curr;\n\n                if (page < 1 || page > getPages() || isCurr(page)) return;\n\n                config.curr = page;\n\n                config.fetch(page, config.size);\n            }\n\n            /**\n             * 初始化page列表\n             * @returns {Array}\n             */\n            function createShowPages () {\n\n                var minPage, maxPage, _showPages= [];\n                if (config.curr < config.showPageNo) {\n                    minPage = 1;\n                    if(_pages <= config.showPageNo) maxPage = _pages;\n                    else maxPage = config.showPageNo;\n                } else if (config.curr + 2 > _pages) {\n                    minPage = _pages + 1 - config.showPageNo;\n                    maxPage = _pages;\n                } else {\n                    minPage = config.curr + 3 - config.showPageNo;\n                    maxPage = config.curr + 2;\n                }\n\n                // 按照指定数量创建按钮\n                for (var i =  minPage; i <= maxPage; i++) {\n                    //scope.pages.push({num: 1, active: \"\", show: false});\n                    _showPages.push(i);\n                }\n\n                return _showPages;\n            }\n\n            /**\n             * 获取当前总页数\n             * @returns {number}\n             */\n            function getPages() {\n                if (_lastTotal != config.total) {\n                    _pages = parseInt(config.total / config.size) + ((config.total % config.size) > 0 ? 1 : 0);\n                    _lastTotal = config.total;\n                }\n                return _pages;\n            }\n\n            /**\n             * 返回当前页的起始号\n             * @returns {number}\n             */\n            function getCurrStartItems() {\n                return (config.curr - 1) * config.size + 1\n            }\n\n            /**\n             * 返回当前页的结束号\n             * @returns {number}\n             */\n            function getCurrEndItems() {\n                var currEndItems = config.curr * config.size;\n                return currEndItems <= config.total ? currEndItems : config.total;\n\n            }\n\n            /**\n             * 是否是最后一页\n             * @returns {boolean}\n             */\n            function isLast() {\n                return config.curr == getPages();\n            }\n\n            /**\n             * 是否是第一页\n             * @returns {boolean}\n             */\n            function isFirst() {\n                return config.curr == 1;\n            }\n\n            /**\n             * 是否是当前页\n             * @param page 页码\n             * @returns {boolean}\n             */\n            function isCurr(page) {\n                return config.curr == page;\n            }\n\n            function curr() {\n                return config.curr;\n            }\n\n            /**\n             * 是否显示开始...项目\n             * @returns {boolean}\n             */\n            function isShowStart () {\n                _showPages = createShowPages();\n                return _showPages[0] > 1\n            }\n\n            /**\n             * 是否显示结束...项目\n             * @returns {boolean}\n             */\n            function isShowEnd () {\n                _showPages = createShowPages();\n                return _showPages[_showPages.length - 1] < _pages;\n            }\n\n        };\n    });\n/**\n * @description\n *\n * 自动创建基于地址定义的数据访问 service.\n * 传入的定义必须是 {object}, 并且至少有 root 属性\n *\n * @User: Jonas\n * @Date: 2015-12-10 19:32:37\n * @Version: 2.0.0\n */\n\n//@Skip\nangular.module('voyageone.angular.vresources', [])\n  .provider('$vresources', [\"$provide\", function ($provide) {\n\n    /**\n     * @description 构建请求地址的 url\n     * @param {string} root 请求的根路径\n     * @param {string} action 请求的名称\n     * @returns {string}\n     */\n    function getActionUrl(root, action) {\n      return root + (root.lastIndexOf('/') === root.length - 1 ? '' : '/') + action;\n    }\n\n    /**\n     * 闭包声明一个数据访问的 Service\n     * @param {string} name Service 的名称\n     * @param {object} actions 方法和地址定义\n     * @param {AjaxService} ajaxService 封装的 ajax 发送服务\n     */\n    function closureDataService(name, actions, ajaxService) {\n      /**\n       * @description 与 actions 一同闭包的构造函数\n       * @constructor\n       */\n      function DataResource() {\n        if (!actions) {\n          return;\n        }\n\n        if (typeof actions !== \"object\") {\n          console.log(\"Failed to new DataResource: [\" + actions + \"] is not a object\");\n          return;\n        }\n\n        if (!actions.root) {\n          console.log(\"Failed to new DataResource: no root prop\" + (JSON && JSON.stringify ? \": \" + JSON.stringify(actions) : \"\"));\n          return;\n        }\n\n        // 遍历配置\n        for (var name in actions) {\n          // 不对 root 进行创建\n          if (name === \"root\") continue;\n          // 额外的检查\n          if (actions.hasOwnProperty(name)) {\n            // 闭包创建函数\n            this[name] = (function (actionUrl) {\n              return function (data) {\n                return ajaxService.post(actionUrl, data);\n              };\n            })(getActionUrl(actions.root, actions[name]));\n          }\n        }\n      }\n\n      $provide.service(name, DataResource);\n    }\n\n    this.$get = [\"ajaxService\", function (ajaxService) {\n\n      return {\n        register: function (name, actions) {\n\n          if (!actions) return;\n\n          if (typeof actions !== 'object') return;\n\n          // 如果有 root 这个属性,就创建 service\n          if (actions.root) {\n            closureDataService(name, actions, ajaxService);\n            return;\n          }\n\n          // 否则继续访问子属性\n          for (var childName in actions) {\n            // 额外的检查\n            if (actions.hasOwnProperty(childName)) {\n\n              this.register(childName, actions[childName]);\n            }\n          }\n        }\n      };\n    }];\n  }])\n\n  .run([\"$vresources\", \"$actions\", function ($vresources, $actions) {\n    $vresources.register(null, $actions);\n  }]);\n/**\n * @Date:    2015-11-16 18:48:29\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\n$Ajax.$inject = [\"$http\", \"blockUI\", \"$q\"];\nAjaxService.$inject = [\"$q\", \"$ajax\", \"messageService\"];\nangular.module('voyageone.angular.services.ajax', [])\n  .service('$ajax', $Ajax)\n  .service('ajaxService', AjaxService);\n\nfunction $Ajax($http, blockUI, $q) {\n  this.$http = $http;\n  this.blockUI = blockUI;\n  this.$q = $q;\n}\n$Ajax.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n  this.$http.post(url, data).then(function (response) {\n    var res = response.data;\n    if (!res) {\n      alert('相应结果不存在?????');\n      defer.reject(null);\n      return;\n    }\n    if (res.message || res.code) {\n      defer.reject(res);\n      return;\n    }\n    defer.resolve(res);\n  }, function (response) {\n    defer.reject(null, response);\n  });\n  return defer.promise;\n};\n\nfunction AjaxService($q, $ajax, messageService) {\n  this.$q = $q;\n  this.$ajax = $ajax;\n  this.messageService = messageService;\n}\nAjaxService.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n\n  this.$ajax.post(url, data).then(function(res) {\n    // 成功\n    defer.resolve(res);\n    return res;\n  }, (function (_this) {\n    // 失败\n    return function(res) {\n      _this.messageService.show(res);\n      defer.reject(res);\n      return res;\n    };\n  })(this));\n\n  return defer.promise;\n};\n/**\n * @Date:    2015-11-16 20:30:37\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nCookieService.$inject = [\"$cookieStore\"];\nangular.module('voyageone.angular.services.cookie', [])\n    .service('cookieService', CookieService);\n\nvar keys = {\n    language: 'voyageone.user.language',\n    company: 'voyageone.user.company',\n    channel: 'voyageone.user.channel',\n    application: \"voyageone.user.application\"\n};\n\nfunction gentProps(key) {\n    return function (val) {\n        if (arguments.length === 1) {\n            return this.set(key, val);\n        } else if (arguments.length > 1) {\n            return this.set(key, arguments);\n        }\n        return this.get(key);\n    };\n}\n\nfunction CookieService($cookieStore) {\n    this.$cookieStore = $cookieStore;\n}\n\nCookieService.prototype.get = function (key) {\n    var result = this.$cookieStore.get(key);\n    return result == undefined || result == null ? \"\" : this.$cookieStore.get(key);\n};\n\nCookieService.prototype.set = function (key, value) {\n    return this.$cookieStore.put(key, value);\n};\n\nCookieService.prototype.language = gentProps(keys.language);\n\nCookieService.prototype.company = gentProps(keys.company);\n\nCookieService.prototype.channel = gentProps(keys.channel);\n\nCookieService.prototype.application = gentProps(keys.application);\n\nCookieService.prototype.removeAll = function () {\n    this.$cookieStore.remove(keys.language);\n    this.$cookieStore.remove(keys.company);\n    this.$cookieStore.remove(keys.channel);\n    this.$cookieStore.remove(keys.application);\n};\n\n/**\n * 对后台的信息进行自动处理\n * @Date:    2015-11-19 14:47:23\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nMessageService.$inject = [\"alert\", \"confirm\", \"notify\"];\nangular.module('voyageone.angular.services.message', [])\n  .service('messageService', MessageService);\n\n// 同步,DisplayType 枚举\nvar DISPLAY_TYPES = {\n  /**\n   * 弹出提示\n   */\n  ALERT: 1,\n  /**\n   * 顶端弹出自动关闭\n   */\n  NOTIFY: 2,\n  /**\n   * 右下弹出自动关闭\n   */\n  POP: 3,\n  /**\n   * 用户自定义处理\n   */\n  CUSTOM: 4\n};\n\nfunction MessageService(alert, confirm, notify) {\n  this.alert = alert;\n  this.confirm = confirm;\n  this.notify = notify;\n}\n\nMessageService.prototype = {\n  /**\n   * 根据类型自动显示信息\n   * @param {{displayType:Number, message:String}} res\n   */\n  show: function(res) {\n\n    var displayType = res.displayType;\n    var message = res.message;\n\n    switch (displayType) {\n      case DISPLAY_TYPES.ALERT:\n        this.alert(message);\n        break;\n      case DISPLAY_TYPES.NOTIFY:\n        this.notify(message);\n        break;\n      case DISPLAY_TYPES.POP:\n        this.notify({message: message, position: 'right bottom'});\n        break;\n    }\n  }\n};\n/**\n * @Date:    2015-11-19 14:26:43\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nPermissionService.$inject = [\"$rootScope\"];\nangular.module('voyageone.angular.services.permission', [])\n  .service('permissionService', PermissionService);\n\nfunction PermissionService($rootScope) {\n  this.$rootScope = $rootScope;\n  this.permissions = [];\n}\n\nPermissionService.prototype = {\n  /**\n   * set the action permissions.\n   * @param permissions\n   */\n  setPermissions: function(permissions) {\n    this.permissions = permissions;\n    this.$rootScope.$broadcast('permissionsChanged');\n  },\n  /**\n   * check the permission has been in action permissions.\n   * @param permission\n   * @returns {boolean|*}\n   */\n  has: function(permission) {\n    return _.contains(this.permissions, permission.trim());\n  }\n};\n\n/**\n * @Date:    2015-11-19 14:35:25\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nTranslateService.$inject = [\"$translate\"];\nangular.module('voyageone.angular.services.translate', [])\n  .service('translateService', TranslateService);\n\nfunction TranslateService($translate) {\n  this.$translate = $translate;\n}\n\nTranslateService.prototype = {\n  languages: {\n    en: \"en\",\n    zh: \"zh\"\n  },\n  /**\n   * set the web side language type.\n   * @param key\n   */\n  setLanguage: function(language) {\n    if (!_.contains(this.languages, language)) {\n      language = this.getBrowserLanguage();\n    }\n    this.$translate.use(language);\n    return language;\n  },\n  /**\n   * get the browser language type.\n   * @returns {string}\n   */\n  getBrowserLanguage: function() {\n    var currentLang = navigator.language;\n    if (!currentLang)\n      currentLang = navigator.browserLanguage;\n    return currentLang.substr(0, 2);\n  }\n};\nangular.module(\"voyageone.angular.controllers\",[\"voyageone.angular.controllers.datePicker\",\"voyageone.angular.controllers.selectRows\",\"voyageone.angular.controllers.showPopover\"]);\nangular.module(\"voyageone.angular.directives\",[\"voyageone.angular.directives.dateModelFormat\",\"voyageone.angular.directives.enterClick\",\"voyageone.angular.directives.fileStyle\",\"voyageone.angular.directives.ifNoRows\",\"voyageone.angular.directives.uiNav\",\"voyageone.angular.directives.schema\",\"voyageone.angular.directives.voption\",\"voyageone.angular.directives.vpagination\",\"voyageone.angular.directives.validator\"]);\nangular.module(\"voyageone.angular.factories\",[\"voyageone.angular.factories.dialogs\",\"voyageone.angular.factories.interceptor\",\"voyageone.angular.factories.notify\",\"voyageone.angular.factories.pppAutoImpl\",\"voyageone.angular.factories.schema\",\"voyageone.angular.factories.selectRows\",\"voyageone.angular.factories.vpagination\"]);\nangular.module(\"voyageone.angular.services\",[\"voyageone.angular.services.ajax\",\"voyageone.angular.services.cookie\",\"voyageone.angular.services.message\",\"voyageone.angular.services.permission\",\"voyageone.angular.services.translate\"]);\nreturn angular.module(\"voyageone.angular\",[\"voyageone.angular.controllers\",\"voyageone.angular.directives\",\"voyageone.angular.factories\",\"voyageone.angular.services\"])});","/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.dateModelFormat', [])\n    .directive('dateModelFormat', function ($filter) {\n        return {\n            restrict: \"A\",\n            require: 'ngModel',\n            link: function (scope, elem, attrs, ngModel) {\n                ngModel.$parsers.push(function (viewValue) {\n                    return $filter('date')(viewValue, attrs.dateModelFormat || 'yyyy-MM-dd HH:mm:ss');\n                });\n            }\n        };\n    });\n","/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.directives.enterClick', [])\n    .directive('enterClick', function () {\n        return {\n            restrict: \"A\",\n            link: function (scope, elem, attr) {\n\n                angular.element(elem).on('keyup', function (e) {\n\n                    if (e.keyCode !== 13) return;\n\n                    var selectExp = attr.enterClick;\n\n                    var targetElem, handler = function () {\n                        targetElem.triggerHandler('click');\n                    };\n\n                    try {\n                        targetElem = document.querySelector(selectExp);\n                    } catch (e) {\n                        targetElem = null;\n                    }\n\n                    if (!targetElem) {\n                        // 如果取不到元素，则尝试作为表达式执行\n                        handler = function () {\n                            scope.$eval(selectExp);\n                        };\n                    } else {\n                        targetElem = angular.element(targetElem);\n                        // 如果元素存在，但是是禁用状态的，放弃执行\n                        if (targetElem.attr(\"disabled\")) return;\n                    }\n\n                    handler();\n                });\n            }\n        };\n    });\n","/**\n * @Description:\n * 引入对上传框插件 fileStyle 的指令支持\n * @Date:    2015-11-19 17:35:22\n * @User:    Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.fileStyle', [])\n  .directive('fileStyle', function () {\n    return {\n      restrict: 'A',\n      controller: [\"$scope\", \"$element\", function ($scope, $element) {\n        var options = $element.data();\n        // old usage support\n        options.classInput = $element.data('classinput') || options.classInput;\n        if ($element.filestyle) {\n          $element.filestyle(options);\n        }\n      }]\n    };\n  });","/**\n * @Description:\n * table中无数据范围的数据\n * @User: linanbin\n * @Version: 2.0.0, 15/12/11\n */\n\nangular.module('voyageone.angular.directives.ifNoRows', [])\n    .directive('ifNoRows', function ($templateCache, $compile) {\n\n        var tempNoDataKey = \"voyageone.angular.directives.ifNoRows.tpl.html\";\n\n        // 没有数据显示警告\n        if (!$templateCache.get(tempNoDataKey)) {\n            $templateCache.put(tempNoDataKey,\n            '<div class=\"text-center text-hs\" id=\"noData\">\\n' +\n            '    <h4 class=\"text-vo\"><i class=\"icon fa fa-warning\"></i>&nbsp;{{\\'TXT_ALERT\\' | translate}}</h4>\\n' +\n            '{{\\'TXT_MSG_NO_DATE\\' | translate}}' +\n            '</dv>');\n        }\n\n        return {\n            restrict: \"A\",\n            replace: false,\n            scope: {\n                $$data: \"@ifNoRows\"\n            },\n            link: function (scope, element) {\n\n                scope.$parent.$watch(scope.$$data, function () {\n\n                    // 如果数据不存在则显示警告信息\n                    if(scope.$parent.$eval(scope.$$data)  == 0) {\n                        element.find(\"#noData\").remove();\n                        element.append($compile($templateCache.get(tempNoDataKey))(scope));\n                    } else {\n                        element.find(\"#noData\").remove();\n                    }\n                })\n            }\n        };\n    });\n","/**\n * @Description:\n * 用于菜单目录二级展开\n * @User:    Jonas\n * @Version: 0.2.0, 2015-12-07\n */\n\nangular.module('voyageone.angular.directives.uiNav', [])\n    .directive('uiNav', function () {\n\n        return {\n            restrict: 'AC',\n            link: function(scope, el) {\n                var _window = $(window),\n                    _mb = 768,\n                    wrap = $('.app-aside'),\n                    next,\n                    backdrop = '.dropdown-backdrop';\n                // unfolded\n                el.on('click', 'a', function(e) {\n                    next && next.trigger('mouseleave.nav');\n                    var _this = $(this);\n                    _this.parent().siblings( \".active\" ).toggleClass('active');\n                    _this.next().is('ul') &&  _this.parent().toggleClass('active') &&  e.preventDefault();\n                    // mobile\n                    _this.next().is('ul') || ( ( _window.width() < _mb ) && $('.app-aside').removeClass('show off-screen') );\n                });\n\n                // folded & fixed\n                el.on('mouseenter', 'a', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                    if ( !$('.app-aside-fixed.app-aside-folded').length || ( _window.width() < _mb ) || $('.app-aside-dock').length) return;\n                    var _this = $(e.target)\n                        , top\n                        , w_h = $(window).height()\n                        , offset = 50\n                        , min = 150;\n\n                    !_this.is('a') && (_this = _this.closest('a'));\n                    if( _this.next().is('ul') ){\n                        next = _this.next();\n                    }else{\n                        return;\n                    }\n\n                    _this.parent().addClass('active');\n                    top = _this.parent().position().top + offset;\n                    next.css('top', top);\n                    if( top + next.height() > w_h ){\n                        next.css('bottom', 0);\n                    }\n                    if(top + min > w_h){\n                        next.css('bottom', w_h - top - offset).css('top', 'auto');\n                    }\n                    next.appendTo(wrap);\n\n                    next.on('mouseleave.nav', function(e){\n                        $(backdrop).remove();\n                        next.appendTo(_this.parent());\n                        next.off('mouseleave.nav').css('top', 'auto').css('bottom', 'auto');\n                        _this.parent().removeClass('active');\n                    });\n\n                    $('.smart').length && $('<div class=\"dropdown-backdrop\"/>').insertAfter('.app-aside').on('click', function(next){\n                        next && next.trigger('mouseleave.nav');\n                    });\n\n                });\n\n                wrap.on('mouseleave', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                });\n            }\n        };\n    });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/24\n */\n\nangular.module('voyageone.angular.directives.schema', [])\n    // 定义fieldTypes\n    .constant('fieldTypes', {\n        INPUT: \"INPUT\",\n        DATE: \"DATE\",\n        DATETIME: \"DATETIME\",\n        TEXTAREA: \"TEXTAREA\",\n        SINGLE_CHECK: \"SINGLECHECK\",// 在complex中的显示select,以外的默认显示singlecheck,如果用户觉得select显示不方便,就将该field的type改成radio\n        RADIO: \"RADIO\",\n        MULTI_INPUT: \"MULTIINPUT\", // 没有被使用\n        MULTI_CHECK: \"MULTICHECK\",\n        COMPLEX: \"COMPLEX\", // TODO\n        MULTI_COMPLEX: \"MULTICOMPLEX\",\n        LABEL: \"LABEL\"  // 可以不显示\n    })\n    // 定义ruleTypes\n    .constant('ruleTypes', {\n        VALUE_TYPE_RULE: \"valueTypeRule\",\n        REQUIRED_RULE: \"requiredRule\",\n        DISABLE_RULE: \"disableRule\",\n        READ_ONLY_RULE: \"readOnlyRule\",\n        REGEX_RULE: \"regexRule\",\n        SET_RULE: \"setRule\", // TODO 暂时不知道怎么用\n        TIP_RULE: \"tipRule\", // TODO 不需要处理\n        DEV_TIP_RULE: \"devTipRule\", // 不需要处理\n        MIN_LENGTH_RULE: \"minLengthRule\",\n        MAX_LENGTH_RULE: \"maxLengthRule\",\n        MIN_VALUE_RULE: \"minValueRule\",\n        MAX_VALUE_RULE: \"maxValueRule\",\n        MIN_INPUT_NUM_RULE: \"minInputNumRule\",\n        MAX_INPUT_NUM_RULE: \"maxInputNumRule\",\n        MIN_DECIMAL_DIGITS_RULE: \"minDecimalDigitsRule\", // TODO\n        MAX_DECIMAL_DIGITS_RULE: \"maxDecimalDigitsRule\", // TODO\n        MIN_TARGET_SIZE_RULE: \"minTargetSizeRule\", // TODO\n        MAX_TARGET_SIZE_RULE: \"maxTargetSizeRule\", // TODO\n        MIN_IMAGE_SIZE_RULE: \"minImageSizeRule\", // TODO\n        MAX_IMAGE_SIZE_RULE: \"maxImageSizeRule\" // TODO\n    })\n    // 定义valueTypes\n    .constant('valueTypes', {\n        TEXT: \"text\",\n        DECIMAL: \"decimal\",\n        INTEGER: \"integer\",\n        LONG: \"long\",\n        DATE: \"date\",\n        TIME: \"time\",\n        URL: \"url\",\n        TEXTAREA: \"textarea\",\n        HTML: \"html\"\n    })\n\n    .directive('schemaHeader', function ($templateCache, schemaHeaderFactory, fieldTypes, ruleTypes, valueTypes) {\n\n        // 定义header\n        var templateKey_header = \"voyageone.angular.directives.schemaHeader.tpl.html\";\n        if (!$templateCache.get(templateKey_header)) {\n            $templateCache.put(templateKey_header\n                ,\n                '<div class=\"form-group\">' +\n                '<label class=\"col-sm-2 control-label\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" ng-bind=\"$$data.name\"></label>' +\n                '<div class=\"col-sm-8\" ng-class=\"{\\'modal-open\\' : showHtmlData.isMultiComplex, \\'hierarchy_main\\': showHtmlData.isComplex}\" ng-transclude></div>' +\n                '<div class=\"col-sm-2\" ng-if=\"showHtmlData.isMultiComplex\"><button class=\"btn btn-success\" ng-click=\"addField($$data)\"><i class=\"fa fa-plus\"></i>{{\\'BTN_ADD\\' | translate}}</button></div>' +\n                '<div class=\"row\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><div class=\"col-sm-8 col-sm-offset-2 text-warnings\"><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div></div>' +\n                '</div>');\n        }\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            transclude: true,\n            templateUrl: templateKey_header,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope) {\n\n                var schemaHeader = new schemaHeaderFactory();\n\n                _returnType(scope.$$data.type);\n                _operateRule(scope.$$data.rules);\n\n                scope.showHtmlData = angular.copy(schemaHeader.schemaHearInfo);\n\n                /**\n                 * 设置multi complex添加一条新记录\n                 * @param data\n                 */\n                scope.addField = function (data) {\n                    var newFieldMap = {};\n                    angular.forEach(data.fields, function (field) {\n                        newFieldMap[field.id] = field;\n                        //eval(\"newFieldMap.\" + field.id + \"=field\");\n                    });\n\n                    data.complexValues.push({fieldMap: angular.copy(newFieldMap)});\n                };\n\n                /**\n                 * 返回需要展示的页面样式\n                 * @param type\n                 * @param valueTypeRule\n                 * @private\n                 */\n                function _returnType(type) {\n\n                    switch (type) {\n                        case fieldTypes.MULTI_COMPLEX:\n                            schemaHeader.isMultiComplex(true);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            schemaHeader.isComplex(true);\n                            break;\n                    }\n                }\n\n                /**\n                 * 处理rules\n                 * @param rules\n                 * @private\n                 */\n                function _operateRule(rules) {\n                    angular.forEach(rules, function (rule) {\n                        switch (rule.name) {\n                            case ruleTypes.REQUIRED_RULE:\n                                _requiredRule(rule);\n                                break;\n                            case ruleTypes.TIP_RULE:\n                                _tipRule(rule);\n                                break;\n                        }\n                    })\n\n                }\n\n                /**\n                 * 处理requiredRule\n                 * @param requiredRule\n                 * @private\n                 */\n                function _requiredRule(requiredRule) {\n                    if (\"true\" == requiredRule.value) {\n                        schemaHeader.isRequired(true);\n                    }\n                }\n\n                /**\n                 * 处理tipRule\n                 * @param tipRule\n                 * @private\n                 */\n                function _tipRule(tipRule) {\n                    schemaHeader.tipMsg(tipRule.value);\n                }\n            }\n        }\n    })\n\n    .directive('schemaItem', function ($templateCache, $compile, schemaFactory, fieldTypes, ruleTypes, valueTypes) {\n\n        // label\n        var templateKey_label = \"voyageone.angular.directives.schemaLabel.tpl.html\";\n        if (!$templateCache.get(templateKey_label)) {\n            $templateCache.put(templateKey_label,\n                '<input style=\"min-width: 150px; max-width: 250px;\" type=\"text\" readonly ng-model=\"vm.$$data.value\" class=\"form-control inherited\">');\n        }\n\n        // input\n        var templateKey_input = \"voyageone.angular.directives.schemaInput.tpl.html\";\n        if (!$templateCache.get(templateKey_input)) {\n            $templateCache.put(templateKey_input,\n                '<input style=\"min-width: 150px; max-width: 250px;\" ng-model=\"vm.$$data.value\" class=\"form-control inherited\" replaceInfo>');\n        }\n\n        // data\n        var templateKey_date = \"voyageone.angular.directives.schemaDate.tpl.html\";\n        if (!$templateCache.get(templateKey_date)) {\n            $templateCache.put(templateKey_date,\n                '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input replaceInfo type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDate}}\" ng-model=\"$parent.vm.$$data.value\" date-model-format=\"{{formatDate}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button replaceInfo type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>');\n        }\n\n        // datetime\n        var templateKey_datetime = \"voyageone.angular.directives.schemaDatetime.tpl.html\";\n        if (!$templateCache.get(templateKey_datetime)) {\n            $templateCache.put(templateKey_datetime,\n                '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input replaceInfo type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDateTime}}\" ng-model=\"$parent.vm.$$data.value\" date-model-format=\"{{formatDateTime}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button replaceInfo type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>');\n        }\n\n        // textarea\n        var templateKey_textarea = \"voyageone.angular.directives.schemaTextarea.tpl.html\";\n        if (!$templateCache.get(templateKey_textarea)) {\n            $templateCache.put(templateKey_textarea,\n                '<textarea style=\"min-width: 150px; max-width: 650px;\" class=\"form-control no-resize\" ng-model=\"vm.$$data.value\" rows=\"{{showHtmlData.rowNum}}\" replaceInfo></textarea>');\n        }\n\n        // single check-select\n        var templateKey_select = \"voyageone.angular.directives.schemaSelect.tpl.html\";\n        if (!$templateCache.get(templateKey_select)) {\n            $templateCache.put(templateKey_select,\n                '<select style=\"min-width: 150px; max-width: 250px;\" replaceInfo class=\"form-control\" ng-model=\"vm.$$data.value.value\" ng-options=\"option.value as option.displayName for option in vm.$$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');\n        }\n\n        // single check-radio\n        var templateKey_radio = \"voyageone.angular.directives.schemaRadio.tpl.html\";\n        if (!$templateCache.get(templateKey_radio)) {\n            $templateCache.put(templateKey_radio,\n                '<label class=\"checkbox-inline c-radio\" ng-repeat=\"option in vm.$$data.options\"><input name=\"{{vm.$$data.id}}\" type=\"radio\" ng-value=\"option.value\" ng-model=\"vm.$$data.value.value\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>');\n        }\n\n        // multi check-checkbox\n        var templateKey_checkbox = \"voyageone.angular.directives.schemaCheckbox.tpl.html\";\n        if (!$templateCache.get(templateKey_checkbox)) {\n            $templateCache.put(templateKey_checkbox,\n                '<label class=\"checkbox-inline c-checkbox\" ng-repeat=\"option in vm.$$data.options\"><input type=\"checkbox\" ng-value=\"option.value\" ng-click=\"checkboxValue(option.value)\" ng-checked=\"isSelected(option.value)\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>');\n        }\n\n        // multi complex\n        var templateKey_multiComplex = \"voyageone.angular.directives.schemaMultiComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_multiComplex)) {\n            $templateCache.put(templateKey_multiComplex,\n                '<table class=\"table text-center\">' +\n                '<thead><tr>' +\n                    //'<schema-header ng-repeat=\"field in vm.$$data.fields\" data=\"field\" is-complex=\"true\"></schema-header>' +\n                '<th ng-repeat=\"field in vm.$$data.fields\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" class=\"text-center\" style=\"min-width: 180px;\">{{field.name}}</th>' +\n                '<th ng-if=\"!showHtmlData.notShowEdit\" style=\"min-width: 60px;\" class=\"text-center\" translate=\"TXT_ACTION\"></th>' +\n                '</tr></thead>' +\n                '<tbody><tr ng-repeat=\"value in vm.$$data.complexValues\">' +\n                '<td class=\"text-left\" ng-repeat=\"field in value.fieldMap\"><div class=\"tableLayer\"><p ng-if=\"field.type != \\'COMPLEX\\'\">&nbsp;</p><p><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></p></div></td>' +\n                '<td ng-if=\"!showHtmlData.notShowEdit\" style=\"min-width: 60px;\"><button title=\"{\\'BTN_DELETE\\' | translate}\" class=\"btn btn-danger btn-xs\" ng-click=\"delField($index)\"><i class=\"fa  fa-trash-o\"></i></button></td>' +\n                '</tr></tbody>' +\n                '</table>');\n        }\n\n        // complex\n        var templateKey_complex = \"voyageone.angular.directives.schemaComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_complex)) {\n            $templateCache.put(templateKey_complex,\n                '<schema-header ng-repeat=\"field in vm.$$data.fields\" data=\"field\"><schema-item data=\"field\" ></schema-item></schema-header>');\n        }\n\n        // complex\n        var templateKey_multi_in_complex = \"voyageone.angular.directives.schemaMultiInComplex.tpl.html\";\n        if (!$templateCache.get(templateKey_multi_in_complex)) {\n            $templateCache.put(templateKey_multi_in_complex,\n                '<div ng-repeat=\"field in vm.$$data.fields\"><p ng-bind=\"field.name\"></p><p><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></p></div>');\n        }\n\n        // multi complex tip\n        var templateKey_multiComplex_tip = \"voyageone.angular.directives.schemaMultiComplexTip.tpl.html\";\n        if (!$templateCache.get(templateKey_multiComplex_tip)) {\n            $templateCache.put(templateKey_multiComplex_tip,\n                '<div class=\"text-warnings\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><br><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div>');\n        }\n\n        return {\n            restrict: \"E\",\n            require: ['^?form'],\n            replace: true,\n            bindToController: true,\n            controllerAs: \"vm\",\n            controller: function () {\n            },\n            scope: {\n                $$data: \"=data\",\n                $$hastip: \"=hastip\",\n                $$complex: \"=complex\",\n                $$notShowEdit: \"=notShowEdit\"\n            },\n            link: function (scope, element, ctrl, attr) {\n\n                // 监视配置变动\n                scope.$watch('vm.$$data', function () {\n                    refresh();\n                });\n\n                function refresh() {\n\n                    var schema = new schemaFactory();\n                    scope.vm.$$from = ctrl;\n\n                    // 设置空间name\n                    schema.name(scope.vm.$$data.id);\n\n                    // 设置edit是否显示\n                    schema.notShowEdit(scope.vm.$$notShowEdit == undefined ? false : scope.vm.$$notShowEdit);\n\n                    _returnType(scope.vm.$$data.type);\n                    _operateRule(scope.vm.$$data.rules);\n\n                    var tempHtml = \"\";\n                    // 拼接body\n                    switch (schema.type()) {\n                        case fieldTypes.INPUT:\n                            tempHtml = $templateCache.get(templateKey_input).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.DATE:\n                            tempHtml = $templateCache.get(templateKey_date).replace(\"replaceInfo\", schema.html()).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.DATETIME:\n                            tempHtml = $templateCache.get(templateKey_datetime).replace(\"replaceInfo\", schema.html()).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.TEXTAREA:\n                            tempHtml = $templateCache.get(templateKey_textarea).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.SINGLE_CHECK:\n                            tempHtml = $templateCache.get(templateKey_select).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.RADIO:\n                            tempHtml = $templateCache.get(templateKey_radio).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.MULTI_CHECK:\n                            tempHtml = $templateCache.get(templateKey_checkbox).replace(\"replaceInfo\", schema.html());\n                            break;\n                        case fieldTypes.LABEL:\n                            tempHtml = $templateCache.get(templateKey_label);\n                            break;\n                        case fieldTypes.MULTI_COMPLEX:\n                            tempHtml = $templateCache.get(templateKey_multiComplex);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            tempHtml = scope.vm.$$complex ? $templateCache.get(templateKey_multi_in_complex) : $templateCache.get(templateKey_complex);\n                            break;\n                    }\n\n                    // 添加规则说明\n                    if (schema.tipMsg() != null && scope.vm.$$hastip) {\n                        tempHtml += $templateCache.get(templateKey_multiComplex_tip);\n                    }\n\n                    // 包裹 ng-form\n                    tempHtml = '<ng-form>' + tempHtml + '</ng-form>';\n\n                    scope.showHtmlData = angular.copy(schema.schemaInfo());\n                    element.html($compile(tempHtml)(scope));\n\n                    /**\n                     * 设置checkbox被选中的value值处理\n                     * @param value\n                     */\n                    scope.checkboxValue = function (value) {\n                        if (_.contains(scope.showHtmlData.checkValues, value)) {\n                            scope.showHtmlData.checkValues.splice(_.indexOf(scope.showHtmlData.checkValues, value), 1);\n                        } else {\n                            scope.showHtmlData.checkValues.push(value);\n                        }\n                        scope.vm.$$data.values = [];\n                        angular.forEach(scope.showHtmlData.checkValues, function (obj) {\n                            scope.vm.$$data.values.push({id: null, value: obj});\n                        })\n                    };\n\n                    /**\n                     * 判断是否被选中\n                     * @param value\n                     */\n                    scope.isSelected = function (value) {\n                        return _.contains(scope.showHtmlData.checkValues, value)\n                    };\n\n                    /**\n                     * 设置multi complex删除该条记录\n                     * @param index\n                     */\n                    scope.delField = function (index) {\n                        scope.vm.$$data.complexValues.splice(index, 1);\n                    };\n\n                    /**\n                     * 返回需要展示的页面样式\n                     * @param type\n                     * @param valueTypeRule\n                     * @private\n                     */\n                    function _returnType(type) {\n                        schema.type(type);\n                        switch (type) {\n                            case fieldTypes.RADIO:\n                                if (scope.vm.$$complex)\n                                    schema.type(fieldTypes.SINGLE_CHECK);\n                                break;\n                            case fieldTypes.MULTI_CHECK:\n                                _setCheckValues(scope.vm.$$data.values);\n                                break;\n                            case fieldTypes.MULTI_COMPLEX:\n                                scope.vm.$$data.complexValues = _resetMultiComplex(scope.vm.$$data);\n                                break;\n                            case fieldTypes.COMPLEX:\n                                _resetComplex(scope.vm.$$data);\n                                break;\n                        }\n                    }\n\n                    /**\n                     * 设置checkvalues\n                     * @param values\n                     * @private\n                     */\n                    function _setCheckValues(values) {\n                        if (values != undefined && values != null) {\n                            angular.forEach(values, function (obj) {\n                                schema.checkValues(obj.value);\n                            })\n                        }\n                    }\n\n                    /**\n                     * 重新设置multicomplex的一些属性\n                     * @param fields\n                     * @private\n                     */\n                    function _resetMultiComplex(data) {\n                        var tempValues = [];\n                        angular.forEach(data.complexValues, function (value) {\n                            var tempFieldMap = {};\n                            angular.forEach(data.fields, function (field) {\n                                var tempField = angular.copy(field);\n                                if (value.fieldMap[field.id] != undefined) {\n                                    switch (field.type) {\n                                        case fieldTypes.INPUT:\n                                        case fieldTypes.LABEL:\n                                        case fieldTypes.DATE:\n                                        case fieldTypes.DATETIME:\n                                        case fieldTypes.TEXTAREA:\n                                        case fieldTypes.SINGLE_CHECK:\n                                        case fieldTypes.RADIO:\n                                            tempField.value = value.fieldMap[field.id].value;\n                                            break;\n                                        case fieldTypes.MULTI_INPUT:\n                                        case fieldTypes.MULTI_CHECK:\n                                            tempField.values = value.fieldMap[field.id].values;\n                                            break;\n                                        case fieldTypes.COMPLEX:\n                                            tempField.complexValue = value.fieldMap[field.id].complexValue;\n                                            break;\n                                        case fieldTypes.MULTI_COMPLEX:\n                                            tempField.complexValues = value.fieldMap[field.id].complexValues;\n                                            break;\n                                    }\n                                }\n                                tempFieldMap[field.id] = tempField;\n                            });\n                            tempValues.push({fieldMap: angular.copy(tempFieldMap)});\n                        });\n\n                        // 如果values为空,默认添加空白行\n                        if (_.isEmpty(data.complexValues)) {\n                            var newFieldMap = {};\n                            angular.forEach(data.fields, function (field) {\n                                newFieldMap[field.id] = field;\n                                //eval(\"newFieldMap.\" + field.id + \"=field\");\n                            });\n\n                            tempValues.push({fieldMap: angular.copy(newFieldMap)});\n                        }\n\n                        return tempValues;\n                    }\n\n                    /**\n                     * 重新\n                     * @param data\n                     * @private\n                     */\n                    function _resetComplex(data) {\n                        angular.forEach(data.fields, function (field) {\n                            switch (field.type) {\n                                case fieldTypes.INPUT:\n                                case fieldTypes.LABEL:\n                                case fieldTypes.DATE:\n                                case fieldTypes.DATETIME:\n                                case fieldTypes.TEXTAREA:\n                                case fieldTypes.SINGLE_CHECK:\n                                case fieldTypes.RADIO:\n                                    if (!_.isEmpty(data.complexValue.fieldMap))\n                                        field.value = data.complexValue.fieldMap[field.id].value;\n                                    else\n                                        field.value = data.defaultComplexValue.fieldMap[field.id].value;\n                                    break;\n                                case fieldTypes.MULTI_INPUT:\n                                case fieldTypes.MULTI_CHECK:\n                                    if (!_.isEmpty(data.complexValue.fieldMap))\n                                        field.values = data.complexValue.fieldMap[field.id].values;\n                                    else\n                                        field.values = data.defaultComplexValue.fieldMap[field.id].values;\n                                    break;\n                                case fieldTypes.COMPLEX:\n                                    if (!_.isEmpty(data.complexValue.fieldMap))\n                                        field.complexValue = data.complexValue.fieldMap[field.id].complexValue;\n                                    else\n                                        field.complexValue = data.defaultComplexValue.fieldMap[field.id].complexValue;\n                                    break;\n                                case fieldTypes.MULTI_COMPLEX:\n                                    if (!_.isEmpty(data.complexValue.fieldMap))\n                                        field.complexValues = data.complexValue.fieldMap[field.id].complexValues;\n                                    else\n                                        field.complexValues = data.defaultComplexValue.fieldMap[field.id].complexValues;\n                                    break;\n                            }\n                        });\n                    }\n\n                    /**\n                     * 处理rules\n                     * @param rules\n                     * @private\n                     */\n                    function _operateRule(rules) {\n                        angular.forEach(rules, function (rule) {\n                            switch (rule.name) {\n                                case ruleTypes.VALUE_TYPE_RULE:\n                                    _valueTypeRule(rule);\n                                    break;\n                                case ruleTypes.REQUIRED_RULE:\n                                    _requiredRule(rule);\n                                    break;\n                                case ruleTypes.DISABLE_RULE:\n                                    _disableRule(rule);\n                                    break;\n                                case ruleTypes.READ_ONLY_RULE:\n                                    _readOnlyRule(rule);\n                                    break;\n                                case ruleTypes.REGEX_RULE:\n                                    _regexRule(rule);\n                                    break;\n                                case ruleTypes.TIP_RULE:\n                                    _tipRule(rule);\n                                    break;\n                                case ruleTypes.MIN_LENGTH_RULE:\n                                    _minLengthRule(rule);\n                                    break;\n                                case ruleTypes.MAX_LENGTH_RULE:\n                                    _maxLengthRule(rule);\n                                    break;\n                                case ruleTypes.MIN_VALUE_RULE:\n                                    _minValueRule(rule);\n                                    break;\n                                case ruleTypes.MAX_VALUE_RULE:\n                                    _maxValueRule(rule);\n                                    break;\n                                case ruleTypes.MIN_INPUT_NUM_RULE:\n                                    _minInputNumRule(rule);\n                                    break;\n                                case ruleTypes.MAX_INPUT_NUM_RULE:\n                                    _maxInputNumRule(rule);\n                                    break;\n                            }\n                        })\n                    }\n\n                    /**\n                     * 处理valueTypeRule\n                     * @param valueTypeRule\n                     * @private\n                     */\n                    function _valueTypeRule(valueTypeRule) {\n                        switch (valueTypeRule.value) {\n                            case valueTypes.TEXT:\n                            case valueTypes.DECIMAL:\n                            case valueTypes.INTEGER:\n                            case valueTypes.LONG:\n                                schema.type(fieldTypes.INPUT);\n                                schema.html(\"type=\\\"text\\\"\");\n                                break;\n                            case valueTypes.DATE:\n                                schema.type(fieldTypes.DATE);\n                                break;\n                            case valueTypes.TIME:\n                                schema.type(fieldTypes.DATETIME);\n                                break;\n                            case valueTypes.URL:\n                                schema.type(fieldTypes.INPUT);\n                                schema.html(\"type=\\\"url\\\"\");\n                                break;\n                            case valueTypes.TEXTAREA:\n                                schema.type(fieldTypes.TEXTAREA);\n                                schema.rowNum(4);\n                                break;\n                            case valueTypes.HTML:\n                                schema.type(fieldTypes.TEXTAREA);\n                                schema.rowNum(10);\n                                break;\n                        }\n                    }\n\n                    /**\n                     * 处理requiredRule\n                     * @param requiredRule\n                     * @private\n                     */\n                    function _requiredRule(requiredRule) {\n                        if (\"true\" == requiredRule.value) {\n                            schema.isRequired(true);\n                            schema.html(\"required\");\n                        }\n                    }\n\n                    /**\n                     * 处理disableRule\n                     * @param disableRule\n                     * @private\n                     */\n                    function _disableRule(disableRule) {\n                        if (\"true\" == disableRule.value\n                            && disableRule.dependGroup == null) {\n                            schema.html(\"ng-disabled=\\\"true\\\"\");\n                        }\n                    }\n\n                    /**\n                     * 处理readOnlyRule\n                     * @param readOnlyRule\n                     * @private\n                     */\n                    function _readOnlyRule(readOnlyRule) {\n                        if (\"true\" == readOnlyRule.value) {\n                            schema.html(\"readonly\");\n                        }\n                    }\n\n                    /**\n                     * 处理regexRule\n                     * @param regexRule\n                     * @private\n                     */\n                    function _regexRule(regexRule) {\n                        schema.html(\"ng-pattern=\\\"/\" + regexRule.value + \"/\\\"\");\n                    }\n\n                    /**\n                     * 处理tipRule\n                     * @param tipRule\n                     * @private\n                     */\n                    function _tipRule(tipRule) {\n                        schema.tipMsg(tipRule.value);\n                    }\n\n                    /**\n                     * 处理minLengthRule\n                     * @param minLengthRule\n                     * @private\n                     */\n                    function _minLengthRule(minLengthRule) {\n                        var value = isNaN(parseInt(minLengthRule.value)) ? 0 : minLengthRule.value;\n\n                        if (\"not include\" === minLengthRule.exProperty)\n                            value = (value > 0) ? value - 1 : 0;\n\n                        if (\"character\" == minLengthRule.unit)\n                            schema.html(\"ng-minlength=\\\"\" + value + \"\\\"\");\n                        else\n                            schema.html(\"ng-char-minlength=\\\"\" + value + \"\\\"\");\n                    }\n\n                    /**\n                     * 处理maxLengthRule\n                     * @param maxLengthRule\n                     * @private\n                     */\n                    function _maxLengthRule(maxLengthRule) {\n                        var value = isNaN(parseInt(maxLengthRule.value)) ? 0 : maxLengthRule.value;\n\n                        if (\"not include\" === maxLengthRule.exProperty)\n                            value = (value > 0) ? value - 1 : 0;\n\n                        if (\"character\" == maxLengthRule.unit)\n                            schema.html(\"ng-maxlength=\\\"\" + value + \"\\\"\");\n                        else\n                            schema.html(\"ng-char-maxlength=\\\"\" + value + \"\\\"\");\n                    }\n\n                    /**\n                     * 处理minValueRule\n                     * @param minValueRule\n                     * @private\n                     */\n                    function _minValueRule(minValueRule) {\n                        var value = isNaN(parseFloat(minValueRule.value)) ? 0 : parseFloat(minValueRule.value);\n\n                        if (\"not include\" === minValueRule.exProperty)\n                            value = (value > 0) ? value - 0.01 : 0;\n\n                        schema.html(\"ng-minvalue=\\\"\" + value + \"\\\"\");\n                    }\n\n                    /**\n                     * 处理maxValueRule\n                     * @param maxValueRule\n                     * @private\n                     */\n                    function _maxValueRule(maxValueRule) {\n                        var value = isNaN(parseFloat(maxValueRule.value)) ? 0 : parseFloat(maxValueRule.value);\n\n                        if (\"not include\" === maxValueRule.exProperty)\n                            value = (value > 0) ? value - 0.01 : 0;\n\n                        schema.html(\"ng-maxvalue=\\\"\" + value + \"\\\"\");\n\n                    }\n\n                    /**\n                     * 处理minInputNumRule\n                     * @param minInputNumRule\n                     * @private\n                     */\n                    function _minInputNumRule(minInputNumRule) {\n                        var value = isNaN(parseInt(minInputNumRule.value)) ? 0 : parseInt(minInputNumRule.value);\n\n                        if (\"not include\" === minInputNumRule.exProperty)\n                            value = (value > 0) ? value - 1 : 0;\n\n                        schema.html(\"ng-mininputnum=\\\"\" + value + \"\\\"\");\n                    }\n\n                    /**\n                     * 处理maxInputNumRule\n                     * @param maxInputNumRule\n                     * @private\n                     */\n                    function _maxInputNumRule(maxInputNumRule) {\n                        var value = isNaN(parseInt(maxInputNumRule.value)) ? 0 : parseInt(maxInputNumRule.value);\n\n                        if (\"not include\" === maxInputNumRule.exProperty)\n                            value = (value > 0) ? value - 1 : 0;\n\n                        schema.html(\"ng-maxinputnum=\\\"\" + value + \"\\\"\");\n                    }\n\n                    /**\n                     * 如果checkbox被选中,返回被选中的value.\n                     * eg.[{new: true, pending: false, approved: true}] -> [new, approved]\n                     * @param object\n                     * @returns {*}\n                     */\n                    //function _returnKey(object) {\n                    //    var result = [];\n                    //    angular.forEach(object, function(value, index) {\n                    //        if (value) result.push(index);\n                    //    });\n                    //    return result;\n                    //}\n                }\n            }\n        }\n    });\n","/**\n * @Description:\n * 用于动态显示options\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-22\n */\n\nangular.module('voyageone.angular.directives.voption', [])\n    .directive('voption', function ($templateCache, $compile) {\n\n        var templateKey_select = \"voyageone.angular.directives.optionSelect.tpl.html\";\n\n        // 显示成select样式\n        if (!$templateCache.get(templateKey_select)) {\n            $templateCache.put(templateKey_select,\n                '<select class=\"form-control\" ng-model=\"$$data.value.value\" ng-options=\"option.value as option.displayName for option in $$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');\n        }\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope, element) {\n\n                // 定义不同的展示种类\n                var typeList = {\n                    SINGLE_CHECK: \"SINGLECHECK\"\n                };\n\n                // 监视配置变动\n                scope.$watch('$$data', function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 根据type选择展示不同的控件\n                 */\n                function refresh() {\n                    var tempHtml;\n                    switch (scope.$$data.type) {\n                        case typeList.SINGLE_CHECK:\n                            tempHtml = $compile($templateCache.get(templateKey_select))(scope);\n                            break;\n                    }\n                    element.html(tempHtml);\n                }\n            }\n        };\n    });","/**\n * @Description:\n * 用于分页\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-08\n */\n\nangular.module('voyageone.angular.directives.vpagination', [])\n    .directive('vpagination', function ($templateCache, $compile, vpagination) {\n\n        var templateKey = \"voyageone.angular.directives.pagination.tpl.html\";\n        var templateKeyNoData = \"voyageone.angular.directives.paginationNoData.tpl.html\";\n\n        // 有数据分页样式\n        if (!$templateCache.get(templateKey)) {\n            $templateCache.put(templateKey,\n                '<div class=\"col-sm-3\">\\n' +\n                '    <div class=\"page-main form-inline\">{{\\'TXT_SHOWING_NO\\' | translate}}&nbsp;<input class=\"text-center\" type=\"text\" ng-model=\"curr.pageNo\"/>&nbsp;/&nbsp;{{totalPages}}&nbsp;{{\\'TXT_PAGE\\' | translate}}&nbsp;' +\n                '        <button class=\"btn btn-xs btn-default\" type=\"button\" ng-click=\"goPage(curr.pageNo)\" translate=\"BTN_GO\"></button>\\n' +\n                '    </div>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-4 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_SHOWING\\' | translate}}&nbsp;{{curr.start}}-{{curr.end}}&nbsp;{{\\'TXT_OF\\' | translate}}&nbsp;{{totalItems}}&nbsp{{\\'TXT_ITEMS\\' | translate}}</small>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-5 text-right text-center-xs\"><div>' +\n                '    <ul class=\"pagination-sm m-t-none m-b pagination ng-isolate-scope ng-valid ng-dirty ng-valid-parse\">\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-first\"><a href ng-click=\"goPage(1)\" ng-disabled=\"curr.isFirst\">&laquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-prev\"><a href ng-click=\"goPage(curr.pageNo - 1)\" ng-disabled=\"curr.isFirst\">&lsaquo;</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowStart\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-repeat=\"page in curr.pages track by $index\" ng-class=\"{active: isCurr(page)}\" class=\"pagination-page\"><a href ng-click=\"goPage(page)\">{{page}}</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowEnd\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-next\"><a href ng-click=\"goPage(curr.pageNo + 1)\" ng-disabled=\"curr.isLast\">&rsaquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-last\"><a href ng-click=\"goPage(totalPages)\" ng-disabled=\"curr.isLast\">&raquo;</a></li>\\n' +\n                '    </ul>\\n' +\n                '</div>');\n        }\n\n        // 无数据分页样式\n        if (!$templateCache.get(templateKeyNoData)) {\n            $templateCache.put(templateKeyNoData,\n                '<div class=\"col-sm-7 col-sm-offset-2 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_SHOWING\\' | translate}}&nbsp;0-0&nbsp;{{\\'TXT_OF\\' | translate}}&nbsp;0&nbsp{{\\'TXT_ITEMS\\' | translate}}</small>\\n' +\n                '</div>');\n        }\n\n        var defConfig = {curr: 1, total: 0, size: 20, showPageNo:5};\n\n        return {\n            restrict: \"AE\",\n            //templateUrl: templateKey,\n            replace: false,\n            scope: {\n                $$configNameForA: \"@vpagination\",\n                $$configNameForE: \"@config\"\n            },\n            link: function (scope, element) {\n\n                // 获取用户的config配置\n                var userConfigName = scope.$$configNameForA || scope.$$configNameForE;\n                var userConfig = scope.$parent.$eval(userConfigName);\n\n                // 将用户配置覆盖到默认配置后，在重新覆盖到用户配置上，用于补全配置属性\n                var userWithDefConfig = angular.extend({}, defConfig, userConfig);\n                scope.config = angular.extend(userConfig, userWithDefConfig);\n\n                var p = new vpagination(scope.config);\n\n                // 监视配置变动\n                scope.$parent.$watch(userConfigName, function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 跳转到指定页\n                 * @param num\n                 */\n                scope.goPage = function (num) {\n                    p.goPage(isNaN(Number(num)) ? 1 : Number(num));\n                };\n\n                /**\n                 * 判断是否是当前页\n                 * @param num\n                 * @returns {*|boolean}\n                 */\n                scope.isCurr = function (num) {\n                    return p.isCurr(num);\n                };\n\n                function refresh() {\n\n                    // 获取总页数\n                    scope.totalPages = p.getPageCount();\n                    // 获取总items数\n                    scope.totalItems = p.getTotal();\n                    // 获取当前页的信息\n                    scope.curr = p.getCurr();\n\n                    // 根据总数量显示不同的分页样式\n                    var tempHtml;\n                    if(p.getTotal() == 0) {\n                        tempHtml = $compile($templateCache.get(templateKeyNoData))(scope);\n                    } else {\n                        tempHtml = $compile($templateCache.get(templateKey))(scope);\n                    }\n                    element.html(tempHtml);\n\n                }\n            }\n        };\n    });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\nangular.module('voyageone.angular.directives.validator', [])\n\n    // 定义ng-char-maxlength\n    .directive('ngCharMaxlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxlength = -1;\n                attr.$observe('ngCharMaxlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    maxlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxlength = function(modelValue, viewValue) {\n                    return (maxlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) <= maxlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-char-minlength\n    .directive('ngCharMinlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minlength = -1;\n                attr.$observe('ngCharMinlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    minlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minlength = function(modelValue, viewValue) {\n                    return (minlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) >= minlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-maxvalue\n    .directive('ngMaxvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        maxvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        maxvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        maxvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxvalue = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-minvalue\n    .directive('ngMinvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMinvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        minvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        minvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        minvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minvalue = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue >= minvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-maxinputnum\n    .directive('ngMaxinputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxinputvalue', function(value) {\n                    maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxinputnum = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-mininputnum\n    .directive('ngMininputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMininputnum', function(value) {\n                    minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.mininputnum = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length >= minvalue);\n                };\n            }\n        }\n    })\n;","/**\n * @Description:\n * 弹出日期控件\n * @User:    Edward\n * @Version: 0.2.0, 2015-10-10\n */\n\nangular.module('voyageone.angular.controllers.datePicker', [])\n    .controller('datePickerCtrl', function ($scope) {\n        var vm = this;\n\n        vm.formats = ['yyyy-MM-dd', 'yyyy-MM-dd HH:mm:ss'];\n\n        $scope.formatDate = vm.formats[0];\n        $scope.formatDateTime = vm.formats[1];\n\n        $scope.open = open;\n\n        function open($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n\n            $scope.opened = true;\n        }\n    });","/**\n * @Description:\n * select tables items\n * @User: linanbin\n * @Version: 2.0.0, 15/12/16\n */\n\nangular.module('voyageone.angular.controllers.selectRows', [])\n    .controller('selectRowsCtrl', function ($scope) {\n\n        $scope.selectAll = selectAll;\n        $scope.selectOne = selectOne;\n        $scope.isAllSelected = isAllSelected;\n\n        /**\n         * 全部选中当前页数据\n         * @param objectList\n         */\n        function selectAll(objectList, id) {\n\n            objectList.selAllFlag = !objectList.selAllFlag;\n            if(!id){\n                id=\"id\";\n            }\n\n            // 循环处理全选中的数据\n            angular.forEach(objectList.currPageRows, function (object) {\n\n                // 单签页面所有产品选中flag被标示\n                objectList.selFlag[object[id]] = objectList.selAllFlag;\n\n                if (objectList.hasOwnProperty('selList')) {\n\n                    var tempList = _.pluck(objectList.selList, id);\n                    if (objectList.selAllFlag && tempList.indexOf(object[id]) < 0) {\n                        objectList.selList.push(object);\n                    } else if (!objectList.selAllFlag && tempList.indexOf(object[id]) > -1) {\n                        objectList.selList.splice(tempList.indexOf(object[id]), 1);\n                    }\n                }\n            });\n        }\n\n        /**\n         * 选中单条数据\n         * @param currentId\n         * @param objectList\n         */\n        function selectOne(currentId, objectList, id) {\n            if(!id){\n                id=\"id\";\n            }\n            if (objectList.hasOwnProperty('selList')) {\n\n                angular.forEach(objectList.currPageRows, function(object) {\n\n                    var tempList = _.pluck(objectList.selList, id);\n                    if (_.isEqual(object[id], currentId)) {\n                        if (tempList.indexOf(object[id]) > -1) {\n                            objectList.selList.splice(tempList.indexOf(object[id]), 1);\n                        } else {\n                            objectList.selList.push(object);\n                        }\n                    }\n                });\n            }\n\n            objectList.selAllFlag = true;\n            tempList = _.pluck(objectList.selList, id);\n            angular.forEach(objectList.currPageRows, function(object) {\n                if (tempList.indexOf(object[id]) == -1) {\n                    objectList.selAllFlag = false;\n                }\n            })\n        }\n\n        /**\n         * 判断当前页是否为全选中\n         * @param objectList\n         * @param id\n         */\n        function isAllSelected (objectList, id) {\n            if(!id){\n                id=\"id\";\n            }\n\n            if (objectList != undefined) {\n\n                objectList.selAllFlag = true;\n                var tempList = _.pluck(objectList.selList, id);\n                angular.forEach(objectList.currPageRows, function(object) {\n                    if (tempList.indexOf(object[id]) == -1) {\n                        objectList.selAllFlag = false;\n                    }\n                });\n                return objectList.selAllFlag;\n            }\n\n            return false;\n        }\n    });","/**\n * @Description:\n * 显示html的popover的共同方法\n * @User: linanbin\n * @Version: 2.0.0, 15/12/14\n */\n\nangular.module('voyageone.angular.controllers.showPopover', [])\n    .controller('showPopoverCtrl', function ($scope) {\n\n        $scope.showInfo = showInfo;\n\n        function showInfo(values) {\n            var tempHtml = \"\";\n\n            angular.forEach(values, function (data, index) {\n                tempHtml += data;\n                if (index !== values.length) {\n                    tempHtml += \"<br>\";\n                }\n            });\n            return tempHtml\n        }\n    });\n","/**\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.dialogs', [])\n    .factory(\"$dialogs\", function ($modal, $filter, $templateCache) {\n\n        var templateName = 'voyageone.angular.factories.dialogs.tpl.html';\n        var template =\n            '<div class=\"vo_modal\">' +\n                '<div class=\"modal-header\">' +\n                    '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" ng-click=\"close()\">' +\n                        '<span aria-hidden=\"true\"><i ng-click=\"close()\" class=\"fa fa-close\"></i></span>' +\n                    '</button>' +\n                    '<h5 class=\"modal-title\" ng-bind-html=\"title\"></h5>' +\n                '</div>' +\n                '<div class=\"modal-body wrapper-lg\">' +\n                    '<div class=\"row\">' +\n                        '<h5 class=\"text-center text-hs\"><p class=\"text-center\" ng-bind-html=\"content\"></p></h5>' +\n                    '</div>' +\n                '</div>' +\n                '<div class=\"modal-footer\">' +\n                    '<button class=\"btn btn-default btn-sm\" ng-if=\"!isAlert\" ng-click=\"close()\" translate=\"BTN_CANCEL\"></button>' +\n                    '<button class=\"btn btn-vo btn-sm\" ng-click=\"ok()\" translate=\"BTN_OK\"></button>' +\n                '</div>' +\n            '</div>';\n        $templateCache.put(templateName, template);\n\n        function tran(translationId, values) {\n            return $filter('translate')(translationId, values);\n        }\n\n        return function (options) {\n\n            if (!_.isObject(options)) throw \"arg type must be object\";\n\n            var values;\n\n            if (_.isObject(options.content)) {\n                values = options.content.values;\n                options.content = options.content.id;\n            }\n\n            options.title = tran(options.title);\n            options.content = tran(options.content, values);\n\n            var modalInstance = $modal.open({\n                templateUrl: templateName,\n                controller: [\"$scope\", function (scope) {\n                    _.extend(scope, options);\n                }],\n                size: 'md'\n            });\n\n            options.close = function () {\n                modalInstance.dismiss('close')\n            };\n\n            options.ok = function () {\n                modalInstance.close('');\n            };\n\n            return modalInstance;\n        };\n    })\n\n    .factory(\"alert\", function ($dialogs) {\n        return function (content, title) {\n            return $dialogs({\n                title: title || 'TXT_ALERT',\n                content: content,\n                isAlert: true\n            });\n        };\n    })\n\n    .factory(\"confirm\", function vConfirm($dialogs) {\n        return function (content, title) {\n            return $dialogs({\n                title: title || 'TXT_CONFIRM',\n                content: content,\n                isAlert: false\n            });\n        };\n    });","/**\n * @Date:    2015-11-16 20:51:05\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.factories.interceptor', [])\n    .factory('interceptorFactory', function () {\n\n        // 未知的系统错误\n        var UNKNOWN_CODE = \"5\";\n        // 和 JAVA 同步,系统通知前端自动跳转的特殊代码\n        var CODE_SYS_REDIRECT = \"SYS_REDIRECT\";\n        // 和 JAVA 同步,回话过期的信息\n        var MSG_TIMEOUT = \"300001\";\n\n        /**\n         * 对系统自动跳转的响应,执行跳转\n         * @param {{code:string,redirectTo:string}} res\n         * @returns {boolean}\n         */\n        function autoRedirect(res) {\n            if (res.code != CODE_SYS_REDIRECT) {\n                return false;\n            }\n            // 如果跳转数据异常,则默认跳转登陆页\n            location.href = res.redirectTo || '/login.html';\n            return true;\n        }\n\n        /**\n         * 对会话超时和未登录进行特殊处理\n         * @param {{code:string}} res\n         * @returns {boolean}\n         */\n        function sessionTimeout(res) {\n            if (res.code != MSG_TIMEOUT) {\n                return false;\n            }\n            // 会话超时,默认跳转到登陆页\n            location.href = '/login.html';\n            return true;\n        }\n\n        /**\n         * 处理位置的异常\n         * @param response\n         */\n        function unknownException(response) {\n\n            if (response.data.code !== UNKNOWN_CODE) {\n                return;\n            }\n\n            window.$$lastUnknow = response;\n            console.error('Server throw unknown exceptio. Message:', response.data.message);\n        }\n\n        return {\n            request: function (config) {\n                return config;\n            },\n            /**\n             * 响应拦截\n             * @param {{config:object, data:*, headers:function, status:number, statusText:string}} res\n             * @returns {*}\n             */\n            response: function (res) {\n                var result = res.data;\n\n                // 特殊处理部分内容\n                if (autoRedirect(result) || sessionTimeout(result)) {\n                    return res;\n                }\n\n                unknownException(res);\n\n                return res;\n            },\n            requestError: function (config) {\n                return config;\n            },\n            responseError: function (res) {\n            }\n        };\n    })\n    .config(function ($httpProvider) {\n        $httpProvider.interceptors.push('interceptorFactory');\n    });","/**\n * Notify 的可用参数\n * {\n *    // whether to hide the notification on click\n *    clickToHide: true,\n *    // whether to auto-hide the notification\n *    autoHide: true,\n *    // if autoHide, hide after milliseconds\n *    autoHideDelay: 5000,\n *    // show the arrow pointing at the element\n *    arrowShow: true,\n *    // arrow size in pixels\n *    arrowSize: 5,\n *    // position defines the notification position though uses the defaults below\n *    position: '...',\n *    // default positions\n *    elementPosition: 'bottom left',\n *    globalPosition: 'top right',\n *    // default style\n *    style: 'bootstrap',\n *    // default class (string or [string])\n *    className: 'error',\n *    // show animation\n *    showAnimation: 'slideDown',\n *    // show animation duration\n *    showDuration: 400,\n *    // hide animation\n *    hideAnimation: 'slideUp',\n *    // hide animation duration\n *    hideDuration: 200,\n *    // padding between element and notification\n *    gap: 2\n * }\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.notify', [])\n\n    .factory('notify', function ($filter) {\n\n        /**\n         * @ngdoc function\n         * @name voNotify\n         * @description\n         * 自动关闭的弹出提示框\n         */\n        function notify(options) {\n\n            if (!options) return;\n            if (_.isString(options)) options = {message: options};\n            if (!_.isObject(options)) return;\n\n            var values;\n\n            // 为 translate 的格式化提供支持，检测类型并转换\n            if (_.isObject(options.message)) {\n\n                values = options.message.values;\n                options.message = options.message.id;\n            }\n\n            options.message = $filter('translate')(options.message, values);\n\n            return $.notify(options.message, options);\n        }\n\n        notify.success = function (message) {\n            return notify({message: message, className: \"success\"});\n        };\n\n        notify.warning = function (message) {\n            return notify({message: message, className: \"warning\"});\n        };\n\n        notify.danger = function (message) {\n            return notify({message: message, className: \"danger\"});\n        };\n\n        return notify;\n    });","/**\n * @ngdoc\n * @factory\n * @name pppAutoImpl\n * @description\n * 根据定义自动生成方法实现. 注意! 依赖 ui-bootstrap\n */\n\nangular.module('voyageone.angular.factories.pppAutoImpl', [])\n    .factory('pppAutoImpl', function ($q, $modal) {\n        return function (declares, viewBaseUrl, jsBaseUrl) {\n            if (!declares.$$$ || !declares.$$$.impl)\n                declares.$$$ = {\n                    impl: declarePopupMethods(declares, viewBaseUrl, jsBaseUrl, '')\n                };\n            return declares.$$$.impl;\n        };\n\n        function declarePopupMethods(declares, viewBaseUrl, jsBaseUrl, popupBaseKey) {\n            var impl = {};\n            if (popupBaseKey) popupBaseKey += '/';\n            _.each(declares, function (declare, parentDir) {\n                if (!declare.popupKey) {\n                    if (_.isObject(declare) || _.isArray(declare)) _.extend(impl,\n                        declarePopupMethods(declare,\n                            viewBaseUrl, jsBaseUrl, popupBaseKey + parentDir,\n                            $q, $modal));\n                    return;\n                }\n\n                var options = _.clone(declare.options) || {};\n\n                var pathBase = '/' + popupBaseKey;\n                if (_.isString(parentDir)) pathBase += parentDir + '/';\n                pathBase += declare.popupKey;\n\n                options.templateUrl = viewBaseUrl + pathBase + '.tpl.html';\n                options.controllerUrl = jsBaseUrl + pathBase + '.ctl';\n\n                if (declare.controllerAs || declare.controller)\n                    options.controller = getControllerName(declare.popupKey);\n                if (declare.controllerAs)\n                    options.controller += ' as ' + (_.isString(declare.controllerAs) ? declare.controllerAs : 'ctrl');\n\n                impl[declare.popupKey] = function (context) {\n                    if (context) options.resolve = {\n                        context: function () {\n                            return context;\n                        }\n                    };\n\n                    var defer = $q.defer();\n                    require([options.controllerUrl], function () {\n                        defer.resolve($modal.open(options).result);\n                    });\n                    return defer.promise;\n                };\n            });\n            return impl;\n        }\n\n        function getControllerName(key) {\n            return key\n                    .replace(/\\.(\\w)/g, function (m, m1) {\n                        return m1.toUpperCase();\n                    })\n                    .replace(/^(\\w)/, function (m, m1) {\n                        return m1.toLowerCase()\n                    }) + 'PopupController';\n        }\n    });","/**\n * @User: linanbin\n * @Date: 15/12/25\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.schema', [])\n\n    // 定义schemaHeaderFactory\n    .factory('schemaHeaderFactory', function () {\n\n        function SchemaHeaderFactory(config) {\n            this.schemaHearInfo = config || {\n                    isRequired: false,\n                    //size: null,\n                    isMultiComplex: false,\n                    isComplex: false,\n                    tipMsg: []\n                };\n        }\n\n        SchemaHeaderFactory.prototype = {\n\n            isRequired: function (value) {\n                return value !== undefined ? this.schemaHearInfo.isRequired = value : this.schemaHearInfo.isRequired;\n            },\n\n            isComplex: function (value) {\n                return value !== undefined ? this.schemaHearInfo.isComplex = value : this.schemaHearInfo.isComplex;\n            },\n\n            isMultiComplex: function (value) {\n                return value !== undefined ? this.schemaHearInfo.isMultiComplex = value : this.schemaHearInfo.isMultiComplex;\n            },\n\n            tipMsg: function (value) {\n                return value !== undefined ? this.schemaHearInfo.tipMsg.push(value) : this.schemaHearInfo.tipMsg;\n            }\n\n            // size: function (value) {\n            //     return value !== undefined ? this.schemaHearInfo.size = value : this.schemaHearInfo.size;\n            // }\n        };\n\n        return SchemaHeaderFactory;\n    })\n\n    // 定义schemaFactory\n    .factory('schemaFactory', function () {\n\n        function SchemaFactory(config) {\n            this._schemaInfo = config || {\n                    type: null,\n                    name: null,\n                    rowNum: null,\n                    isRequired: false,\n                    checkValues: [],\n                    tipMsg: [],\n                    html: [],\n                    notShowEdit: true\n                };\n        }\n\n        SchemaFactory.prototype = {\n\n            type: function (value) {\n                return value !== undefined ? this._schemaInfo.type = value : this._schemaInfo.type;\n            },\n            name: function (value) {\n                return value !== undefined ? this._schemaInfo.name = value : this._schemaInfo.name;\n            },\n            html: function (value) {\n                return value !== undefined ? this._schemaInfo.html.push(value) : this._schemaInfo.html.join(\" \");\n            },\n            isRequired: function (value) {\n                return value !== undefined ? this._schemaInfo.isRequired = value : this._schemaInfo.isRequired;\n            },\n            rowNum: function (value) {\n                return value !== undefined ? this._schemaInfo.rowNum = value : this._schemaInfo.rowNum;\n            },\n            tipMsg: function (value) {\n                return value !== undefined ? this._schemaInfo.tipMsg.push(value) : this._schemaInfo.tipMsg;\n            },\n            checkValues: function (value) {\n                return value !== undefined ? this._schemaInfo.checkValues.push(value) : this._schemaInfo.checkValues;\n            },\n            notShowEdit: function (value) {\n                return value !== undefined ? this._schemaInfo.notShowEdit = value : this._schemaInfo.notShowEdit;\n            },\n            schemaInfo: function () {\n                return this._schemaInfo;\n            }\n        };\n\n        return SchemaFactory;\n    });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 16/1/11\n */\n\nangular.module('voyageone.angular.factories.selectRows', [])\n\n    // selectRowsFactory\n    .factory('selectRowsFactory', function () {\n        return function (config) {\n            var _selectRowsInfo = config ? config : {\n                selAllFlag: false,\n                currPageRows: [],// [{id: \"12345\"}], [{id: \"123456\", name: \"test1\"}]\n                selFlag:[], // [{\"12345\": true}, {\"12346\": false}]\n                selList: [] // [{id: \"12345\"}], [{id: \"123456\", name: \"test1\"}]\n            };\n\n            this.selAllFlag = function (value) {\n                return value !== undefined ? _selectRowsInfo.selAllFlag = value : _selectRowsInfo.selAllFlag;\n            };\n\n            this.clearCurrPageRows = function () {\n                _selectRowsInfo.currPageRows = [];\n            };\n\n            this.currPageRows = function (value) {\n                return value !== undefined ? _selectRowsInfo.currPageRows.push(value) : _selectRowsInfo.currPageRows;\n            };\n\n            this.selFlag = function (value) {\n                return value !== undefined ? _selectRowsInfo.selFlag.push(value) : _selectRowsInfo.selFlag;\n            };\n\n            this.selList = function (value) {\n                return value !== undefined ? _selectRowsInfo.selList.push(value) : _selectRowsInfo.selList;\n            };\n\n            this.selectRowsInfo = _selectRowsInfo;\n        }\n    });","/**\n * @User: Edward\n * @Version: 2.0.0, 2015-12-09\n */\n\nangular.module('voyageone.angular.factories.vpagination', [])\n    .factory('vpagination', function () {\n\n        /**\n         * 创建一个分页服务\n         * @param {{ curr: number, size: number, total: number, fetch: function }} config 配置\n         */\n        return function (config) {\n\n            var _pages, _lastTotal = 0, _showPages = [];\n\n            /**\n             * 返回总件数\n             * @returns {*}\n             */\n            this.getTotal = function () {\n                return config.total;\n            };\n\n            /**\n             * 返回当前页的开始和结束号\n             * @returns {{start: number, end: number}}\n             */\n            this.getCurr = function () {\n                return {\n                    pageNo: curr(),\n                    start: getCurrStartItems(),\n                    end: getCurrEndItems(),\n                    isFirst: isFirst(),\n                    isLast: isLast(),\n                    pages: createShowPages(),\n                    isShowStart: isShowStart(),\n                    isShowEnd: isShowEnd()\n                }\n            };\n\n            // 跳转到指定页\n            this.goPage = load;\n            // 返回总页数\n            this.getPageCount = getPages;\n            // 是否是当前页\n            this.isCurr = isCurr;\n\n            /**\n             * 跳转到指定页\n             * @param {number} page 页号\n             */\n            function load(page) {\n                page = page || config.curr;\n\n                if (page < 1 || page > getPages() || isCurr(page)) return;\n\n                config.curr = page;\n\n                config.fetch(page, config.size);\n            }\n\n            /**\n             * 初始化page列表\n             * @returns {Array}\n             */\n            function createShowPages () {\n\n                var minPage, maxPage, _showPages= [];\n                if (config.curr < config.showPageNo) {\n                    minPage = 1;\n                    if(_pages <= config.showPageNo) maxPage = _pages;\n                    else maxPage = config.showPageNo;\n                } else if (config.curr + 2 > _pages) {\n                    minPage = _pages + 1 - config.showPageNo;\n                    maxPage = _pages;\n                } else {\n                    minPage = config.curr + 3 - config.showPageNo;\n                    maxPage = config.curr + 2;\n                }\n\n                // 按照指定数量创建按钮\n                for (var i =  minPage; i <= maxPage; i++) {\n                    //scope.pages.push({num: 1, active: \"\", show: false});\n                    _showPages.push(i);\n                }\n\n                return _showPages;\n            }\n\n            /**\n             * 获取当前总页数\n             * @returns {number}\n             */\n            function getPages() {\n                if (_lastTotal != config.total) {\n                    _pages = parseInt(config.total / config.size) + ((config.total % config.size) > 0 ? 1 : 0);\n                    _lastTotal = config.total;\n                }\n                return _pages;\n            }\n\n            /**\n             * 返回当前页的起始号\n             * @returns {number}\n             */\n            function getCurrStartItems() {\n                return (config.curr - 1) * config.size + 1\n            }\n\n            /**\n             * 返回当前页的结束号\n             * @returns {number}\n             */\n            function getCurrEndItems() {\n                var currEndItems = config.curr * config.size;\n                return currEndItems <= config.total ? currEndItems : config.total;\n\n            }\n\n            /**\n             * 是否是最后一页\n             * @returns {boolean}\n             */\n            function isLast() {\n                return config.curr == getPages();\n            }\n\n            /**\n             * 是否是第一页\n             * @returns {boolean}\n             */\n            function isFirst() {\n                return config.curr == 1;\n            }\n\n            /**\n             * 是否是当前页\n             * @param page 页码\n             * @returns {boolean}\n             */\n            function isCurr(page) {\n                return config.curr == page;\n            }\n\n            function curr() {\n                return config.curr;\n            }\n\n            /**\n             * 是否显示开始...项目\n             * @returns {boolean}\n             */\n            function isShowStart () {\n                _showPages = createShowPages();\n                return _showPages[0] > 1\n            }\n\n            /**\n             * 是否显示结束...项目\n             * @returns {boolean}\n             */\n            function isShowEnd () {\n                _showPages = createShowPages();\n                return _showPages[_showPages.length - 1] < _pages;\n            }\n\n        };\n    });","/**\n * @description\n *\n * 自动创建基于地址定义的数据访问 service.\n * 传入的定义必须是 {object}, 并且至少有 root 属性\n *\n * @User: Jonas\n * @Date: 2015-12-10 19:32:37\n * @Version: 2.0.0\n */\n\n//@Skip\nangular.module('voyageone.angular.vresources', [])\n  .provider('$vresources', function ($provide) {\n\n    /**\n     * @description 构建请求地址的 url\n     * @param {string} root 请求的根路径\n     * @param {string} action 请求的名称\n     * @returns {string}\n     */\n    function getActionUrl(root, action) {\n      return root + (root.lastIndexOf('/') === root.length - 1 ? '' : '/') + action;\n    }\n\n    /**\n     * 闭包声明一个数据访问的 Service\n     * @param {string} name Service 的名称\n     * @param {object} actions 方法和地址定义\n     * @param {AjaxService} ajaxService 封装的 ajax 发送服务\n     */\n    function closureDataService(name, actions, ajaxService) {\n      /**\n       * @description 与 actions 一同闭包的构造函数\n       * @constructor\n       */\n      function DataResource() {\n        if (!actions) {\n          return;\n        }\n\n        if (typeof actions !== \"object\") {\n          console.log(\"Failed to new DataResource: [\" + actions + \"] is not a object\");\n          return;\n        }\n\n        if (!actions.root) {\n          console.log(\"Failed to new DataResource: no root prop\" + (JSON && JSON.stringify ? \": \" + JSON.stringify(actions) : \"\"));\n          return;\n        }\n\n        // 遍历配置\n        for (var name in actions) {\n          // 不对 root 进行创建\n          if (name === \"root\") continue;\n          // 额外的检查\n          if (actions.hasOwnProperty(name)) {\n            // 闭包创建函数\n            this[name] = (function (actionUrl) {\n              return function (data) {\n                return ajaxService.post(actionUrl, data);\n              };\n            })(getActionUrl(actions.root, actions[name]));\n          }\n        }\n      }\n\n      $provide.service(name, DataResource);\n    }\n\n    this.$get = function (ajaxService) {\n\n      return {\n        register: function (name, actions) {\n\n          if (!actions) return;\n\n          if (typeof actions !== 'object') return;\n\n          // 如果有 root 这个属性,就创建 service\n          if (actions.root) {\n            closureDataService(name, actions, ajaxService);\n            return;\n          }\n\n          // 否则继续访问子属性\n          for (var childName in actions) {\n            // 额外的检查\n            if (actions.hasOwnProperty(childName)) {\n\n              this.register(childName, actions[childName]);\n            }\n          }\n        }\n      };\n    };\n  })\n\n  .run(function ($vresources, $actions) {\n    $vresources.register(null, $actions);\n  });","/**\n * @Date:    2015-11-16 18:48:29\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.ajax', [])\n  .service('$ajax', $Ajax)\n  .service('ajaxService', AjaxService);\n\nfunction $Ajax($http, blockUI, $q) {\n  this.$http = $http;\n  this.blockUI = blockUI;\n  this.$q = $q;\n}\n$Ajax.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n  this.$http.post(url, data).then(function (response) {\n    var res = response.data;\n    if (!res) {\n      alert('相应结果不存在?????');\n      defer.reject(null);\n      return;\n    }\n    if (res.message || res.code) {\n      defer.reject(res);\n      return;\n    }\n    defer.resolve(res);\n  }, function (response) {\n    defer.reject(null, response);\n  });\n  return defer.promise;\n};\n\nfunction AjaxService($q, $ajax, messageService) {\n  this.$q = $q;\n  this.$ajax = $ajax;\n  this.messageService = messageService;\n}\nAjaxService.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n\n  this.$ajax.post(url, data).then(function(res) {\n    // 成功\n    defer.resolve(res);\n    return res;\n  }, (function (_this) {\n    // 失败\n    return function(res) {\n      _this.messageService.show(res);\n      defer.reject(res);\n      return res;\n    };\n  })(this));\n\n  return defer.promise;\n};","/**\n * @Date:    2015-11-16 20:30:37\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.cookie', [])\n    .service('cookieService', CookieService);\n\nvar keys = {\n    language: 'voyageone.user.language',\n    company: 'voyageone.user.company',\n    channel: 'voyageone.user.channel',\n    application: \"voyageone.user.application\"\n};\n\nfunction gentProps(key) {\n    return function (val) {\n        if (arguments.length === 1) {\n            return this.set(key, val);\n        } else if (arguments.length > 1) {\n            return this.set(key, arguments);\n        }\n        return this.get(key);\n    };\n}\n\nfunction CookieService($cookieStore) {\n    this.$cookieStore = $cookieStore;\n}\n\nCookieService.prototype.get = function (key) {\n    var result = this.$cookieStore.get(key);\n    return result == undefined || result == null ? \"\" : this.$cookieStore.get(key);\n};\n\nCookieService.prototype.set = function (key, value) {\n    return this.$cookieStore.put(key, value);\n};\n\nCookieService.prototype.language = gentProps(keys.language);\n\nCookieService.prototype.company = gentProps(keys.company);\n\nCookieService.prototype.channel = gentProps(keys.channel);\n\nCookieService.prototype.application = gentProps(keys.application);\n\nCookieService.prototype.removeAll = function () {\n    this.$cookieStore.remove(keys.language);\n    this.$cookieStore.remove(keys.company);\n    this.$cookieStore.remove(keys.channel);\n    this.$cookieStore.remove(keys.application);\n};\n","/**\n * 对后台的信息进行自动处理\n * @Date:    2015-11-19 14:47:23\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.message', [])\n  .service('messageService', MessageService);\n\n// 同步,DisplayType 枚举\nvar DISPLAY_TYPES = {\n  /**\n   * 弹出提示\n   */\n  ALERT: 1,\n  /**\n   * 顶端弹出自动关闭\n   */\n  NOTIFY: 2,\n  /**\n   * 右下弹出自动关闭\n   */\n  POP: 3,\n  /**\n   * 用户自定义处理\n   */\n  CUSTOM: 4\n};\n\nfunction MessageService(alert, confirm, notify) {\n  this.alert = alert;\n  this.confirm = confirm;\n  this.notify = notify;\n}\n\nMessageService.prototype = {\n  /**\n   * 根据类型自动显示信息\n   * @param {{displayType:Number, message:String}} res\n   */\n  show: function(res) {\n\n    var displayType = res.displayType;\n    var message = res.message;\n\n    switch (displayType) {\n      case DISPLAY_TYPES.ALERT:\n        this.alert(message);\n        break;\n      case DISPLAY_TYPES.NOTIFY:\n        this.notify(message);\n        break;\n      case DISPLAY_TYPES.POP:\n        this.notify({message: message, position: 'right bottom'});\n        break;\n    }\n  }\n};","/**\n * @Date:    2015-11-19 14:26:43\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.permission', [])\n  .service('permissionService', PermissionService);\n\nfunction PermissionService($rootScope) {\n  this.$rootScope = $rootScope;\n  this.permissions = [];\n}\n\nPermissionService.prototype = {\n  /**\n   * set the action permissions.\n   * @param permissions\n   */\n  setPermissions: function(permissions) {\n    this.permissions = permissions;\n    this.$rootScope.$broadcast('permissionsChanged');\n  },\n  /**\n   * check the permission has been in action permissions.\n   * @param permission\n   * @returns {boolean|*}\n   */\n  has: function(permission) {\n    return _.contains(this.permissions, permission.trim());\n  }\n};\n","/**\n * @Date:    2015-11-19 14:35:25\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.translate', [])\n  .service('translateService', TranslateService);\n\nfunction TranslateService($translate) {\n  this.$translate = $translate;\n}\n\nTranslateService.prototype = {\n  languages: {\n    en: \"en\",\n    zh: \"zh\"\n  },\n  /**\n   * set the web side language type.\n   * @param key\n   */\n  setLanguage: function(language) {\n    if (!_.contains(this.languages, language)) {\n      language = this.getBrowserLanguage();\n    }\n    this.$translate.use(language);\n    return language;\n  },\n  /**\n   * get the browser language type.\n   * @returns {string}\n   */\n  getBrowserLanguage: function() {\n    var currentLang = navigator.language;\n    if (!currentLang)\n      currentLang = navigator.browserLanguage;\n    return currentLang.substr(0, 2);\n  }\n};\n"],"sourceRoot":"components/angular"}