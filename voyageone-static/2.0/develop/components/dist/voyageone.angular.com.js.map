{"version":3,"sources":["voyageone.angular.com.js","controllers/datePicker.ctrl.js","controllers/selectRows.ctrl.js","controllers/showPopover.ctrl.js","factories/dialogs.factory.js","factories/interceptor.factory.js","factories/notify.factory.js","factories/pppAutoImpl.factory.js","factories/selectRows.factory.js","factories/vpagination.factory.js","providers/vresources.js","services/ajax.service.js","services/cookie.service.js","services/message.service.js","services/permission.service.js","services/translate.service.js","directives/dateModelFormat.directive.js","directives/enterClick.directive.js","directives/filestyle.directive.js","directives/ifNoRows.directive.js","directives/navigation.directive.js","directives/schema.directive.js","directives/voption.directive.js","directives/vpagination.directive.js","directives/vvalidator.directive.js"],"names":["define","angular","module","controller","$scope","$translate","uibDatepickerPopupConfig","vm","this","formats","formatDate","formatDateTime","opened","open","currentText","instant","clearText","closeText","$event","swhich","count","preventDefault","stopPropagation","$parent","datePicker","length","i","push","forEach","object","index","selectAll","selectOne","isAllSelected","objectList","id","selAllFlag","currPageRows","selFlag","hasOwnProperty","tempList","_","pluck","selList","indexOf","splice","currentId","isEqual","undefined","showInfo","values","tempHtml","data","factory","$modal","$filter","$templateCache","templateName","template","put","tran","translationId","options","isObject","content","title","modalInstance","templateUrl","scope","extend","size","close","dismiss","ok","$dialogs","isAlert","vConfirm","UNKNOWN_CODE","CODE_SYS_REDIRECT","MSG_TIMEOUT","autoRedirect","res","code","location","href","redirectTo","sessionTimeout","unknownException","response","window","$$lastUnknow","console","error","message","request","config","result","requestError","responseError","$httpProvider","interceptors","notify","isString","$","success","className","warning","danger","$q","declares","viewBaseUrl","jsBaseUrl","$$$","impl","declarePopupMethods","popupBaseKey","each","declare","parentDir","popupKey","isArray","clone","pathBase","controllerUrl","controllerAs","getControllerName","context","resolve","defer","require","promise","key","replace","m","m1","toUpperCase","toLowerCase","_selectRowsInfo","value","clearCurrPageRows","selectRowsInfo","_pages","_lastTotal","_showPages","getTotal","total","getCurr","pageNo","curr","start","getCurrStartItems","end","getCurrEndItems","isFirst","isLast","pages","createShowPages","isShowStart","isShowEnd","goPage","load","getPageCount","getPages","isCurr","page","fetch","minPage","maxPage","showPageNo","parseInt","currEndItems","provider","$provide","getActionUrl","root","action","lastIndexOf","closureDataService","name","actions","ajaxService","DataResource","log","JSON","stringify","actionUrl","post","service","$get","register","childName","run","$vresources","$actions","$Ajax","$inject","AjaxService","$http","blockUI","prototype","url","then","alert","reject","$ajax","messageService","_this","show","CookieService","keys","language","company","channel","application","gentProps","val","arguments","set","get","$cookieStore","removeAll","remove","MessageService","DISPLAY_TYPES","ALERT","NOTIFY","POP","CUSTOM","confirm","displayType","position","PermissionService","$rootScope","permissions","setPermissions","$broadcast","has","permission","contains","trim","TranslateService","languages","en","zh","setLanguage","getBrowserLanguage","use","currentLang","navigator","browserLanguage","substr","directive","restrict","link","elem","attrs","ngModel","$parsers","viewValue","dateModelFormat","attr","element","on","e","keyCode","selectExp","enterClick","targetElem","handler","triggerHandler","document","querySelector","$eval","$element","classInput","filestyle","$compile","tempNoDataKey","$$data","$watch","find","append","el","_window","_mb","wrap","next","backdrop","trigger","parent","siblings","toggleClass","is","width","removeClass","target","top","w_h","height","offset","min","closest","addClass","css","appendTo","off","insertAfter","fieldTypes","INPUT","DATE","DATETIME","TEXTAREA","SINGLE_CHECK","RADIO","MULTI_INPUT","MULTI_CHECK","COMPLEX","MULTI_COMPLEX","LABEL","ruleTypes","VALUE_TYPE_RULE","REQUIRED_RULE","DISABLE_RULE","READ_ONLY_RULE","REGEX_RULE","SET_RULE","TIP_RULE","DEV_TIP_RULE","MIN_LENGTH_RULE","MAX_LENGTH_RULE","MIN_VALUE_RULE","MAX_VALUE_RULE","MIN_INPUT_NUM_RULE","MAX_INPUT_NUM_RULE","MIN_DECIMAL_DIGITS_RULE","MAX_DECIMAL_DIGITS_RULE","MIN_TARGET_SIZE_RULE","MAX_TARGET_SIZE_RULE","MIN_IMAGE_SIZE_RULE","MAX_IMAGE_SIZE_RULE","valueTypes","TEXT","DECIMAL","INTEGER","LONG","TIME","URL","HTML","templates","header","label","input","date","datetime","textarea","select","radio","checkbox","multiComplex","complex","multi_in_complex","multiComplex_tip","SchemaHeader","Schema","isRequired","isMultiComplex","isComplex","tipMsg","type","rowNum","checkValues","html","notShowEdit","join","transclude","field","rules","rule","showHtmlData","copy","addField","newFieldMap","fields","complexValues","fieldMap","bindToController","$$hastip","$$complex","$$notShowEdit","refresh","$valid","schema","_setCheckValues","_resetMultiComplex","_resetComplex","_valueTypeRule","_requiredRule","_disableRule","_readOnlyRule","_regexRule","_tipRule","_minLengthRule","_maxLengthRule","_minValueRule","_maxValueRule","_minInputNumRule","_maxInputNumRule","checkboxValue","obj","isSelected","delField","tempValues","tempFieldMap","tempField","complexValue","isEmpty","defaultComplexValue","valueTypeRule","requiredRule","disableRule","dependGroup","readOnlyRule","regexRule","tipRule","minLengthRule","isNaN","exProperty","unit","maxLengthRule","minValueRule","parseFloat","maxValueRule","minInputNumRule","maxInputNumRule","templateKey_select","typeList","vpagination","templateKey","templateKeyNoData","defConfig","$$configNameForA","$$configNameForE","userConfigName","userConfig","userWithDefConfig","p","num","Number","totalPages","totalItems","elm","ctrl","maxlength","$observe","intVal","$validate","$validators","modelValue","$isEmpty","getByteLength","byteLen","len","charCodeAt","minlength","maxvalue","test","Date","minvalue","maxinputnum","mininputnum"],"mappings":"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","file":"voyageone.angular.com.js","sourcesContent":["define(function(){\n/**\n * @Description:\n * 弹出日期控件\n * @User:    Edward\n * @Version: 0.2.0, 2015-10-10\n */\n\nangular.module('voyageone.angular.controllers.datePicker', [])\n    .controller('datePickerCtrl', [\"$scope\", \"$translate\", \"uibDatepickerPopupConfig\", function ($scope, $translate, uibDatepickerPopupConfig) {\n        var vm = this;\n\n        vm.formats = ['yyyy-MM-dd', 'yyyy-MM-dd HH:mm:ss'];\n\n        $scope.formatDate = vm.formats[0];\n        $scope.formatDateTime = vm.formats[1];\n        $scope.opened = false;\n\n        $scope.open = open;\n        uibDatepickerPopupConfig.currentText = $translate.instant('BTN_TODAY');\n        uibDatepickerPopupConfig.clearText = $translate.instant('BTN_CLEAR');\n        uibDatepickerPopupConfig.closeText = $translate.instant('BTN_CLOSE');\n\n        function open($event, swhich, count) {\n            $event.preventDefault();\n            $event.stopPropagation();\n\n            // 如果该数组未空,则初始化数组\n            if ($scope.$parent.datePicker.length == 0) {\n                for(var i = 0; i < count; i++) {\n                    if (swhich == i)\n                        $scope.$parent.datePicker.push({opened: true});\n                    else\n                        $scope.$parent.datePicker.push({opened: false});\n                }\n            }\n            // 关闭其他日期控件画面\n            else {\n                angular.forEach($scope.$parent.datePicker, function (object, index) {\n                    if (swhich == index)\n                        object.opened = !object.opened;\n                    else\n                        object.opened = false;\n                });\n            }\n        }\n    }]);\n/**\n * @Description:\n * select tables items\n * @User: linanbin\n * @Version: 2.0.0, 15/12/16\n */\n\nangular.module('voyageone.angular.controllers.selectRows', [])\n    .controller('selectRowsCtrl', [\"$scope\", function ($scope) {\n\n        $scope.selectAll = selectAll;\n        $scope.selectOne = selectOne;\n        $scope.isAllSelected = isAllSelected;\n\n        /**\n         * 全部选中当前页数据\n         * @param objectList\n         */\n        function selectAll(objectList, id) {\n\n            objectList.selAllFlag = !objectList.selAllFlag;\n            if(!id){\n                id=\"id\";\n            }\n\n            // 循环处理全选中的数据\n            angular.forEach(objectList.currPageRows, function (object) {\n\n                // 单签页面所有产品选中flag被标示\n                objectList.selFlag[object[id]] = objectList.selAllFlag;\n\n                if (objectList.hasOwnProperty('selList')) {\n\n                    var tempList = _.pluck(objectList.selList, id);\n                    if (objectList.selAllFlag && tempList.indexOf(object[id]) < 0) {\n                        objectList.selList.push(object);\n                    } else if (!objectList.selAllFlag && tempList.indexOf(object[id]) > -1) {\n                        objectList.selList.splice(tempList.indexOf(object[id]), 1);\n                    }\n                }\n            });\n        }\n\n        /**\n         * 选中单条数据\n         * @param currentId\n         * @param objectList\n         */\n        function selectOne(currentId, objectList, id) {\n            if(!id){\n                id=\"id\";\n            }\n            if (objectList.hasOwnProperty('selList')) {\n\n                angular.forEach(objectList.currPageRows, function(object) {\n\n                    var tempList = _.pluck(objectList.selList, id);\n                    if (_.isEqual(object[id], currentId)) {\n                        if (tempList.indexOf(object[id]) > -1) {\n                            objectList.selList.splice(tempList.indexOf(object[id]), 1);\n                        } else {\n                            objectList.selList.push(object);\n                        }\n                    }\n                });\n            }\n\n            objectList.selAllFlag = true;\n            tempList = _.pluck(objectList.selList, id);\n            angular.forEach(objectList.currPageRows, function(object) {\n                if (tempList.indexOf(object[id]) == -1) {\n                    objectList.selAllFlag = false;\n                }\n            })\n        }\n\n        /**\n         * 判断当前页是否为全选中\n         * @param objectList\n         * @param id\n         */\n        function isAllSelected (objectList, id) {\n            if(!id){\n                id=\"id\";\n            }\n\n            if (objectList != undefined) {\n\n                objectList.selAllFlag = true;\n                var tempList = _.pluck(objectList.selList, id);\n                angular.forEach(objectList.currPageRows, function(object) {\n                    if (tempList.indexOf(object[id]) == -1) {\n                        objectList.selAllFlag = false;\n                    }\n                });\n                return objectList.selAllFlag;\n            }\n\n            return false;\n        }\n    }]);\n/**\n * @Description:\n * 显示html的popover的共同方法\n * @User: linanbin\n * @Version: 2.0.0, 15/12/14\n */\n\nangular.module('voyageone.angular.controllers.showPopover', [])\n    .controller('showPopoverCtrl', [\"$scope\", function ($scope) {\n\n        $scope.showInfo = showInfo;\n\n        function showInfo(values) {\n            var tempHtml = \"\";\n\n            angular.forEach(values, function (data, index) {\n                tempHtml += data;\n                if (index !== values.length) {\n                    tempHtml += \"<br>\";\n                }\n            });\n            return tempHtml\n        }\n    }]);\n\n/**\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.dialogs', [])\n    .factory(\"$dialogs\", [\"$modal\", \"$filter\", \"$templateCache\", function ($modal, $filter, $templateCache) {\n\n        var templateName = 'voyageone.angular.factories.dialogs.tpl.html';\n        var template =\n            '<div class=\"vo_modal\">' +\n                '<div class=\"modal-header\">' +\n                    '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" ng-click=\"close()\">' +\n                        '<span aria-hidden=\"true\"><i ng-click=\"close()\" class=\"fa fa-close\"></i></span>' +\n                    '</button>' +\n                    '<h5 class=\"modal-title\" ng-bind-html=\"title\"></h5>' +\n                '</div>' +\n                '<div class=\"modal-body wrapper-lg\">' +\n                    '<div class=\"row\">' +\n                        '<h5 class=\"text-center text-hs\"><p class=\"text-center\" ng-bind-html=\"content\"></p></h5>' +\n                    '</div>' +\n                '</div>' +\n                '<div class=\"modal-footer\">' +\n                    '<button class=\"btn btn-default btn-sm\" ng-if=\"!isAlert\" ng-click=\"close()\" translate=\"BTN_CANCEL\"></button>' +\n                    '<button class=\"btn btn-vo btn-sm\" ng-click=\"ok()\" translate=\"BTN_OK\"></button>' +\n                '</div>' +\n            '</div>';\n        $templateCache.put(templateName, template);\n\n        function tran(translationId, values) {\n            return $filter('translate')(translationId, values);\n        }\n\n        return function (options) {\n\n            if (!_.isObject(options)) throw \"arg type must be object\";\n\n            var values;\n\n            if (_.isObject(options.content)) {\n                values = options.content.values;\n                options.content = options.content.id;\n            }\n\n            options.title = tran(options.title);\n            options.content = tran(options.content, values);\n\n            var modalInstance = $modal.open({\n                templateUrl: templateName,\n                controller: [\"$scope\", function (scope) {\n                    _.extend(scope, options);\n                }],\n                size: 'md'\n            });\n\n            options.close = function () {\n                modalInstance.dismiss('close')\n            };\n\n            options.ok = function () {\n                modalInstance.close('');\n            };\n\n            return modalInstance;\n        };\n    }])\n\n    .factory(\"alert\", [\"$dialogs\", function ($dialogs) {\n        return function (content, title) {\n            return $dialogs({\n                title: title || 'TXT_ALERT',\n                content: content,\n                isAlert: true\n            });\n        };\n    }])\n\n    .factory(\"confirm\", [\"$dialogs\", function vConfirm($dialogs) {\n        return function (content, title) {\n            return $dialogs({\n                title: title || 'TXT_CONFIRM',\n                content: content,\n                isAlert: false\n            });\n        };\n    }]);\n/**\n * @Date:    2015-11-16 20:51:05\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.factories.interceptor', [])\n    .factory('interceptorFactory', function () {\n\n        // 未知的系统错误\n        var UNKNOWN_CODE = \"5\";\n        // 和 JAVA 同步,系统通知前端自动跳转的特殊代码\n        var CODE_SYS_REDIRECT = \"SYS_REDIRECT\";\n        // 和 JAVA 同步,回话过期的信息\n        var MSG_TIMEOUT = \"300001\";\n\n        /**\n         * 对系统自动跳转的响应,执行跳转\n         * @param {{code:string,redirectTo:string}} res\n         * @returns {boolean}\n         */\n        function autoRedirect(res) {\n            if (res.code != CODE_SYS_REDIRECT) {\n                return false;\n            }\n            // 如果跳转数据异常,则默认跳转登陆页\n            location.href = res.redirectTo || '/login.html';\n            return true;\n        }\n\n        /**\n         * 对会话超时和未登录进行特殊处理\n         * @param {{code:string}} res\n         * @returns {boolean}\n         */\n        function sessionTimeout(res) {\n            if (res.code != MSG_TIMEOUT) {\n                return false;\n            }\n            // 会话超时,默认跳转到登陆页\n            location.href = '/login.html';\n            return true;\n        }\n\n        /**\n         * 处理位置的异常\n         * @param response\n         */\n        function unknownException(response) {\n\n            if (response.data.code !== UNKNOWN_CODE) {\n                return;\n            }\n\n            window.$$lastUnknow = response;\n            console.error('Server throw unknown exceptio. Message:', response.data.message);\n        }\n\n        return {\n            request: function (config) {\n                return config;\n            },\n            /**\n             * 响应拦截\n             * @param {{config:object, data:*, headers:function, status:number, statusText:string}} res\n             * @returns {*}\n             */\n            response: function (res) {\n                var result = res.data;\n\n                // 特殊处理部分内容\n                if (autoRedirect(result) || sessionTimeout(result)) {\n                    return res;\n                }\n\n                unknownException(res);\n\n                return res;\n            },\n            requestError: function (config) {\n                return config;\n            },\n            responseError: function (res) {\n            }\n        };\n    })\n    .config([\"$httpProvider\", function ($httpProvider) {\n        $httpProvider.interceptors.push('interceptorFactory');\n    }]);\n/**\n * Notify 的可用参数\n * {\n *    // whether to hide the notification on click\n *    clickToHide: true,\n *    // whether to auto-hide the notification\n *    autoHide: true,\n *    // if autoHide, hide after milliseconds\n *    autoHideDelay: 5000,\n *    // show the arrow pointing at the element\n *    arrowShow: true,\n *    // arrow size in pixels\n *    arrowSize: 5,\n *    // position defines the notification position though uses the defaults below\n *    position: '...',\n *    // default positions\n *    elementPosition: 'bottom left',\n *    globalPosition: 'top right',\n *    // default style\n *    style: 'bootstrap',\n *    // default class (string or [string])\n *    className: 'error',\n *    // show animation\n *    showAnimation: 'slideDown',\n *    // show animation duration\n *    showDuration: 400,\n *    // hide animation\n *    hideAnimation: 'slideUp',\n *    // hide animation duration\n *    hideDuration: 200,\n *    // padding between element and notification\n *    gap: 2\n * }\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.notify', [])\n\n    .factory('notify', [\"$filter\", function ($filter) {\n\n        /**\n         * @ngdoc function\n         * @name voNotify\n         * @description\n         * 自动关闭的弹出提示框\n         */\n        function notify(options) {\n\n            if (!options) return;\n            if (_.isString(options)) options = {message: options};\n            if (!_.isObject(options)) return;\n\n            var values;\n\n            // 为 translate 的格式化提供支持，检测类型并转换\n            if (_.isObject(options.message)) {\n\n                values = options.message.values;\n                options.message = options.message.id;\n            }\n\n            options.message = $filter('translate')(options.message, values);\n\n            return $.notify(options.message, options);\n        }\n\n        notify.success = function (message) {\n            return notify({message: message, className: \"success\"});\n        };\n\n        notify.warning = function (message) {\n            return notify({message: message, className: \"warning\"});\n        };\n\n        notify.danger = function (message) {\n            return notify({message: message, className: \"danger\"});\n        };\n\n        return notify;\n    }]);\n/**\n * @ngdoc\n * @factory\n * @name pppAutoImpl\n * @description\n * 根据定义自动生成方法实现. 注意! 依赖 ui-bootstrap\n */\n\nangular.module('voyageone.angular.factories.pppAutoImpl', [])\n    .factory('pppAutoImpl', [\"$q\", \"$modal\", function ($q, $modal) {\n        return function (declares, viewBaseUrl, jsBaseUrl) {\n            if (!declares.$$$ || !declares.$$$.impl)\n                declares.$$$ = {\n                    impl: declarePopupMethods(declares, viewBaseUrl, jsBaseUrl, '')\n                };\n            return declares.$$$.impl;\n        };\n\n        function declarePopupMethods(declares, viewBaseUrl, jsBaseUrl, popupBaseKey) {\n            var impl = {};\n            if (popupBaseKey) popupBaseKey += '/';\n            _.each(declares, function (declare, parentDir) {\n                if (!declare.popupKey) {\n                    if (_.isObject(declare) || _.isArray(declare)) _.extend(impl,\n                        declarePopupMethods(declare,\n                            viewBaseUrl, jsBaseUrl, popupBaseKey + parentDir,\n                            $q, $modal));\n                    return;\n                }\n\n                var options = _.clone(declare.options) || {};\n\n                var pathBase = '/' + popupBaseKey;\n                if (_.isString(parentDir)) pathBase += parentDir + '/';\n                pathBase += declare.popupKey;\n\n                options.templateUrl = viewBaseUrl + pathBase + '.tpl.html';\n                options.controllerUrl = jsBaseUrl + pathBase + '.ctl';\n\n                if (declare.controllerAs || declare.controller)\n                    options.controller = getControllerName(declare.popupKey);\n                if (declare.controllerAs)\n                    options.controller += ' as ' + (_.isString(declare.controllerAs) ? declare.controllerAs : 'ctrl');\n\n                impl[declare.popupKey] = function (context) {\n                    if (context) options.resolve = {\n                        context: function () {\n                            return context;\n                        }\n                    };\n\n                    var defer = $q.defer();\n                    require([options.controllerUrl], function () {\n                        defer.resolve($modal.open(options).result);\n                    });\n                    return defer.promise;\n                };\n            });\n            return impl;\n        }\n\n        function getControllerName(key) {\n            return key\n                    .replace(/\\.(\\w)/g, function (m, m1) {\n                        return m1.toUpperCase();\n                    })\n                    .replace(/^(\\w)/, function (m, m1) {\n                        return m1.toLowerCase()\n                    }) + 'PopupController';\n        }\n    }]);\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 16/1/11\n */\n\nangular.module('voyageone.angular.factories.selectRows', [])\n\n    // selectRowsFactory\n    .factory('selectRowsFactory', function () {\n        return function (config) {\n            var _selectRowsInfo = config ? config : {\n                selAllFlag: false,\n                currPageRows: [],// [{id: \"12345\"}], [{id: \"123456\", name: \"test1\"}]\n                selFlag:[], // [{\"12345\": true}, {\"12346\": false}]\n                selList: [] // [{id: \"12345\"}], [{id: \"123456\", name: \"test1\"}]\n            };\n\n            this.selAllFlag = function (value) {\n                return value !== undefined ? _selectRowsInfo.selAllFlag = value : _selectRowsInfo.selAllFlag;\n            };\n\n            this.clearCurrPageRows = function () {\n                _selectRowsInfo.currPageRows = [];\n            };\n\n            this.currPageRows = function (value) {\n                return value !== undefined ? _selectRowsInfo.currPageRows.push(value) : _selectRowsInfo.currPageRows;\n            };\n\n            this.selFlag = function (value) {\n                return value !== undefined ? _selectRowsInfo.selFlag.push(value) : _selectRowsInfo.selFlag;\n            };\n\n            this.selList = function (value) {\n                return value !== undefined ? _selectRowsInfo.selList.push(value) : _selectRowsInfo.selList;\n            };\n\n            this.selectRowsInfo = _selectRowsInfo;\n        }\n    });\n/**\n * @User: Edward\n * @Version: 2.0.0, 2015-12-09\n */\n\nangular.module('voyageone.angular.factories.vpagination', [])\n    .factory('vpagination', function () {\n\n        /**\n         * 创建一个分页服务\n         * @param {{ curr: number, size: number, total: number, fetch: function }} config 配置\n         */\n        return function (config) {\n\n            var _pages, _lastTotal = 0, _showPages = [];\n\n            /**\n             * 返回总件数\n             * @returns {*}\n             */\n            this.getTotal = function () {\n                return config.total;\n            };\n\n            /**\n             * 返回当前页的开始和结束号\n             * @returns {{start: number, end: number}}\n             */\n            this.getCurr = function () {\n                return {\n                    pageNo: curr(),\n                    start: getCurrStartItems(),\n                    end: getCurrEndItems(),\n                    isFirst: isFirst(),\n                    isLast: isLast(),\n                    pages: createShowPages(),\n                    isShowStart: isShowStart(),\n                    isShowEnd: isShowEnd()\n                }\n            };\n\n            // 跳转到指定页\n            this.goPage = load;\n            // 返回总页数\n            this.getPageCount = getPages;\n            // 是否是当前页\n            this.isCurr = isCurr;\n\n            /**\n             * 跳转到指定页\n             * @param {number} page 页号\n             */\n            function load(page) {\n                page = page || config.curr;\n\n                if (page < 1 || page > getPages() || isCurr(page)) return;\n\n                config.curr = page;\n\n                config.fetch(page, config.size);\n            }\n\n            /**\n             * 初始化page列表\n             * @returns {Array}\n             */\n            function createShowPages () {\n\n                var minPage, maxPage, _showPages= [];\n                if (config.curr < config.showPageNo) {\n                    minPage = 1;\n                    if(_pages <= config.showPageNo) maxPage = _pages;\n                    else maxPage = config.showPageNo;\n                } else if (config.curr + 2 > _pages) {\n                    minPage = _pages + 1 - config.showPageNo;\n                    maxPage = _pages;\n                } else {\n                    minPage = config.curr + 3 - config.showPageNo;\n                    maxPage = config.curr + 2;\n                }\n\n                // 按照指定数量创建按钮\n                for (var i =  minPage; i <= maxPage; i++) {\n                    //scope.pages.push({num: 1, active: \"\", show: false});\n                    _showPages.push(i);\n                }\n\n                return _showPages;\n            }\n\n            /**\n             * 获取当前总页数\n             * @returns {number}\n             */\n            function getPages() {\n                if (_lastTotal != config.total) {\n                    _pages = parseInt(config.total / config.size) + ((config.total % config.size) > 0 ? 1 : 0);\n                    _lastTotal = config.total;\n                }\n                return _pages;\n            }\n\n            /**\n             * 返回当前页的起始号\n             * @returns {number}\n             */\n            function getCurrStartItems() {\n                return (config.curr - 1) * config.size + 1\n            }\n\n            /**\n             * 返回当前页的结束号\n             * @returns {number}\n             */\n            function getCurrEndItems() {\n                var currEndItems = config.curr * config.size;\n                return currEndItems <= config.total ? currEndItems : config.total;\n\n            }\n\n            /**\n             * 是否是最后一页\n             * @returns {boolean}\n             */\n            function isLast() {\n                return config.curr == getPages();\n            }\n\n            /**\n             * 是否是第一页\n             * @returns {boolean}\n             */\n            function isFirst() {\n                return config.curr == 1;\n            }\n\n            /**\n             * 是否是当前页\n             * @param page 页码\n             * @returns {boolean}\n             */\n            function isCurr(page) {\n                return config.curr == page;\n            }\n\n            function curr() {\n                return config.curr;\n            }\n\n            /**\n             * 是否显示开始...项目\n             * @returns {boolean}\n             */\n            function isShowStart () {\n                _showPages = createShowPages();\n                return _showPages[0] > 1\n            }\n\n            /**\n             * 是否显示结束...项目\n             * @returns {boolean}\n             */\n            function isShowEnd () {\n                _showPages = createShowPages();\n                return _showPages[_showPages.length - 1] < _pages;\n            }\n\n        };\n    });\n/**\n * @description\n *\n * 自动创建基于地址定义的数据访问 service.\n * 传入的定义必须是 {object}, 并且至少有 root 属性\n *\n * @User: Jonas\n * @Date: 2015-12-10 19:32:37\n * @Version: 2.0.0\n */\n\n//@Skip\nangular.module('voyageone.angular.vresources', [])\n  .provider('$vresources', [\"$provide\", function ($provide) {\n\n    /**\n     * @description 构建请求地址的 url\n     * @param {string} root 请求的根路径\n     * @param {string} action 请求的名称\n     * @returns {string}\n     */\n    function getActionUrl(root, action) {\n      return root + (root.lastIndexOf('/') === root.length - 1 ? '' : '/') + action;\n    }\n\n    /**\n     * 闭包声明一个数据访问的 Service\n     * @param {string} name Service 的名称\n     * @param {object} actions 方法和地址定义\n     * @param {AjaxService} ajaxService 封装的 ajax 发送服务\n     */\n    function closureDataService(name, actions, ajaxService) {\n      /**\n       * @description 与 actions 一同闭包的构造函数\n       * @constructor\n       */\n      function DataResource() {\n        if (!actions) {\n          return;\n        }\n\n        if (typeof actions !== \"object\") {\n          console.log(\"Failed to new DataResource: [\" + actions + \"] is not a object\");\n          return;\n        }\n\n        if (!actions.root) {\n          console.log(\"Failed to new DataResource: no root prop\" + (JSON && JSON.stringify ? \": \" + JSON.stringify(actions) : \"\"));\n          return;\n        }\n\n        // 遍历配置\n        for (var name in actions) {\n          // 不对 root 进行创建\n          if (name === \"root\") continue;\n          // 额外的检查\n          if (actions.hasOwnProperty(name)) {\n            // 闭包创建函数\n            this[name] = (function (actionUrl) {\n              return function (data) {\n                return ajaxService.post(actionUrl, data);\n              };\n            })(getActionUrl(actions.root, actions[name]));\n          }\n        }\n      }\n\n      $provide.service(name, DataResource);\n    }\n\n    this.$get = [\"ajaxService\", function (ajaxService) {\n\n      return {\n        register: function (name, actions) {\n\n          if (!actions) return;\n\n          if (typeof actions !== 'object') return;\n\n          // 如果有 root 这个属性,就创建 service\n          if (actions.root) {\n            closureDataService(name, actions, ajaxService);\n            return;\n          }\n\n          // 否则继续访问子属性\n          for (var childName in actions) {\n            // 额外的检查\n            if (actions.hasOwnProperty(childName)) {\n\n              this.register(childName, actions[childName]);\n            }\n          }\n        }\n      };\n    }];\n  }])\n\n  .run([\"$vresources\", \"$actions\", function ($vresources, $actions) {\n    $vresources.register(null, $actions);\n  }]);\n/**\n * @Date:    2015-11-16 18:48:29\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\n$Ajax.$inject = [\"$http\", \"blockUI\", \"$q\"];\nAjaxService.$inject = [\"$q\", \"$ajax\", \"messageService\"];\nangular.module('voyageone.angular.services.ajax', [])\n  .service('$ajax', $Ajax)\n  .service('ajaxService', AjaxService);\n\nfunction $Ajax($http, blockUI, $q) {\n  this.$http = $http;\n  this.blockUI = blockUI;\n  this.$q = $q;\n}\n$Ajax.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n  this.$http.post(url, data).then(function (response) {\n    var res = response.data;\n    if (!res) {\n      alert('相应结果不存在?????');\n      defer.reject(null);\n      return;\n    }\n    if (res.message || res.code) {\n      defer.reject(res);\n      return;\n    }\n    defer.resolve(res);\n  }, function (response) {\n    defer.reject(null, response);\n  });\n  return defer.promise;\n};\n\nfunction AjaxService($q, $ajax, messageService) {\n  this.$q = $q;\n  this.$ajax = $ajax;\n  this.messageService = messageService;\n}\nAjaxService.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n\n  this.$ajax.post(url, data).then(function(res) {\n    // 成功\n    defer.resolve(res);\n    return res;\n  }, (function (_this) {\n    // 失败\n    return function(res) {\n      _this.messageService.show(res);\n      defer.reject(res);\n      return res;\n    };\n  })(this));\n\n  return defer.promise;\n};\n/**\n * @Date:    2015-11-16 20:30:37\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nCookieService.$inject = [\"$cookieStore\"];\nangular.module('voyageone.angular.services.cookie', [])\n    .service('cookieService', CookieService);\n\nvar keys = {\n    language: 'voyageone.user.language',\n    company: 'voyageone.user.company',\n    channel: 'voyageone.user.channel',\n    application: \"voyageone.user.application\"\n};\n\nfunction gentProps(key) {\n    return function (val) {\n        if (arguments.length === 1) {\n            return this.set(key, val);\n        } else if (arguments.length > 1) {\n            return this.set(key, arguments);\n        }\n        return this.get(key);\n    };\n}\n\nfunction CookieService($cookieStore) {\n    this.$cookieStore = $cookieStore;\n}\n\nCookieService.prototype.get = function (key) {\n    var result = this.$cookieStore.get(key);\n    return result == undefined || result == null ? \"\" : this.$cookieStore.get(key);\n};\n\nCookieService.prototype.set = function (key, value) {\n    return this.$cookieStore.put(key, value);\n};\n\nCookieService.prototype.language = gentProps(keys.language);\n\nCookieService.prototype.company = gentProps(keys.company);\n\nCookieService.prototype.channel = gentProps(keys.channel);\n\nCookieService.prototype.application = gentProps(keys.application);\n\nCookieService.prototype.removeAll = function () {\n    this.$cookieStore.remove(keys.language);\n    this.$cookieStore.remove(keys.company);\n    this.$cookieStore.remove(keys.channel);\n    this.$cookieStore.remove(keys.application);\n};\n\n/**\n * 对后台的信息进行自动处理\n * @Date:    2015-11-19 14:47:23\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nMessageService.$inject = [\"alert\", \"confirm\", \"notify\"];\nangular.module('voyageone.angular.services.message', [])\n  .service('messageService', MessageService);\n\n// 同步,DisplayType 枚举\nvar DISPLAY_TYPES = {\n  /**\n   * 弹出提示\n   */\n  ALERT: 1,\n  /**\n   * 顶端弹出自动关闭\n   */\n  NOTIFY: 2,\n  /**\n   * 右下弹出自动关闭\n   */\n  POP: 3,\n  /**\n   * 用户自定义处理\n   */\n  CUSTOM: 4\n};\n\nfunction MessageService(alert, confirm, notify) {\n  this.alert = alert;\n  this.confirm = confirm;\n  this.notify = notify;\n}\n\nMessageService.prototype = {\n  /**\n   * 根据类型自动显示信息\n   * @param {{displayType:Number, message:String}} res\n   */\n  show: function(res) {\n\n    var displayType = res.displayType;\n    var message = res.message;\n\n    switch (displayType) {\n      case DISPLAY_TYPES.ALERT:\n        this.alert(message);\n        break;\n      case DISPLAY_TYPES.NOTIFY:\n        this.notify(message);\n        break;\n      case DISPLAY_TYPES.POP:\n        this.notify({message: message, position: 'right bottom'});\n        break;\n    }\n  }\n};\n/**\n * @Date:    2015-11-19 14:26:43\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nPermissionService.$inject = [\"$rootScope\"];\nangular.module('voyageone.angular.services.permission', [])\n  .service('permissionService', PermissionService);\n\nfunction PermissionService($rootScope) {\n  this.$rootScope = $rootScope;\n  this.permissions = [];\n}\n\nPermissionService.prototype = {\n  /**\n   * set the action permissions.\n   * @param permissions\n   */\n  setPermissions: function(permissions) {\n    this.permissions = permissions;\n    this.$rootScope.$broadcast('permissionsChanged');\n  },\n  /**\n   * check the permission has been in action permissions.\n   * @param permission\n   * @returns {boolean|*}\n   */\n  has: function(permission) {\n    return _.contains(this.permissions, permission.trim());\n  }\n};\n\n/**\n * @Date:    2015-11-19 14:35:25\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nTranslateService.$inject = [\"$translate\"];\nangular.module('voyageone.angular.services.translate', [])\n  .service('translateService', TranslateService);\n\nfunction TranslateService($translate) {\n  this.$translate = $translate;\n}\n\nTranslateService.prototype = {\n  languages: {\n    en: \"en\",\n    zh: \"zh\"\n  },\n  /**\n   * set the web side language type.\n   * @param key\n   */\n  setLanguage: function(language) {\n    if (!_.contains(this.languages, language)) {\n      language = this.getBrowserLanguage();\n    }\n    this.$translate.use(language);\n    return language;\n  },\n  /**\n   * get the browser language type.\n   * @returns {string}\n   */\n  getBrowserLanguage: function() {\n    var currentLang = navigator.language;\n    if (!currentLang)\n      currentLang = navigator.browserLanguage;\n    return currentLang.substr(0, 2);\n  }\n};\n\n/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.dateModelFormat', [])\n    .directive('dateModelFormat', [\"$filter\", function ($filter) {\n        return {\n            restrict: \"A\",\n            require: 'ngModel',\n            link: function (scope, elem, attrs, ngModel) {\n                ngModel.$parsers.push(function (viewValue) {\n                    return $filter('date')(viewValue, attrs.dateModelFormat || 'yyyy-MM-dd HH:mm:ss');\n                });\n            }\n        };\n    }]);\n\n/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.directives.enterClick', [])\n    .directive('enterClick', function () {\n        return {\n            restrict: \"A\",\n            link: function (scope, elem, attr) {\n\n                angular.element(elem).on('keyup', function (e) {\n\n                    if (e.keyCode !== 13) return;\n\n                    var selectExp = attr.enterClick;\n\n                    var targetElem, handler = function () {\n                        targetElem.triggerHandler('click');\n                    };\n\n                    try {\n                        targetElem = document.querySelector(selectExp);\n                    } catch (e) {\n                        targetElem = null;\n                    }\n\n                    if (!targetElem) {\n                        // 如果取不到元素，则尝试作为表达式执行\n                        handler = function () {\n                            scope.$eval(selectExp);\n                        };\n                    } else {\n                        targetElem = angular.element(targetElem);\n                        // 如果元素存在，但是是禁用状态的，放弃执行\n                        if (targetElem.attr(\"disabled\")) return;\n                    }\n\n                    handler();\n                });\n            }\n        };\n    });\n\n/**\n * @Description:\n * 引入对上传框插件 fileStyle 的指令支持\n * @Date:    2015-11-19 17:35:22\n * @User:    Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.fileStyle', [])\n  .directive('fileStyle', function () {\n    return {\n      restrict: 'A',\n      controller: [\"$scope\", \"$element\", function ($scope, $element) {\n        var options = $element.data();\n        // old usage support\n        options.classInput = $element.data('classinput') || options.classInput;\n        if ($element.filestyle) {\n          $element.filestyle(options);\n        }\n      }]\n    };\n  });\n/**\n * @Description:\n * table中无数据范围的数据\n * @User: linanbin\n * @Version: 2.0.0, 15/12/11\n */\n\nangular.module('voyageone.angular.directives.ifNoRows', [])\n    .directive('ifNoRows', [\"$templateCache\", \"$compile\", function ($templateCache, $compile) {\n\n        var tempNoDataKey = \"voyageone.angular.directives.ifNoRows.tpl.html\";\n\n        // 没有数据显示警告\n        if (!$templateCache.get(tempNoDataKey)) {\n            $templateCache.put(tempNoDataKey,\n            '<div class=\"text-center text-hs\" id=\"noData\">\\n' +\n            '    <h4 class=\"text-vo\"><i class=\"icon fa fa-warning\"></i>&nbsp;{{\\'TXT_ALERT\\' | translate}}</h4>\\n' +\n            '{{\\'TXT_MSG_NO_DATE\\' | translate}}' +\n            '</dv>');\n        }\n\n        return {\n            restrict: \"A\",\n            replace: false,\n            scope: {\n                $$data: \"@ifNoRows\"\n            },\n            link: function (scope, element) {\n\n                scope.$parent.$watch(scope.$$data, function () {\n\n                    // 如果数据不存在则显示警告信息\n                    if(scope.$parent.$eval(scope.$$data)  == 0) {\n                        element.find(\"#noData\").remove();\n                        element.append($compile($templateCache.get(tempNoDataKey))(scope));\n                    } else {\n                        element.find(\"#noData\").remove();\n                    }\n                })\n            }\n        };\n    }]);\n\n/**\n * @Description:\n * 用于菜单目录二级展开\n * @User:    Jonas\n * @Version: 0.2.0, 2015-12-07\n */\n\nangular.module('voyageone.angular.directives.uiNav', [])\n    .directive('uiNav', function () {\n\n        return {\n            restrict: 'AC',\n            link: function(scope, el) {\n                var _window = $(window),\n                    _mb = 768,\n                    wrap = $('.app-aside'),\n                    next,\n                    backdrop = '.dropdown-backdrop';\n                // unfolded\n                el.on('click', 'a', function(e) {\n                    next && next.trigger('mouseleave.nav');\n                    var _this = $(this);\n                    _this.parent().siblings( \".active\" ).toggleClass('active');\n                    _this.next().is('ul') &&  _this.parent().toggleClass('active') &&  e.preventDefault();\n                    // mobile\n                    _this.next().is('ul') || ( ( _window.width() < _mb ) && $('.app-aside').removeClass('show off-screen') );\n                });\n\n                // folded & fixed\n                el.on('mouseenter', 'a', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                    if ( !$('.app-aside-fixed.app-aside-folded').length || ( _window.width() < _mb ) || $('.app-aside-dock').length) return;\n                    var _this = $(e.target)\n                        , top\n                        , w_h = $(window).height()\n                        , offset = 50\n                        , min = 150;\n\n                    !_this.is('a') && (_this = _this.closest('a'));\n                    if( _this.next().is('ul') ){\n                        next = _this.next();\n                    }else{\n                        return;\n                    }\n\n                    _this.parent().addClass('active');\n                    top = _this.parent().position().top + offset;\n                    next.css('top', top);\n                    if( top + next.height() > w_h ){\n                        next.css('bottom', 0);\n                    }\n                    if(top + min > w_h){\n                        next.css('bottom', w_h - top - offset).css('top', 'auto');\n                    }\n                    next.appendTo(wrap);\n\n                    next.on('mouseleave.nav', function(e){\n                        $(backdrop).remove();\n                        next.appendTo(_this.parent());\n                        next.off('mouseleave.nav').css('top', 'auto').css('bottom', 'auto');\n                        _this.parent().removeClass('active');\n                    });\n\n                    $('.smart').length && $('<div class=\"dropdown-backdrop\"/>').insertAfter('.app-aside').on('click', function(next){\n                        next && next.trigger('mouseleave.nav');\n                    });\n\n                });\n\n                wrap.on('mouseleave', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                });\n            }\n        };\n    });\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/24\n */\n\n(function () {\n\n    var fieldTypes = {\n        INPUT: \"INPUT\",\n        DATE: \"DATE\",\n        DATETIME: \"DATETIME\",\n        TEXTAREA: \"TEXTAREA\",\n        SINGLE_CHECK: \"SINGLECHECK\",// 在complex中的显示select,以外的默认显示singlecheck,如果用户觉得select显示不方便,就将该field的type改成radio\n        RADIO: \"RADIO\",\n        MULTI_INPUT: \"MULTIINPUT\", // 没有被使用\n        MULTI_CHECK: \"MULTICHECK\",\n        COMPLEX: \"COMPLEX\", // TODO\n        MULTI_COMPLEX: \"MULTICOMPLEX\",\n        LABEL: \"LABEL\"  // 可以不显示\n    }, ruleTypes = {\n        VALUE_TYPE_RULE: \"valueTypeRule\",\n        REQUIRED_RULE: \"requiredRule\",\n        DISABLE_RULE: \"disableRule\",\n        READ_ONLY_RULE: \"readOnlyRule\",\n        REGEX_RULE: \"regexRule\",\n        SET_RULE: \"setRule\", // TODO 暂时不知道怎么用\n        TIP_RULE: \"tipRule\", // TODO 不需要处理\n        DEV_TIP_RULE: \"devTipRule\", // 不需要处理\n        MIN_LENGTH_RULE: \"minLengthRule\",\n        MAX_LENGTH_RULE: \"maxLengthRule\",\n        MIN_VALUE_RULE: \"minValueRule\",\n        MAX_VALUE_RULE: \"maxValueRule\",\n        MIN_INPUT_NUM_RULE: \"minInputNumRule\",\n        MAX_INPUT_NUM_RULE: \"maxInputNumRule\",\n        MIN_DECIMAL_DIGITS_RULE: \"minDecimalDigitsRule\", // TODO\n        MAX_DECIMAL_DIGITS_RULE: \"maxDecimalDigitsRule\", // TODO\n        MIN_TARGET_SIZE_RULE: \"minTargetSizeRule\", // TODO\n        MAX_TARGET_SIZE_RULE: \"maxTargetSizeRule\", // TODO\n        MIN_IMAGE_SIZE_RULE: \"minImageSizeRule\", // TODO\n        MAX_IMAGE_SIZE_RULE: \"maxImageSizeRule\" // TODO\n    }, valueTypes = {\n        TEXT: \"text\",\n        DECIMAL: \"decimal\",\n        INTEGER: \"integer\",\n        LONG: \"long\",\n        DATE: \"date\",\n        TIME: \"time\",\n        URL: \"url\",\n        TEXTAREA: \"textarea\",\n        HTML: \"html\"\n    }, templates = {\n        header: '<div class=\"form-group\">' +\n        '<label class=\"col-sm-2 control-label\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" ng-bind=\"$$data.name\"></label>' +\n        '<div class=\"col-sm-8\" ng-class=\"{\\'modal-open\\' : showHtmlData.isMultiComplex, \\'hierarchy_main\\': showHtmlData.isComplex}\" ng-transclude></div>' +\n        '<div class=\"col-sm-2\" ng-if=\"showHtmlData.isMultiComplex\"><button class=\"btn btn-success\" ng-click=\"addField($$data)\"><i class=\"fa fa-plus\"></i>{{\\'BTN_ADD\\' | translate}}</button></div>' +\n        '<div class=\"row\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><div class=\"col-sm-8 col-sm-offset-2 text-warnings\"><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div></div>' +\n        '</div>',\n        label: '<input style=\"min-width: 150px; max-width: 250px;\" type=\"text\" readonly ng-model=\"vm.$$data.value\" class=\"form-control\">',\n        input: '<input style=\"min-width: 150px; max-width: 250px;\" ng-model=\"vm.$$data.value\" class=\"form-control\" %replaceInfo%>',\n        date: '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input %replaceInfo% type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDate}}\" ng-model=\"$parent.vm.$$data.value\" date-model-format=\"{{formatDate}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button %replaceInfo% type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>',\n        datetime: '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input %replaceInfo% type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDateTime}}\" ng-model=\"$parent.vm.$$data.value\" date-model-format=\"{{formatDateTime}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button %replaceInfo% type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>',\n        textarea: '<textarea style=\"min-width: 150px; max-width: 650px;\" class=\"form-control no-resize\" ng-model=\"vm.$$data.value\" rows=\"{{showHtmlData.rowNum}}\" %replaceInfo%></textarea>',\n        select: '<select style=\"min-width: 150px; max-width: 250px;\" %replaceInfo% class=\"form-control\" ng-model=\"vm.$$data.value.value\" ng-options=\"option.value as option.displayName for option in vm.$$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>',\n        radio: '<label class=\"checkbox-inline c-radio\" ng-repeat=\"option in vm.$$data.options\"><input name=\"{{vm.$$data.id}}\" type=\"radio\" ng-value=\"option.value\" ng-model=\"vm.$$data.value.value\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>',\n        checkbox: '<label class=\"checkbox-inline c-checkbox\" ng-repeat=\"option in vm.$$data.options\"><input type=\"checkbox\" ng-value=\"option.value\" ng-click=\"checkboxValue(option.value)\" ng-checked=\"isSelected(option.value)\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>',\n        multiComplex: '<table class=\"table text-center\">' +\n        '<thead><tr>' +\n        '<th ng-repeat=\"field in vm.$$data.fields\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" class=\"text-center\" style=\"min-width: 180px;\">{{field.name}}</th>' +\n        '<th ng-if=\"!showHtmlData.notShowEdit\" style=\"min-width: 60px;\" class=\"text-center\" translate=\"TXT_ACTION\"></th>' +\n        '</tr></thead>' +\n        '<tbody><tr ng-repeat=\"value in vm.$$data.complexValues\">' +\n        '<td class=\"text-left\" ng-repeat=\"field in value.fieldMap\"><div class=\"tableLayer\"><p ng-if=\"field.type != \\'COMPLEX\\'\">&nbsp;</p><p><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></p></div></td>' +\n        '<td ng-if=\"!showHtmlData.notShowEdit\" style=\"min-width: 60px;\"><button title=\"{\\'BTN_DELETE\\' | translate}\" class=\"btn btn-danger btn-xs\" ng-click=\"delField($index)\"><i class=\"fa  fa-trash-o\"></i></button></td>' +\n        '</tr></tbody>' +\n        '</table>',\n        complex: '<schema-header ng-repeat=\"field in vm.$$data.fields\" data=\"field\"><schema-item data=\"field\"></schema-item></schema-header>',\n        multi_in_complex: '<div ng-repeat=\"field in vm.$$data.fields\"><p ng-bind=\"field.name\"></p><p><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></p></div>',\n        multiComplex_tip: '<div class=\"text-warnings\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><br><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div>'\n    };\n\n    var SchemaHeader, Schema;\n\n    SchemaHeader = function (config) {\n        this.config = config || {\n                isRequired: false,\n                isMultiComplex: false,\n                isComplex: false,\n                tipMsg: []\n            };\n    };\n\n    SchemaHeader.prototype = {\n        isRequired: function (value) {\n            return value !== undefined ? this.config.isRequired = value : this.config.isRequired;\n        },\n        isComplex: function (value) {\n            return value !== undefined ? this.config.isComplex = value : this.config.isComplex;\n        },\n        isMultiComplex: function (value) {\n            return value !== undefined ? this.config.isMultiComplex = value : this.config.isMultiComplex;\n        },\n        tipMsg: function (value) {\n            return value !== undefined ? this.config.tipMsg.push(value) : this.config.tipMsg;\n        }\n    };\n\n    Schema = function (config) {\n        this.config = config || {\n                type: null,\n                name: null,\n                rowNum: null,\n                isRequired: false,\n                checkValues: [],\n                tipMsg: [],\n                html: [],\n                notShowEdit: true\n            };\n    };\n\n    Schema.prototype = {\n        type: function (value) {\n            return value !== undefined ? this.config.type = value : this.config.type;\n        },\n        name: function (value) {\n            return value !== undefined ? this.config.name = value : this.config.name;\n        },\n        html: function (value) {\n            return value !== undefined ? this.config.html.push(value) : this.config.html.join(\" \");\n        },\n        isRequired: function (value) {\n            return value !== undefined ? this.config.isRequired = value : this.config.isRequired;\n        },\n        rowNum: function (value) {\n            return value !== undefined ? this.config.rowNum = value : this.config.rowNum;\n        },\n        tipMsg: function (value) {\n            return value !== undefined ? this.config.tipMsg.push(value) : this.config.tipMsg;\n        },\n        checkValues: function (value) {\n            return value !== undefined ? this.config.checkValues.push(value) : this.config.checkValues;\n        },\n        notShowEdit: function (value) {\n            return value !== undefined ? this.config.notShowEdit = value : this.config.notShowEdit;\n        }\n    };\n\n    angular.module('voyageone.angular.directives.schema', [])\n\n        .directive('schemaHeader', function () {\n\n            return {\n                restrict: \"E\",\n                replace: true,\n                transclude: true,\n                template: templates.header,\n                scope: {\n                    $$data: \"=data\"\n                },\n                link: function (scope) {\n\n                    var header = new SchemaHeader();\n                    var field = scope.$$data;\n\n                    // 标记特殊类型的 Field\n                    switch (field.type) {\n                        case fieldTypes.MULTI_COMPLEX:\n                            header.isMultiComplex(true);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            header.isComplex(true);\n                            break;\n                    }\n\n                    // 标记提供了显示支持的规则\n                    angular.forEach(field.rules, function (rule) {\n                        switch (rule.name) {\n                            case ruleTypes.REQUIRED_RULE:\n                                header.isRequired(\"true\" == rule.value);\n                                break;\n                            case ruleTypes.TIP_RULE:\n                                header.tipMsg(rule.value);\n                                break;\n                        }\n                    });\n\n                    scope.showHtmlData = angular.copy(header.config);\n\n                    /**\n                     * 设置multi complex添加一条新记录\n                     * @param data\n                     */\n                    scope.addField = function (data) {\n                        var newFieldMap = {};\n                        angular.forEach(data.fields, function (field) {\n                            newFieldMap[field.id] = field;\n                        });\n\n                        data.complexValues.push({fieldMap: angular.copy(newFieldMap)});\n                    };\n\n                }\n            };\n        })\n\n        .directive('schemaItem', [\"$compile\", function ($compile) {\n\n            return {\n                restrict: \"E\",\n                require: ['^?form'],\n                bindToController: true,\n                controllerAs: \"vm\",\n                scope: {\n                    $$data: \"=data\",\n                    $$hastip: \"=hastip\",\n                    $$complex: \"=complex\",\n                    $$notShowEdit: \"=notShowEdit\"\n                },\n                controller: function () {\n                },\n                link: function (scope, element) {\n\n                    // 监视配置变动\n                    scope.$watch('vm.$$data', refresh);\n\n                    scope.$watch('schemaForm.$valid', function ($valid) {\n                        scope.vm.$$data.$valid = $valid;\n                    });\n\n                    function refresh() {\n\n                        var schema = new Schema();\n                        var field = scope.vm.$$data;\n\n                        // 设置空间name\n                        schema.name(field.id);\n\n                        // 设置edit是否显示\n                        schema.notShowEdit(scope.vm.$$notShowEdit == undefined ? false : scope.vm.$$notShowEdit);\n\n                        schema.type(field.type);\n\n                        switch (field.type) {\n                            case fieldTypes.RADIO:\n                                if (scope.vm.$$complex)\n                                    schema.type(fieldTypes.SINGLE_CHECK);\n                                break;\n                            case fieldTypes.MULTI_CHECK:\n                                _setCheckValues(field.values);\n                                break;\n                            case fieldTypes.MULTI_COMPLEX:\n                                field.complexValues = _resetMultiComplex(field);\n                                break;\n                            case fieldTypes.COMPLEX:\n                                _resetComplex(field);\n                                break;\n                        }\n\n                        angular.forEach(field.rules, function (rule) {\n                            switch (rule.name) {\n                                case ruleTypes.VALUE_TYPE_RULE:\n                                    _valueTypeRule(rule);\n                                    break;\n                                case ruleTypes.REQUIRED_RULE:\n                                    _requiredRule(rule);\n                                    break;\n                                case ruleTypes.DISABLE_RULE:\n                                    _disableRule(rule);\n                                    break;\n                                case ruleTypes.READ_ONLY_RULE:\n                                    _readOnlyRule(rule);\n                                    break;\n                                case ruleTypes.REGEX_RULE:\n                                    _regexRule(rule);\n                                    break;\n                                case ruleTypes.TIP_RULE:\n                                    _tipRule(rule);\n                                    break;\n                                case ruleTypes.MIN_LENGTH_RULE:\n                                    _minLengthRule(rule);\n                                    break;\n                                case ruleTypes.MAX_LENGTH_RULE:\n                                    _maxLengthRule(rule);\n                                    break;\n                                case ruleTypes.MIN_VALUE_RULE:\n                                    _minValueRule(rule);\n                                    break;\n                                case ruleTypes.MAX_VALUE_RULE:\n                                    _maxValueRule(rule);\n                                    break;\n                                case ruleTypes.MIN_INPUT_NUM_RULE:\n                                    _minInputNumRule(rule);\n                                    break;\n                                case ruleTypes.MAX_INPUT_NUM_RULE:\n                                    _maxInputNumRule(rule);\n                                    break;\n                            }\n                        });\n\n                        var tempHtml = \"\";\n\n                        // 拼接body\n                        switch (schema.type()) {\n                            case fieldTypes.INPUT:\n                                tempHtml = templates.input.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.DATE:\n                                tempHtml = templates.date.replace(\"%replaceInfo%\", schema.html()).replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.DATETIME:\n                                tempHtml = templates.datetime.replace(\"%replaceInfo%\", schema.html()).replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.TEXTAREA:\n                                tempHtml = templates.textarea.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.SINGLE_CHECK:\n                                tempHtml = templates.select.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.RADIO:\n                                tempHtml = templates.radio.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.MULTI_CHECK:\n                                tempHtml = templates.checkbox.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.LABEL:\n                                tempHtml = templates.label;\n                                break;\n                            case fieldTypes.MULTI_COMPLEX:\n                                tempHtml = templates.multiComplex;\n                                break;\n                            case fieldTypes.COMPLEX:\n                                tempHtml = scope.vm.$$complex ? templates.multi_in_complex : templates.complex;\n                                break;\n                        }\n\n                        // 添加规则说明\n                        if (schema.tipMsg() != null && scope.vm.$$hastip) {\n                            tempHtml += templates.multiComplex_tip;\n                        }\n\n                        // 包裹 ng-form, 用于启用 angular 的验证功能\n                        tempHtml = '<ng-form name=\"schemaForm\">' + tempHtml + '</ng-form>';\n                        // 追加错误信息的显示\n                        tempHtml += '<div ng-repeat=\"(k, v) in schemaForm.$error\">{{k}}</div>';\n\n                        scope.showHtmlData = angular.copy(schema.config);\n                        element.html($compile(tempHtml)(scope));\n\n                        /**\n                         * 设置checkbox被选中的value值处理\n                         * @param value\n                         */\n                        scope.checkboxValue = function (value) {\n                            if (_.contains(scope.showHtmlData.checkValues, value)) {\n                                scope.showHtmlData.checkValues.splice(_.indexOf(scope.showHtmlData.checkValues, value), 1);\n                            } else {\n                                scope.showHtmlData.checkValues.push(value);\n                            }\n                            field.values = [];\n                            angular.forEach(scope.showHtmlData.checkValues, function (obj) {\n                                field.values.push({id: null, value: obj});\n                            })\n                        };\n\n                        /**\n                         * 判断是否被选中\n                         * @param value\n                         */\n                        scope.isSelected = function (value) {\n                            return _.contains(scope.showHtmlData.checkValues, value)\n                        };\n\n                        /**\n                         * 设置multi complex删除该条记录\n                         * @param index\n                         */\n                        scope.delField = function (index) {\n                            field.complexValues.splice(index, 1);\n                        };\n\n                        /**\n                         * 设置checkvalues\n                         * @param values\n                         * @private\n                         */\n                        function _setCheckValues(values) {\n                            if (values != undefined && values != null) {\n                                angular.forEach(values, function (obj) {\n                                    schema.checkValues(obj.value);\n                                })\n                            }\n                        }\n\n                        /**\n                         * 重新设置multicomplex的一些属性\n                         * @param data\n                         * @private\n                         */\n                        function _resetMultiComplex(data) {\n                            var tempValues = [];\n                            angular.forEach(data.complexValues, function (value) {\n                                var tempFieldMap = {};\n                                angular.forEach(data.fields, function (field) {\n                                    var tempField = angular.copy(field);\n                                    if (value.fieldMap[field.id] != undefined) {\n                                        switch (field.type) {\n                                            case fieldTypes.INPUT:\n                                            case fieldTypes.LABEL:\n                                            case fieldTypes.DATE:\n                                            case fieldTypes.DATETIME:\n                                            case fieldTypes.TEXTAREA:\n                                            case fieldTypes.SINGLE_CHECK:\n                                            case fieldTypes.RADIO:\n                                                tempField.value = value.fieldMap[field.id].value;\n                                                break;\n                                            case fieldTypes.MULTI_INPUT:\n                                            case fieldTypes.MULTI_CHECK:\n                                                tempField.values = value.fieldMap[field.id].values;\n                                                break;\n                                            case fieldTypes.COMPLEX:\n                                                tempField.complexValue = value.fieldMap[field.id].complexValue;\n                                                break;\n                                            case fieldTypes.MULTI_COMPLEX:\n                                                tempField.complexValues = value.fieldMap[field.id].complexValues;\n                                                break;\n                                        }\n                                    }\n                                    tempFieldMap[field.id] = tempField;\n                                });\n                                tempValues.push({fieldMap: angular.copy(tempFieldMap)});\n                            });\n\n                            // 如果values为空,默认添加空白行\n                            if (_.isEmpty(data.complexValues)) {\n                                var newFieldMap = {};\n                                angular.forEach(data.fields, function (field) {\n                                    newFieldMap[field.id] = field;\n                                    //eval(\"newFieldMap.\" + field.id + \"=field\");\n                                });\n\n                                tempValues.push({fieldMap: angular.copy(newFieldMap)});\n                            }\n\n                            return tempValues;\n                        }\n\n                        /**\n                         * 重新\n                         * @param data\n                         * @private\n                         */\n                        function _resetComplex(data) {\n                            angular.forEach(data.fields, function (field) {\n                                switch (field.type) {\n                                    case fieldTypes.INPUT:\n                                    case fieldTypes.LABEL:\n                                    case fieldTypes.DATE:\n                                    case fieldTypes.DATETIME:\n                                    case fieldTypes.TEXTAREA:\n                                    case fieldTypes.SINGLE_CHECK:\n                                    case fieldTypes.RADIO:\n                                        if (!_.isEmpty(data.complexValue.fieldMap))\n                                            field.value = data.complexValue.fieldMap[field.id].value;\n                                        else\n                                            field.value = data.defaultComplexValue.fieldMap[field.id].value;\n                                        break;\n                                    case fieldTypes.MULTI_INPUT:\n                                    case fieldTypes.MULTI_CHECK:\n                                        if (!_.isEmpty(data.complexValue.fieldMap))\n                                            field.values = data.complexValue.fieldMap[field.id].values;\n                                        else\n                                            field.values = data.defaultComplexValue.fieldMap[field.id].values;\n                                        break;\n                                    case fieldTypes.COMPLEX:\n                                        if (!_.isEmpty(data.complexValue.fieldMap))\n                                            field.complexValue = data.complexValue.fieldMap[field.id].complexValue;\n                                        else\n                                            field.complexValue = data.defaultComplexValue.fieldMap[field.id].complexValue;\n                                        break;\n                                    case fieldTypes.MULTI_COMPLEX:\n                                        if (!_.isEmpty(data.complexValue.fieldMap))\n                                            field.complexValues = data.complexValue.fieldMap[field.id].complexValues;\n                                        else\n                                            field.complexValues = data.defaultComplexValue.fieldMap[field.id].complexValues;\n                                        break;\n                                }\n                            });\n                        }\n\n                        /**\n                         * 处理valueTypeRule\n                         * @param valueTypeRule\n                         * @private\n                         */\n                        function _valueTypeRule(valueTypeRule) {\n                            switch (valueTypeRule.value) {\n                                case valueTypes.TEXT:\n                                case valueTypes.DECIMAL:\n                                case valueTypes.INTEGER:\n                                case valueTypes.LONG:\n                                    schema.type(fieldTypes.INPUT);\n                                    schema.html(\"type=\\\"text\\\"\");\n                                    break;\n                                case valueTypes.DATE:\n                                    schema.type(fieldTypes.DATE);\n                                    break;\n                                case valueTypes.TIME:\n                                    schema.type(fieldTypes.DATETIME);\n                                    break;\n                                case valueTypes.URL:\n                                    schema.type(fieldTypes.INPUT);\n                                    schema.html(\"type=\\\"url\\\"\");\n                                    break;\n                                case valueTypes.TEXTAREA:\n                                    schema.type(fieldTypes.TEXTAREA);\n                                    schema.rowNum(4);\n                                    break;\n                                case valueTypes.HTML:\n                                    schema.type(fieldTypes.TEXTAREA);\n                                    schema.rowNum(10);\n                                    break;\n                            }\n                        }\n\n                        /**\n                         * 处理requiredRule\n                         * @param requiredRule\n                         * @private\n                         */\n                        function _requiredRule(requiredRule) {\n                            if (\"true\" == requiredRule.value) {\n                                schema.isRequired(true);\n                                schema.html(\"required\");\n                            }\n                        }\n\n                        /**\n                         * 处理disableRule\n                         * @param disableRule\n                         * @private\n                         */\n                        function _disableRule(disableRule) {\n                            if (\"true\" == disableRule.value\n                                && disableRule.dependGroup == null) {\n                                schema.html(\"ng-disabled=\\\"true\\\"\");\n                            }\n                        }\n\n                        /**\n                         * 处理readOnlyRule\n                         * @param readOnlyRule\n                         * @private\n                         */\n                        function _readOnlyRule(readOnlyRule) {\n                            if (\"true\" == readOnlyRule.value) {\n                                schema.html(\"readonly\");\n                            }\n                        }\n\n                        /**\n                         * 处理regexRule\n                         * @param regexRule\n                         * @private\n                         */\n                        function _regexRule(regexRule) {\n                            schema.html(\"ng-pattern=\\\"/\" + regexRule.value + \"/\\\"\");\n                        }\n\n                        /**\n                         * 处理tipRule\n                         * @param tipRule\n                         * @private\n                         */\n                        function _tipRule(tipRule) {\n                            schema.tipMsg(tipRule.value);\n                        }\n\n                        /**\n                         * 处理minLengthRule\n                         * @param minLengthRule\n                         * @private\n                         */\n                        function _minLengthRule(minLengthRule) {\n                            var value = isNaN(parseInt(minLengthRule.value)) ? 0 : minLengthRule.value;\n\n                            if (\"not include\" === minLengthRule.exProperty)\n                                value = (value > 0) ? value - 1 : 0;\n\n                            if (\"character\" == minLengthRule.unit)\n                                schema.html(\"ng-minlength=\\\"\" + value + \"\\\"\");\n                            else\n                                schema.html(\"ng-char-minlength=\\\"\" + value + \"\\\"\");\n                        }\n\n                        /**\n                         * 处理maxLengthRule\n                         * @param maxLengthRule\n                         * @private\n                         */\n                        function _maxLengthRule(maxLengthRule) {\n                            var value = isNaN(parseInt(maxLengthRule.value)) ? 0 : maxLengthRule.value;\n\n                            if (\"not include\" === maxLengthRule.exProperty)\n                                value = (value > 0) ? value - 1 : 0;\n\n                            if (\"character\" == maxLengthRule.unit)\n                                schema.html(\"ng-maxlength=\\\"\" + value + \"\\\"\");\n                            else\n                                schema.html(\"ng-char-maxlength=\\\"\" + value + \"\\\"\");\n                        }\n\n                        /**\n                         * 处理minValueRule\n                         * @param minValueRule\n                         * @private\n                         */\n                        function _minValueRule(minValueRule) {\n                            var value = isNaN(parseFloat(minValueRule.value)) ? 0 : parseFloat(minValueRule.value);\n\n                            if (\"not include\" === minValueRule.exProperty)\n                                value = (value > 0) ? value - 0.01 : 0;\n\n                            schema.html(\"ng-minvalue=\\\"\" + value + \"\\\"\");\n                        }\n\n                        /**\n                         * 处理maxValueRule\n                         * @param maxValueRule\n                         * @private\n                         */\n                        function _maxValueRule(maxValueRule) {\n                            var value = isNaN(parseFloat(maxValueRule.value)) ? 0 : parseFloat(maxValueRule.value);\n\n                            if (\"not include\" === maxValueRule.exProperty)\n                                value = (value > 0) ? value - 0.01 : 0;\n\n                            schema.html(\"ng-maxvalue=\\\"\" + value + \"\\\"\");\n\n                        }\n\n                        /**\n                         * 处理minInputNumRule\n                         * @param minInputNumRule\n                         * @private\n                         */\n                        function _minInputNumRule(minInputNumRule) {\n                            var value = isNaN(parseInt(minInputNumRule.value)) ? 0 : parseInt(minInputNumRule.value);\n\n                            if (\"not include\" === minInputNumRule.exProperty)\n                                value = (value > 0) ? value - 1 : 0;\n\n                            schema.html(\"ng-mininputnum=\\\"\" + value + \"\\\"\");\n                        }\n\n                        /**\n                         * 处理maxInputNumRule\n                         * @param maxInputNumRule\n                         * @private\n                         */\n                        function _maxInputNumRule(maxInputNumRule) {\n                            var value = isNaN(parseInt(maxInputNumRule.value)) ? 0 : parseInt(maxInputNumRule.value);\n\n                            if (\"not include\" === maxInputNumRule.exProperty)\n                                value = (value > 0) ? value - 1 : 0;\n\n                            schema.html(\"ng-maxinputnum=\\\"\" + value + \"\\\"\");\n                        }\n                    }\n                }\n            };\n        }]);\n\n})();\n/**\n * @Description:\n * 用于动态显示options\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-22\n */\n\nangular.module('voyageone.angular.directives.voption', [])\n    .directive('voption', [\"$templateCache\", \"$compile\", function ($templateCache, $compile) {\n\n        var templateKey_select = \"voyageone.angular.directives.optionSelect.tpl.html\";\n\n        // 显示成select样式\n        if (!$templateCache.get(templateKey_select)) {\n            $templateCache.put(templateKey_select,\n                '<select class=\"form-control\" ng-model=\"$$data.value.value\" ng-options=\"option.value as option.displayName for option in $$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');\n        }\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope, element) {\n\n                // 定义不同的展示种类\n                var typeList = {\n                    SINGLE_CHECK: \"SINGLECHECK\"\n                };\n\n                // 监视配置变动\n                scope.$watch('$$data', function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 根据type选择展示不同的控件\n                 */\n                function refresh() {\n                    var tempHtml;\n                    switch (scope.$$data.type) {\n                        case typeList.SINGLE_CHECK:\n                            tempHtml = $compile($templateCache.get(templateKey_select))(scope);\n                            break;\n                    }\n                    element.html(tempHtml);\n                }\n            }\n        };\n    }]);\n/**\n * @Description:\n * 用于分页\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-08\n */\n\nangular.module('voyageone.angular.directives.vpagination', [])\n    .directive('vpagination', [\"$templateCache\", \"$compile\", \"vpagination\", function ($templateCache, $compile, vpagination) {\n\n        var templateKey = \"voyageone.angular.directives.pagination.tpl.html\";\n        var templateKeyNoData = \"voyageone.angular.directives.paginationNoData.tpl.html\";\n\n        // 有数据分页样式\n        if (!$templateCache.get(templateKey)) {\n            $templateCache.put(templateKey,\n                '<div class=\"col-sm-3\">\\n' +\n                '    <div class=\"page-main form-inline\">{{\\'TXT_SHOWING_NO\\' | translate}}&nbsp;<input class=\"text-center\" type=\"text\" ng-model=\"curr.pageNo\"/>&nbsp;/&nbsp;{{totalPages}}&nbsp;{{\\'TXT_PAGE\\' | translate}}&nbsp;' +\n                '        <button class=\"btn btn-xs btn-default\" type=\"button\" ng-click=\"goPage(curr.pageNo)\" translate=\"BTN_GO\"></button>\\n' +\n                '    </div>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-4 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_SHOWING\\' | translate}}&nbsp;{{curr.start}}-{{curr.end}}&nbsp;{{\\'TXT_OF\\' | translate}}&nbsp;{{totalItems}}&nbsp{{\\'TXT_ITEMS\\' | translate}}</small>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-5 text-right text-center-xs\"><div>' +\n                '    <ul class=\"pagination-sm m-t-none m-b pagination ng-isolate-scope ng-valid ng-dirty ng-valid-parse\">\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-first\"><a href ng-click=\"goPage(1)\" ng-disabled=\"curr.isFirst\">&laquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-prev\"><a href ng-click=\"goPage(curr.pageNo - 1)\" ng-disabled=\"curr.isFirst\">&lsaquo;</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowStart\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-repeat=\"page in curr.pages track by $index\" ng-class=\"{active: isCurr(page)}\" class=\"pagination-page\"><a href ng-click=\"goPage(page)\">{{page}}</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowEnd\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-next\"><a href ng-click=\"goPage(curr.pageNo + 1)\" ng-disabled=\"curr.isLast\">&rsaquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-last\"><a href ng-click=\"goPage(totalPages)\" ng-disabled=\"curr.isLast\">&raquo;</a></li>\\n' +\n                '    </ul>\\n' +\n                '</div>');\n        }\n\n        // 无数据分页样式\n        if (!$templateCache.get(templateKeyNoData)) {\n            $templateCache.put(templateKeyNoData,\n                '<div class=\"col-sm-7 col-sm-offset-2 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_SHOWING\\' | translate}}&nbsp;0-0&nbsp;{{\\'TXT_OF\\' | translate}}&nbsp;0&nbsp{{\\'TXT_ITEMS\\' | translate}}</small>\\n' +\n                '</div>');\n        }\n\n        var defConfig = {curr: 1, total: 0, size: 20, showPageNo:5};\n\n        return {\n            restrict: \"AE\",\n            //templateUrl: templateKey,\n            replace: false,\n            scope: {\n                $$configNameForA: \"@vpagination\",\n                $$configNameForE: \"@config\"\n            },\n            link: function (scope, element) {\n\n                // 获取用户的config配置\n                var userConfigName = scope.$$configNameForA || scope.$$configNameForE;\n                var userConfig = scope.$parent.$eval(userConfigName);\n\n                // 将用户配置覆盖到默认配置后，在重新覆盖到用户配置上，用于补全配置属性\n                var userWithDefConfig = angular.extend({}, defConfig, userConfig);\n                scope.config = angular.extend(userConfig, userWithDefConfig);\n\n                var p = new vpagination(scope.config);\n\n                // 监视配置变动\n                scope.$parent.$watch(userConfigName, function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 跳转到指定页\n                 * @param num\n                 */\n                scope.goPage = function (num) {\n                    p.goPage(isNaN(Number(num)) ? 1 : Number(num));\n                };\n\n                /**\n                 * 判断是否是当前页\n                 * @param num\n                 * @returns {*|boolean}\n                 */\n                scope.isCurr = function (num) {\n                    return p.isCurr(num);\n                };\n\n                function refresh() {\n\n                    // 获取总页数\n                    scope.totalPages = p.getPageCount();\n                    // 获取总items数\n                    scope.totalItems = p.getTotal();\n                    // 获取当前页的信息\n                    scope.curr = p.getCurr();\n\n                    // 根据总数量显示不同的分页样式\n                    var tempHtml;\n                    if(p.getTotal() == 0) {\n                        tempHtml = $compile($templateCache.get(templateKeyNoData))(scope);\n                    } else {\n                        tempHtml = $compile($templateCache.get(templateKey))(scope);\n                    }\n                    element.html(tempHtml);\n\n                }\n            }\n        };\n    }]);\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\nangular.module('voyageone.angular.directives.validator', [])\n\n    // 定义ng-char-maxlength\n    .directive('ngCharMaxlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxlength = -1;\n                attr.$observe('ngCharMaxlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    maxlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxlength = function(modelValue, viewValue) {\n                    return (maxlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) <= maxlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-char-minlength\n    .directive('ngCharMinlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minlength = -1;\n                attr.$observe('ngCharMinlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    minlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minlength = function(modelValue, viewValue) {\n                    return (minlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) >= minlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-maxvalue\n    .directive('ngMaxvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        maxvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        maxvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        maxvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxvalue = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-minvalue\n    .directive('ngMinvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMinvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        minvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        minvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        minvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minvalue = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue >= minvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-maxinputnum\n    .directive('ngMaxinputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxinputvalue', function(value) {\n                    maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxinputnum = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-mininputnum\n    .directive('ngMininputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMininputnum', function(value) {\n                    minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.mininputnum = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length >= minvalue);\n                };\n            }\n        }\n    })\n;return angular.module(\"voyageone.angular\",[\n\"voyageone.angular.controllers.datePicker\",\n\"voyageone.angular.controllers.selectRows\",\n\"voyageone.angular.controllers.showPopover\",\n\"voyageone.angular.services.ajax\",\n\"voyageone.angular.services.cookie\",\n\"voyageone.angular.services.message\",\n\"voyageone.angular.services.permission\",\n\"voyageone.angular.services.translate\",\n\"voyageone.angular.factories.dialogs\",\n\"voyageone.angular.factories.interceptor\",\n\"voyageone.angular.factories.notify\",\n\"voyageone.angular.factories.pppAutoImpl\",\n\"voyageone.angular.factories.selectRows\",\n\"voyageone.angular.factories.vpagination\",\n\"voyageone.angular.directives.dateModelFormat\",\n\"voyageone.angular.directives.enterClick\",\n\"voyageone.angular.directives.fileStyle\",\n\"voyageone.angular.directives.ifNoRows\",\n\"voyageone.angular.directives.uiNav\",\n\"voyageone.angular.directives.schema\",\n\"voyageone.angular.directives.voption\",\n\"voyageone.angular.directives.vpagination\",\n\"voyageone.angular.directives.validator\"\n]);});","/**\n * @Description:\n * 弹出日期控件\n * @User:    Edward\n * @Version: 0.2.0, 2015-10-10\n */\n\nangular.module('voyageone.angular.controllers.datePicker', [])\n    .controller('datePickerCtrl', function ($scope, $translate, uibDatepickerPopupConfig) {\n        var vm = this;\n\n        vm.formats = ['yyyy-MM-dd', 'yyyy-MM-dd HH:mm:ss'];\n\n        $scope.formatDate = vm.formats[0];\n        $scope.formatDateTime = vm.formats[1];\n        $scope.opened = false;\n\n        $scope.open = open;\n        uibDatepickerPopupConfig.currentText = $translate.instant('BTN_TODAY');\n        uibDatepickerPopupConfig.clearText = $translate.instant('BTN_CLEAR');\n        uibDatepickerPopupConfig.closeText = $translate.instant('BTN_CLOSE');\n\n        function open($event, swhich, count) {\n            $event.preventDefault();\n            $event.stopPropagation();\n\n            // 如果该数组未空,则初始化数组\n            if ($scope.$parent.datePicker.length == 0) {\n                for(var i = 0; i < count; i++) {\n                    if (swhich == i)\n                        $scope.$parent.datePicker.push({opened: true});\n                    else\n                        $scope.$parent.datePicker.push({opened: false});\n                }\n            }\n            // 关闭其他日期控件画面\n            else {\n                angular.forEach($scope.$parent.datePicker, function (object, index) {\n                    if (swhich == index)\n                        object.opened = !object.opened;\n                    else\n                        object.opened = false;\n                });\n            }\n        }\n    });","/**\n * @Description:\n * select tables items\n * @User: linanbin\n * @Version: 2.0.0, 15/12/16\n */\n\nangular.module('voyageone.angular.controllers.selectRows', [])\n    .controller('selectRowsCtrl', function ($scope) {\n\n        $scope.selectAll = selectAll;\n        $scope.selectOne = selectOne;\n        $scope.isAllSelected = isAllSelected;\n\n        /**\n         * 全部选中当前页数据\n         * @param objectList\n         */\n        function selectAll(objectList, id) {\n\n            objectList.selAllFlag = !objectList.selAllFlag;\n            if(!id){\n                id=\"id\";\n            }\n\n            // 循环处理全选中的数据\n            angular.forEach(objectList.currPageRows, function (object) {\n\n                // 单签页面所有产品选中flag被标示\n                objectList.selFlag[object[id]] = objectList.selAllFlag;\n\n                if (objectList.hasOwnProperty('selList')) {\n\n                    var tempList = _.pluck(objectList.selList, id);\n                    if (objectList.selAllFlag && tempList.indexOf(object[id]) < 0) {\n                        objectList.selList.push(object);\n                    } else if (!objectList.selAllFlag && tempList.indexOf(object[id]) > -1) {\n                        objectList.selList.splice(tempList.indexOf(object[id]), 1);\n                    }\n                }\n            });\n        }\n\n        /**\n         * 选中单条数据\n         * @param currentId\n         * @param objectList\n         */\n        function selectOne(currentId, objectList, id) {\n            if(!id){\n                id=\"id\";\n            }\n            if (objectList.hasOwnProperty('selList')) {\n\n                angular.forEach(objectList.currPageRows, function(object) {\n\n                    var tempList = _.pluck(objectList.selList, id);\n                    if (_.isEqual(object[id], currentId)) {\n                        if (tempList.indexOf(object[id]) > -1) {\n                            objectList.selList.splice(tempList.indexOf(object[id]), 1);\n                        } else {\n                            objectList.selList.push(object);\n                        }\n                    }\n                });\n            }\n\n            objectList.selAllFlag = true;\n            tempList = _.pluck(objectList.selList, id);\n            angular.forEach(objectList.currPageRows, function(object) {\n                if (tempList.indexOf(object[id]) == -1) {\n                    objectList.selAllFlag = false;\n                }\n            })\n        }\n\n        /**\n         * 判断当前页是否为全选中\n         * @param objectList\n         * @param id\n         */\n        function isAllSelected (objectList, id) {\n            if(!id){\n                id=\"id\";\n            }\n\n            if (objectList != undefined) {\n\n                objectList.selAllFlag = true;\n                var tempList = _.pluck(objectList.selList, id);\n                angular.forEach(objectList.currPageRows, function(object) {\n                    if (tempList.indexOf(object[id]) == -1) {\n                        objectList.selAllFlag = false;\n                    }\n                });\n                return objectList.selAllFlag;\n            }\n\n            return false;\n        }\n    });","/**\n * @Description:\n * 显示html的popover的共同方法\n * @User: linanbin\n * @Version: 2.0.0, 15/12/14\n */\n\nangular.module('voyageone.angular.controllers.showPopover', [])\n    .controller('showPopoverCtrl', function ($scope) {\n\n        $scope.showInfo = showInfo;\n\n        function showInfo(values) {\n            var tempHtml = \"\";\n\n            angular.forEach(values, function (data, index) {\n                tempHtml += data;\n                if (index !== values.length) {\n                    tempHtml += \"<br>\";\n                }\n            });\n            return tempHtml\n        }\n    });\n","/**\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.dialogs', [])\n    .factory(\"$dialogs\", function ($modal, $filter, $templateCache) {\n\n        var templateName = 'voyageone.angular.factories.dialogs.tpl.html';\n        var template =\n            '<div class=\"vo_modal\">' +\n                '<div class=\"modal-header\">' +\n                    '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" ng-click=\"close()\">' +\n                        '<span aria-hidden=\"true\"><i ng-click=\"close()\" class=\"fa fa-close\"></i></span>' +\n                    '</button>' +\n                    '<h5 class=\"modal-title\" ng-bind-html=\"title\"></h5>' +\n                '</div>' +\n                '<div class=\"modal-body wrapper-lg\">' +\n                    '<div class=\"row\">' +\n                        '<h5 class=\"text-center text-hs\"><p class=\"text-center\" ng-bind-html=\"content\"></p></h5>' +\n                    '</div>' +\n                '</div>' +\n                '<div class=\"modal-footer\">' +\n                    '<button class=\"btn btn-default btn-sm\" ng-if=\"!isAlert\" ng-click=\"close()\" translate=\"BTN_CANCEL\"></button>' +\n                    '<button class=\"btn btn-vo btn-sm\" ng-click=\"ok()\" translate=\"BTN_OK\"></button>' +\n                '</div>' +\n            '</div>';\n        $templateCache.put(templateName, template);\n\n        function tran(translationId, values) {\n            return $filter('translate')(translationId, values);\n        }\n\n        return function (options) {\n\n            if (!_.isObject(options)) throw \"arg type must be object\";\n\n            var values;\n\n            if (_.isObject(options.content)) {\n                values = options.content.values;\n                options.content = options.content.id;\n            }\n\n            options.title = tran(options.title);\n            options.content = tran(options.content, values);\n\n            var modalInstance = $modal.open({\n                templateUrl: templateName,\n                controller: [\"$scope\", function (scope) {\n                    _.extend(scope, options);\n                }],\n                size: 'md'\n            });\n\n            options.close = function () {\n                modalInstance.dismiss('close')\n            };\n\n            options.ok = function () {\n                modalInstance.close('');\n            };\n\n            return modalInstance;\n        };\n    })\n\n    .factory(\"alert\", function ($dialogs) {\n        return function (content, title) {\n            return $dialogs({\n                title: title || 'TXT_ALERT',\n                content: content,\n                isAlert: true\n            });\n        };\n    })\n\n    .factory(\"confirm\", function vConfirm($dialogs) {\n        return function (content, title) {\n            return $dialogs({\n                title: title || 'TXT_CONFIRM',\n                content: content,\n                isAlert: false\n            });\n        };\n    });","/**\n * @Date:    2015-11-16 20:51:05\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.factories.interceptor', [])\n    .factory('interceptorFactory', function () {\n\n        // 未知的系统错误\n        var UNKNOWN_CODE = \"5\";\n        // 和 JAVA 同步,系统通知前端自动跳转的特殊代码\n        var CODE_SYS_REDIRECT = \"SYS_REDIRECT\";\n        // 和 JAVA 同步,回话过期的信息\n        var MSG_TIMEOUT = \"300001\";\n\n        /**\n         * 对系统自动跳转的响应,执行跳转\n         * @param {{code:string,redirectTo:string}} res\n         * @returns {boolean}\n         */\n        function autoRedirect(res) {\n            if (res.code != CODE_SYS_REDIRECT) {\n                return false;\n            }\n            // 如果跳转数据异常,则默认跳转登陆页\n            location.href = res.redirectTo || '/login.html';\n            return true;\n        }\n\n        /**\n         * 对会话超时和未登录进行特殊处理\n         * @param {{code:string}} res\n         * @returns {boolean}\n         */\n        function sessionTimeout(res) {\n            if (res.code != MSG_TIMEOUT) {\n                return false;\n            }\n            // 会话超时,默认跳转到登陆页\n            location.href = '/login.html';\n            return true;\n        }\n\n        /**\n         * 处理位置的异常\n         * @param response\n         */\n        function unknownException(response) {\n\n            if (response.data.code !== UNKNOWN_CODE) {\n                return;\n            }\n\n            window.$$lastUnknow = response;\n            console.error('Server throw unknown exceptio. Message:', response.data.message);\n        }\n\n        return {\n            request: function (config) {\n                return config;\n            },\n            /**\n             * 响应拦截\n             * @param {{config:object, data:*, headers:function, status:number, statusText:string}} res\n             * @returns {*}\n             */\n            response: function (res) {\n                var result = res.data;\n\n                // 特殊处理部分内容\n                if (autoRedirect(result) || sessionTimeout(result)) {\n                    return res;\n                }\n\n                unknownException(res);\n\n                return res;\n            },\n            requestError: function (config) {\n                return config;\n            },\n            responseError: function (res) {\n            }\n        };\n    })\n    .config(function ($httpProvider) {\n        $httpProvider.interceptors.push('interceptorFactory');\n    });","/**\n * Notify 的可用参数\n * {\n *    // whether to hide the notification on click\n *    clickToHide: true,\n *    // whether to auto-hide the notification\n *    autoHide: true,\n *    // if autoHide, hide after milliseconds\n *    autoHideDelay: 5000,\n *    // show the arrow pointing at the element\n *    arrowShow: true,\n *    // arrow size in pixels\n *    arrowSize: 5,\n *    // position defines the notification position though uses the defaults below\n *    position: '...',\n *    // default positions\n *    elementPosition: 'bottom left',\n *    globalPosition: 'top right',\n *    // default style\n *    style: 'bootstrap',\n *    // default class (string or [string])\n *    className: 'error',\n *    // show animation\n *    showAnimation: 'slideDown',\n *    // show animation duration\n *    showDuration: 400,\n *    // hide animation\n *    hideAnimation: 'slideUp',\n *    // hide animation duration\n *    hideDuration: 200,\n *    // padding between element and notification\n *    gap: 2\n * }\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.notify', [])\n\n    .factory('notify', function ($filter) {\n\n        /**\n         * @ngdoc function\n         * @name voNotify\n         * @description\n         * 自动关闭的弹出提示框\n         */\n        function notify(options) {\n\n            if (!options) return;\n            if (_.isString(options)) options = {message: options};\n            if (!_.isObject(options)) return;\n\n            var values;\n\n            // 为 translate 的格式化提供支持，检测类型并转换\n            if (_.isObject(options.message)) {\n\n                values = options.message.values;\n                options.message = options.message.id;\n            }\n\n            options.message = $filter('translate')(options.message, values);\n\n            return $.notify(options.message, options);\n        }\n\n        notify.success = function (message) {\n            return notify({message: message, className: \"success\"});\n        };\n\n        notify.warning = function (message) {\n            return notify({message: message, className: \"warning\"});\n        };\n\n        notify.danger = function (message) {\n            return notify({message: message, className: \"danger\"});\n        };\n\n        return notify;\n    });","/**\n * @ngdoc\n * @factory\n * @name pppAutoImpl\n * @description\n * 根据定义自动生成方法实现. 注意! 依赖 ui-bootstrap\n */\n\nangular.module('voyageone.angular.factories.pppAutoImpl', [])\n    .factory('pppAutoImpl', function ($q, $modal) {\n        return function (declares, viewBaseUrl, jsBaseUrl) {\n            if (!declares.$$$ || !declares.$$$.impl)\n                declares.$$$ = {\n                    impl: declarePopupMethods(declares, viewBaseUrl, jsBaseUrl, '')\n                };\n            return declares.$$$.impl;\n        };\n\n        function declarePopupMethods(declares, viewBaseUrl, jsBaseUrl, popupBaseKey) {\n            var impl = {};\n            if (popupBaseKey) popupBaseKey += '/';\n            _.each(declares, function (declare, parentDir) {\n                if (!declare.popupKey) {\n                    if (_.isObject(declare) || _.isArray(declare)) _.extend(impl,\n                        declarePopupMethods(declare,\n                            viewBaseUrl, jsBaseUrl, popupBaseKey + parentDir,\n                            $q, $modal));\n                    return;\n                }\n\n                var options = _.clone(declare.options) || {};\n\n                var pathBase = '/' + popupBaseKey;\n                if (_.isString(parentDir)) pathBase += parentDir + '/';\n                pathBase += declare.popupKey;\n\n                options.templateUrl = viewBaseUrl + pathBase + '.tpl.html';\n                options.controllerUrl = jsBaseUrl + pathBase + '.ctl';\n\n                if (declare.controllerAs || declare.controller)\n                    options.controller = getControllerName(declare.popupKey);\n                if (declare.controllerAs)\n                    options.controller += ' as ' + (_.isString(declare.controllerAs) ? declare.controllerAs : 'ctrl');\n\n                impl[declare.popupKey] = function (context) {\n                    if (context) options.resolve = {\n                        context: function () {\n                            return context;\n                        }\n                    };\n\n                    var defer = $q.defer();\n                    require([options.controllerUrl], function () {\n                        defer.resolve($modal.open(options).result);\n                    });\n                    return defer.promise;\n                };\n            });\n            return impl;\n        }\n\n        function getControllerName(key) {\n            return key\n                    .replace(/\\.(\\w)/g, function (m, m1) {\n                        return m1.toUpperCase();\n                    })\n                    .replace(/^(\\w)/, function (m, m1) {\n                        return m1.toLowerCase()\n                    }) + 'PopupController';\n        }\n    });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 16/1/11\n */\n\nangular.module('voyageone.angular.factories.selectRows', [])\n\n    // selectRowsFactory\n    .factory('selectRowsFactory', function () {\n        return function (config) {\n            var _selectRowsInfo = config ? config : {\n                selAllFlag: false,\n                currPageRows: [],// [{id: \"12345\"}], [{id: \"123456\", name: \"test1\"}]\n                selFlag:[], // [{\"12345\": true}, {\"12346\": false}]\n                selList: [] // [{id: \"12345\"}], [{id: \"123456\", name: \"test1\"}]\n            };\n\n            this.selAllFlag = function (value) {\n                return value !== undefined ? _selectRowsInfo.selAllFlag = value : _selectRowsInfo.selAllFlag;\n            };\n\n            this.clearCurrPageRows = function () {\n                _selectRowsInfo.currPageRows = [];\n            };\n\n            this.currPageRows = function (value) {\n                return value !== undefined ? _selectRowsInfo.currPageRows.push(value) : _selectRowsInfo.currPageRows;\n            };\n\n            this.selFlag = function (value) {\n                return value !== undefined ? _selectRowsInfo.selFlag.push(value) : _selectRowsInfo.selFlag;\n            };\n\n            this.selList = function (value) {\n                return value !== undefined ? _selectRowsInfo.selList.push(value) : _selectRowsInfo.selList;\n            };\n\n            this.selectRowsInfo = _selectRowsInfo;\n        }\n    });","/**\n * @User: Edward\n * @Version: 2.0.0, 2015-12-09\n */\n\nangular.module('voyageone.angular.factories.vpagination', [])\n    .factory('vpagination', function () {\n\n        /**\n         * 创建一个分页服务\n         * @param {{ curr: number, size: number, total: number, fetch: function }} config 配置\n         */\n        return function (config) {\n\n            var _pages, _lastTotal = 0, _showPages = [];\n\n            /**\n             * 返回总件数\n             * @returns {*}\n             */\n            this.getTotal = function () {\n                return config.total;\n            };\n\n            /**\n             * 返回当前页的开始和结束号\n             * @returns {{start: number, end: number}}\n             */\n            this.getCurr = function () {\n                return {\n                    pageNo: curr(),\n                    start: getCurrStartItems(),\n                    end: getCurrEndItems(),\n                    isFirst: isFirst(),\n                    isLast: isLast(),\n                    pages: createShowPages(),\n                    isShowStart: isShowStart(),\n                    isShowEnd: isShowEnd()\n                }\n            };\n\n            // 跳转到指定页\n            this.goPage = load;\n            // 返回总页数\n            this.getPageCount = getPages;\n            // 是否是当前页\n            this.isCurr = isCurr;\n\n            /**\n             * 跳转到指定页\n             * @param {number} page 页号\n             */\n            function load(page) {\n                page = page || config.curr;\n\n                if (page < 1 || page > getPages() || isCurr(page)) return;\n\n                config.curr = page;\n\n                config.fetch(page, config.size);\n            }\n\n            /**\n             * 初始化page列表\n             * @returns {Array}\n             */\n            function createShowPages () {\n\n                var minPage, maxPage, _showPages= [];\n                if (config.curr < config.showPageNo) {\n                    minPage = 1;\n                    if(_pages <= config.showPageNo) maxPage = _pages;\n                    else maxPage = config.showPageNo;\n                } else if (config.curr + 2 > _pages) {\n                    minPage = _pages + 1 - config.showPageNo;\n                    maxPage = _pages;\n                } else {\n                    minPage = config.curr + 3 - config.showPageNo;\n                    maxPage = config.curr + 2;\n                }\n\n                // 按照指定数量创建按钮\n                for (var i =  minPage; i <= maxPage; i++) {\n                    //scope.pages.push({num: 1, active: \"\", show: false});\n                    _showPages.push(i);\n                }\n\n                return _showPages;\n            }\n\n            /**\n             * 获取当前总页数\n             * @returns {number}\n             */\n            function getPages() {\n                if (_lastTotal != config.total) {\n                    _pages = parseInt(config.total / config.size) + ((config.total % config.size) > 0 ? 1 : 0);\n                    _lastTotal = config.total;\n                }\n                return _pages;\n            }\n\n            /**\n             * 返回当前页的起始号\n             * @returns {number}\n             */\n            function getCurrStartItems() {\n                return (config.curr - 1) * config.size + 1\n            }\n\n            /**\n             * 返回当前页的结束号\n             * @returns {number}\n             */\n            function getCurrEndItems() {\n                var currEndItems = config.curr * config.size;\n                return currEndItems <= config.total ? currEndItems : config.total;\n\n            }\n\n            /**\n             * 是否是最后一页\n             * @returns {boolean}\n             */\n            function isLast() {\n                return config.curr == getPages();\n            }\n\n            /**\n             * 是否是第一页\n             * @returns {boolean}\n             */\n            function isFirst() {\n                return config.curr == 1;\n            }\n\n            /**\n             * 是否是当前页\n             * @param page 页码\n             * @returns {boolean}\n             */\n            function isCurr(page) {\n                return config.curr == page;\n            }\n\n            function curr() {\n                return config.curr;\n            }\n\n            /**\n             * 是否显示开始...项目\n             * @returns {boolean}\n             */\n            function isShowStart () {\n                _showPages = createShowPages();\n                return _showPages[0] > 1\n            }\n\n            /**\n             * 是否显示结束...项目\n             * @returns {boolean}\n             */\n            function isShowEnd () {\n                _showPages = createShowPages();\n                return _showPages[_showPages.length - 1] < _pages;\n            }\n\n        };\n    });","/**\n * @description\n *\n * 自动创建基于地址定义的数据访问 service.\n * 传入的定义必须是 {object}, 并且至少有 root 属性\n *\n * @User: Jonas\n * @Date: 2015-12-10 19:32:37\n * @Version: 2.0.0\n */\n\n//@Skip\nangular.module('voyageone.angular.vresources', [])\n  .provider('$vresources', function ($provide) {\n\n    /**\n     * @description 构建请求地址的 url\n     * @param {string} root 请求的根路径\n     * @param {string} action 请求的名称\n     * @returns {string}\n     */\n    function getActionUrl(root, action) {\n      return root + (root.lastIndexOf('/') === root.length - 1 ? '' : '/') + action;\n    }\n\n    /**\n     * 闭包声明一个数据访问的 Service\n     * @param {string} name Service 的名称\n     * @param {object} actions 方法和地址定义\n     * @param {AjaxService} ajaxService 封装的 ajax 发送服务\n     */\n    function closureDataService(name, actions, ajaxService) {\n      /**\n       * @description 与 actions 一同闭包的构造函数\n       * @constructor\n       */\n      function DataResource() {\n        if (!actions) {\n          return;\n        }\n\n        if (typeof actions !== \"object\") {\n          console.log(\"Failed to new DataResource: [\" + actions + \"] is not a object\");\n          return;\n        }\n\n        if (!actions.root) {\n          console.log(\"Failed to new DataResource: no root prop\" + (JSON && JSON.stringify ? \": \" + JSON.stringify(actions) : \"\"));\n          return;\n        }\n\n        // 遍历配置\n        for (var name in actions) {\n          // 不对 root 进行创建\n          if (name === \"root\") continue;\n          // 额外的检查\n          if (actions.hasOwnProperty(name)) {\n            // 闭包创建函数\n            this[name] = (function (actionUrl) {\n              return function (data) {\n                return ajaxService.post(actionUrl, data);\n              };\n            })(getActionUrl(actions.root, actions[name]));\n          }\n        }\n      }\n\n      $provide.service(name, DataResource);\n    }\n\n    this.$get = function (ajaxService) {\n\n      return {\n        register: function (name, actions) {\n\n          if (!actions) return;\n\n          if (typeof actions !== 'object') return;\n\n          // 如果有 root 这个属性,就创建 service\n          if (actions.root) {\n            closureDataService(name, actions, ajaxService);\n            return;\n          }\n\n          // 否则继续访问子属性\n          for (var childName in actions) {\n            // 额外的检查\n            if (actions.hasOwnProperty(childName)) {\n\n              this.register(childName, actions[childName]);\n            }\n          }\n        }\n      };\n    };\n  })\n\n  .run(function ($vresources, $actions) {\n    $vresources.register(null, $actions);\n  });","/**\n * @Date:    2015-11-16 18:48:29\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.ajax', [])\n  .service('$ajax', $Ajax)\n  .service('ajaxService', AjaxService);\n\nfunction $Ajax($http, blockUI, $q) {\n  this.$http = $http;\n  this.blockUI = blockUI;\n  this.$q = $q;\n}\n$Ajax.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n  this.$http.post(url, data).then(function (response) {\n    var res = response.data;\n    if (!res) {\n      alert('相应结果不存在?????');\n      defer.reject(null);\n      return;\n    }\n    if (res.message || res.code) {\n      defer.reject(res);\n      return;\n    }\n    defer.resolve(res);\n  }, function (response) {\n    defer.reject(null, response);\n  });\n  return defer.promise;\n};\n\nfunction AjaxService($q, $ajax, messageService) {\n  this.$q = $q;\n  this.$ajax = $ajax;\n  this.messageService = messageService;\n}\nAjaxService.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n\n  this.$ajax.post(url, data).then(function(res) {\n    // 成功\n    defer.resolve(res);\n    return res;\n  }, (function (_this) {\n    // 失败\n    return function(res) {\n      _this.messageService.show(res);\n      defer.reject(res);\n      return res;\n    };\n  })(this));\n\n  return defer.promise;\n};","/**\n * @Date:    2015-11-16 20:30:37\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.cookie', [])\n    .service('cookieService', CookieService);\n\nvar keys = {\n    language: 'voyageone.user.language',\n    company: 'voyageone.user.company',\n    channel: 'voyageone.user.channel',\n    application: \"voyageone.user.application\"\n};\n\nfunction gentProps(key) {\n    return function (val) {\n        if (arguments.length === 1) {\n            return this.set(key, val);\n        } else if (arguments.length > 1) {\n            return this.set(key, arguments);\n        }\n        return this.get(key);\n    };\n}\n\nfunction CookieService($cookieStore) {\n    this.$cookieStore = $cookieStore;\n}\n\nCookieService.prototype.get = function (key) {\n    var result = this.$cookieStore.get(key);\n    return result == undefined || result == null ? \"\" : this.$cookieStore.get(key);\n};\n\nCookieService.prototype.set = function (key, value) {\n    return this.$cookieStore.put(key, value);\n};\n\nCookieService.prototype.language = gentProps(keys.language);\n\nCookieService.prototype.company = gentProps(keys.company);\n\nCookieService.prototype.channel = gentProps(keys.channel);\n\nCookieService.prototype.application = gentProps(keys.application);\n\nCookieService.prototype.removeAll = function () {\n    this.$cookieStore.remove(keys.language);\n    this.$cookieStore.remove(keys.company);\n    this.$cookieStore.remove(keys.channel);\n    this.$cookieStore.remove(keys.application);\n};\n","/**\n * 对后台的信息进行自动处理\n * @Date:    2015-11-19 14:47:23\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.message', [])\n  .service('messageService', MessageService);\n\n// 同步,DisplayType 枚举\nvar DISPLAY_TYPES = {\n  /**\n   * 弹出提示\n   */\n  ALERT: 1,\n  /**\n   * 顶端弹出自动关闭\n   */\n  NOTIFY: 2,\n  /**\n   * 右下弹出自动关闭\n   */\n  POP: 3,\n  /**\n   * 用户自定义处理\n   */\n  CUSTOM: 4\n};\n\nfunction MessageService(alert, confirm, notify) {\n  this.alert = alert;\n  this.confirm = confirm;\n  this.notify = notify;\n}\n\nMessageService.prototype = {\n  /**\n   * 根据类型自动显示信息\n   * @param {{displayType:Number, message:String}} res\n   */\n  show: function(res) {\n\n    var displayType = res.displayType;\n    var message = res.message;\n\n    switch (displayType) {\n      case DISPLAY_TYPES.ALERT:\n        this.alert(message);\n        break;\n      case DISPLAY_TYPES.NOTIFY:\n        this.notify(message);\n        break;\n      case DISPLAY_TYPES.POP:\n        this.notify({message: message, position: 'right bottom'});\n        break;\n    }\n  }\n};","/**\n * @Date:    2015-11-19 14:26:43\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.permission', [])\n  .service('permissionService', PermissionService);\n\nfunction PermissionService($rootScope) {\n  this.$rootScope = $rootScope;\n  this.permissions = [];\n}\n\nPermissionService.prototype = {\n  /**\n   * set the action permissions.\n   * @param permissions\n   */\n  setPermissions: function(permissions) {\n    this.permissions = permissions;\n    this.$rootScope.$broadcast('permissionsChanged');\n  },\n  /**\n   * check the permission has been in action permissions.\n   * @param permission\n   * @returns {boolean|*}\n   */\n  has: function(permission) {\n    return _.contains(this.permissions, permission.trim());\n  }\n};\n","/**\n * @Date:    2015-11-19 14:35:25\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.translate', [])\n  .service('translateService', TranslateService);\n\nfunction TranslateService($translate) {\n  this.$translate = $translate;\n}\n\nTranslateService.prototype = {\n  languages: {\n    en: \"en\",\n    zh: \"zh\"\n  },\n  /**\n   * set the web side language type.\n   * @param key\n   */\n  setLanguage: function(language) {\n    if (!_.contains(this.languages, language)) {\n      language = this.getBrowserLanguage();\n    }\n    this.$translate.use(language);\n    return language;\n  },\n  /**\n   * get the browser language type.\n   * @returns {string}\n   */\n  getBrowserLanguage: function() {\n    var currentLang = navigator.language;\n    if (!currentLang)\n      currentLang = navigator.browserLanguage;\n    return currentLang.substr(0, 2);\n  }\n};\n","/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.dateModelFormat', [])\n    .directive('dateModelFormat', function ($filter) {\n        return {\n            restrict: \"A\",\n            require: 'ngModel',\n            link: function (scope, elem, attrs, ngModel) {\n                ngModel.$parsers.push(function (viewValue) {\n                    return $filter('date')(viewValue, attrs.dateModelFormat || 'yyyy-MM-dd HH:mm:ss');\n                });\n            }\n        };\n    });\n","/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.directives.enterClick', [])\n    .directive('enterClick', function () {\n        return {\n            restrict: \"A\",\n            link: function (scope, elem, attr) {\n\n                angular.element(elem).on('keyup', function (e) {\n\n                    if (e.keyCode !== 13) return;\n\n                    var selectExp = attr.enterClick;\n\n                    var targetElem, handler = function () {\n                        targetElem.triggerHandler('click');\n                    };\n\n                    try {\n                        targetElem = document.querySelector(selectExp);\n                    } catch (e) {\n                        targetElem = null;\n                    }\n\n                    if (!targetElem) {\n                        // 如果取不到元素，则尝试作为表达式执行\n                        handler = function () {\n                            scope.$eval(selectExp);\n                        };\n                    } else {\n                        targetElem = angular.element(targetElem);\n                        // 如果元素存在，但是是禁用状态的，放弃执行\n                        if (targetElem.attr(\"disabled\")) return;\n                    }\n\n                    handler();\n                });\n            }\n        };\n    });\n","/**\n * @Description:\n * 引入对上传框插件 fileStyle 的指令支持\n * @Date:    2015-11-19 17:35:22\n * @User:    Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.fileStyle', [])\n  .directive('fileStyle', function () {\n    return {\n      restrict: 'A',\n      controller: [\"$scope\", \"$element\", function ($scope, $element) {\n        var options = $element.data();\n        // old usage support\n        options.classInput = $element.data('classinput') || options.classInput;\n        if ($element.filestyle) {\n          $element.filestyle(options);\n        }\n      }]\n    };\n  });","/**\n * @Description:\n * table中无数据范围的数据\n * @User: linanbin\n * @Version: 2.0.0, 15/12/11\n */\n\nangular.module('voyageone.angular.directives.ifNoRows', [])\n    .directive('ifNoRows', function ($templateCache, $compile) {\n\n        var tempNoDataKey = \"voyageone.angular.directives.ifNoRows.tpl.html\";\n\n        // 没有数据显示警告\n        if (!$templateCache.get(tempNoDataKey)) {\n            $templateCache.put(tempNoDataKey,\n            '<div class=\"text-center text-hs\" id=\"noData\">\\n' +\n            '    <h4 class=\"text-vo\"><i class=\"icon fa fa-warning\"></i>&nbsp;{{\\'TXT_ALERT\\' | translate}}</h4>\\n' +\n            '{{\\'TXT_MSG_NO_DATE\\' | translate}}' +\n            '</dv>');\n        }\n\n        return {\n            restrict: \"A\",\n            replace: false,\n            scope: {\n                $$data: \"@ifNoRows\"\n            },\n            link: function (scope, element) {\n\n                scope.$parent.$watch(scope.$$data, function () {\n\n                    // 如果数据不存在则显示警告信息\n                    if(scope.$parent.$eval(scope.$$data)  == 0) {\n                        element.find(\"#noData\").remove();\n                        element.append($compile($templateCache.get(tempNoDataKey))(scope));\n                    } else {\n                        element.find(\"#noData\").remove();\n                    }\n                })\n            }\n        };\n    });\n","/**\n * @Description:\n * 用于菜单目录二级展开\n * @User:    Jonas\n * @Version: 0.2.0, 2015-12-07\n */\n\nangular.module('voyageone.angular.directives.uiNav', [])\n    .directive('uiNav', function () {\n\n        return {\n            restrict: 'AC',\n            link: function(scope, el) {\n                var _window = $(window),\n                    _mb = 768,\n                    wrap = $('.app-aside'),\n                    next,\n                    backdrop = '.dropdown-backdrop';\n                // unfolded\n                el.on('click', 'a', function(e) {\n                    next && next.trigger('mouseleave.nav');\n                    var _this = $(this);\n                    _this.parent().siblings( \".active\" ).toggleClass('active');\n                    _this.next().is('ul') &&  _this.parent().toggleClass('active') &&  e.preventDefault();\n                    // mobile\n                    _this.next().is('ul') || ( ( _window.width() < _mb ) && $('.app-aside').removeClass('show off-screen') );\n                });\n\n                // folded & fixed\n                el.on('mouseenter', 'a', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                    if ( !$('.app-aside-fixed.app-aside-folded').length || ( _window.width() < _mb ) || $('.app-aside-dock').length) return;\n                    var _this = $(e.target)\n                        , top\n                        , w_h = $(window).height()\n                        , offset = 50\n                        , min = 150;\n\n                    !_this.is('a') && (_this = _this.closest('a'));\n                    if( _this.next().is('ul') ){\n                        next = _this.next();\n                    }else{\n                        return;\n                    }\n\n                    _this.parent().addClass('active');\n                    top = _this.parent().position().top + offset;\n                    next.css('top', top);\n                    if( top + next.height() > w_h ){\n                        next.css('bottom', 0);\n                    }\n                    if(top + min > w_h){\n                        next.css('bottom', w_h - top - offset).css('top', 'auto');\n                    }\n                    next.appendTo(wrap);\n\n                    next.on('mouseleave.nav', function(e){\n                        $(backdrop).remove();\n                        next.appendTo(_this.parent());\n                        next.off('mouseleave.nav').css('top', 'auto').css('bottom', 'auto');\n                        _this.parent().removeClass('active');\n                    });\n\n                    $('.smart').length && $('<div class=\"dropdown-backdrop\"/>').insertAfter('.app-aside').on('click', function(next){\n                        next && next.trigger('mouseleave.nav');\n                    });\n\n                });\n\n                wrap.on('mouseleave', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                });\n            }\n        };\n    });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/24\n */\n\n(function () {\n\n    var fieldTypes = {\n        INPUT: \"INPUT\",\n        DATE: \"DATE\",\n        DATETIME: \"DATETIME\",\n        TEXTAREA: \"TEXTAREA\",\n        SINGLE_CHECK: \"SINGLECHECK\",// 在complex中的显示select,以外的默认显示singlecheck,如果用户觉得select显示不方便,就将该field的type改成radio\n        RADIO: \"RADIO\",\n        MULTI_INPUT: \"MULTIINPUT\", // 没有被使用\n        MULTI_CHECK: \"MULTICHECK\",\n        COMPLEX: \"COMPLEX\", // TODO\n        MULTI_COMPLEX: \"MULTICOMPLEX\",\n        LABEL: \"LABEL\"  // 可以不显示\n    }, ruleTypes = {\n        VALUE_TYPE_RULE: \"valueTypeRule\",\n        REQUIRED_RULE: \"requiredRule\",\n        DISABLE_RULE: \"disableRule\",\n        READ_ONLY_RULE: \"readOnlyRule\",\n        REGEX_RULE: \"regexRule\",\n        SET_RULE: \"setRule\", // TODO 暂时不知道怎么用\n        TIP_RULE: \"tipRule\", // TODO 不需要处理\n        DEV_TIP_RULE: \"devTipRule\", // 不需要处理\n        MIN_LENGTH_RULE: \"minLengthRule\",\n        MAX_LENGTH_RULE: \"maxLengthRule\",\n        MIN_VALUE_RULE: \"minValueRule\",\n        MAX_VALUE_RULE: \"maxValueRule\",\n        MIN_INPUT_NUM_RULE: \"minInputNumRule\",\n        MAX_INPUT_NUM_RULE: \"maxInputNumRule\",\n        MIN_DECIMAL_DIGITS_RULE: \"minDecimalDigitsRule\", // TODO\n        MAX_DECIMAL_DIGITS_RULE: \"maxDecimalDigitsRule\", // TODO\n        MIN_TARGET_SIZE_RULE: \"minTargetSizeRule\", // TODO\n        MAX_TARGET_SIZE_RULE: \"maxTargetSizeRule\", // TODO\n        MIN_IMAGE_SIZE_RULE: \"minImageSizeRule\", // TODO\n        MAX_IMAGE_SIZE_RULE: \"maxImageSizeRule\" // TODO\n    }, valueTypes = {\n        TEXT: \"text\",\n        DECIMAL: \"decimal\",\n        INTEGER: \"integer\",\n        LONG: \"long\",\n        DATE: \"date\",\n        TIME: \"time\",\n        URL: \"url\",\n        TEXTAREA: \"textarea\",\n        HTML: \"html\"\n    }, templates = {\n        header: '<div class=\"form-group\">' +\n        '<label class=\"col-sm-2 control-label\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" ng-bind=\"$$data.name\"></label>' +\n        '<div class=\"col-sm-8\" ng-class=\"{\\'modal-open\\' : showHtmlData.isMultiComplex, \\'hierarchy_main\\': showHtmlData.isComplex}\" ng-transclude></div>' +\n        '<div class=\"col-sm-2\" ng-if=\"showHtmlData.isMultiComplex\"><button class=\"btn btn-success\" ng-click=\"addField($$data)\"><i class=\"fa fa-plus\"></i>{{\\'BTN_ADD\\' | translate}}</button></div>' +\n        '<div class=\"row\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><div class=\"col-sm-8 col-sm-offset-2 text-warnings\"><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div></div>' +\n        '</div>',\n        label: '<input style=\"min-width: 150px; max-width: 250px;\" type=\"text\" readonly ng-model=\"vm.$$data.value\" class=\"form-control\">',\n        input: '<input style=\"min-width: 150px; max-width: 250px;\" ng-model=\"vm.$$data.value\" class=\"form-control\" %replaceInfo%>',\n        date: '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input %replaceInfo% type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDate}}\" ng-model=\"$parent.vm.$$data.value\" date-model-format=\"{{formatDate}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button %replaceInfo% type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>',\n        datetime: '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input %replaceInfo% type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDateTime}}\" ng-model=\"$parent.vm.$$data.value\" date-model-format=\"{{formatDateTime}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button %replaceInfo% type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>',\n        textarea: '<textarea style=\"min-width: 150px; max-width: 650px;\" class=\"form-control no-resize\" ng-model=\"vm.$$data.value\" rows=\"{{showHtmlData.rowNum}}\" %replaceInfo%></textarea>',\n        select: '<select style=\"min-width: 150px; max-width: 250px;\" %replaceInfo% class=\"form-control\" ng-model=\"vm.$$data.value.value\" ng-options=\"option.value as option.displayName for option in vm.$$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>',\n        radio: '<label class=\"checkbox-inline c-radio\" ng-repeat=\"option in vm.$$data.options\"><input name=\"{{vm.$$data.id}}\" type=\"radio\" ng-value=\"option.value\" ng-model=\"vm.$$data.value.value\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>',\n        checkbox: '<label class=\"checkbox-inline c-checkbox\" ng-repeat=\"option in vm.$$data.options\"><input type=\"checkbox\" ng-value=\"option.value\" ng-click=\"checkboxValue(option.value)\" ng-checked=\"isSelected(option.value)\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>',\n        multiComplex: '<table class=\"table text-center\">' +\n        '<thead><tr>' +\n        '<th ng-repeat=\"field in vm.$$data.fields\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" class=\"text-center\" style=\"min-width: 180px;\">{{field.name}}</th>' +\n        '<th ng-if=\"!showHtmlData.notShowEdit\" style=\"min-width: 60px;\" class=\"text-center\" translate=\"TXT_ACTION\"></th>' +\n        '</tr></thead>' +\n        '<tbody><tr ng-repeat=\"value in vm.$$data.complexValues\">' +\n        '<td class=\"text-left\" ng-repeat=\"field in value.fieldMap\"><div class=\"tableLayer\"><p ng-if=\"field.type != \\'COMPLEX\\'\">&nbsp;</p><p><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></p></div></td>' +\n        '<td ng-if=\"!showHtmlData.notShowEdit\" style=\"min-width: 60px;\"><button title=\"{\\'BTN_DELETE\\' | translate}\" class=\"btn btn-danger btn-xs\" ng-click=\"delField($index)\"><i class=\"fa  fa-trash-o\"></i></button></td>' +\n        '</tr></tbody>' +\n        '</table>',\n        complex: '<schema-header ng-repeat=\"field in vm.$$data.fields\" data=\"field\"><schema-item data=\"field\"></schema-item></schema-header>',\n        multi_in_complex: '<div ng-repeat=\"field in vm.$$data.fields\"><p ng-bind=\"field.name\"></p><p><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></p></div>',\n        multiComplex_tip: '<div class=\"text-warnings\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><br><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div>'\n    };\n\n    var SchemaHeader, Schema;\n\n    SchemaHeader = function (config) {\n        this.config = config || {\n                isRequired: false,\n                isMultiComplex: false,\n                isComplex: false,\n                tipMsg: []\n            };\n    };\n\n    SchemaHeader.prototype = {\n        isRequired: function (value) {\n            return value !== undefined ? this.config.isRequired = value : this.config.isRequired;\n        },\n        isComplex: function (value) {\n            return value !== undefined ? this.config.isComplex = value : this.config.isComplex;\n        },\n        isMultiComplex: function (value) {\n            return value !== undefined ? this.config.isMultiComplex = value : this.config.isMultiComplex;\n        },\n        tipMsg: function (value) {\n            return value !== undefined ? this.config.tipMsg.push(value) : this.config.tipMsg;\n        }\n    };\n\n    Schema = function (config) {\n        this.config = config || {\n                type: null,\n                name: null,\n                rowNum: null,\n                isRequired: false,\n                checkValues: [],\n                tipMsg: [],\n                html: [],\n                notShowEdit: true\n            };\n    };\n\n    Schema.prototype = {\n        type: function (value) {\n            return value !== undefined ? this.config.type = value : this.config.type;\n        },\n        name: function (value) {\n            return value !== undefined ? this.config.name = value : this.config.name;\n        },\n        html: function (value) {\n            return value !== undefined ? this.config.html.push(value) : this.config.html.join(\" \");\n        },\n        isRequired: function (value) {\n            return value !== undefined ? this.config.isRequired = value : this.config.isRequired;\n        },\n        rowNum: function (value) {\n            return value !== undefined ? this.config.rowNum = value : this.config.rowNum;\n        },\n        tipMsg: function (value) {\n            return value !== undefined ? this.config.tipMsg.push(value) : this.config.tipMsg;\n        },\n        checkValues: function (value) {\n            return value !== undefined ? this.config.checkValues.push(value) : this.config.checkValues;\n        },\n        notShowEdit: function (value) {\n            return value !== undefined ? this.config.notShowEdit = value : this.config.notShowEdit;\n        }\n    };\n\n    angular.module('voyageone.angular.directives.schema', [])\n\n        .directive('schemaHeader', function () {\n\n            return {\n                restrict: \"E\",\n                replace: true,\n                transclude: true,\n                template: templates.header,\n                scope: {\n                    $$data: \"=data\"\n                },\n                link: function (scope) {\n\n                    var header = new SchemaHeader();\n                    var field = scope.$$data;\n\n                    // 标记特殊类型的 Field\n                    switch (field.type) {\n                        case fieldTypes.MULTI_COMPLEX:\n                            header.isMultiComplex(true);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            header.isComplex(true);\n                            break;\n                    }\n\n                    // 标记提供了显示支持的规则\n                    angular.forEach(field.rules, function (rule) {\n                        switch (rule.name) {\n                            case ruleTypes.REQUIRED_RULE:\n                                header.isRequired(\"true\" == rule.value);\n                                break;\n                            case ruleTypes.TIP_RULE:\n                                header.tipMsg(rule.value);\n                                break;\n                        }\n                    });\n\n                    scope.showHtmlData = angular.copy(header.config);\n\n                    /**\n                     * 设置multi complex添加一条新记录\n                     * @param data\n                     */\n                    scope.addField = function (data) {\n                        var newFieldMap = {};\n                        angular.forEach(data.fields, function (field) {\n                            newFieldMap[field.id] = field;\n                        });\n\n                        data.complexValues.push({fieldMap: angular.copy(newFieldMap)});\n                    };\n\n                }\n            };\n        })\n\n        .directive('schemaItem', function ($compile) {\n\n            return {\n                restrict: \"E\",\n                require: ['^?form'],\n                bindToController: true,\n                controllerAs: \"vm\",\n                scope: {\n                    $$data: \"=data\",\n                    $$hastip: \"=hastip\",\n                    $$complex: \"=complex\",\n                    $$notShowEdit: \"=notShowEdit\"\n                },\n                controller: function () {\n                },\n                link: function (scope, element) {\n\n                    // 监视配置变动\n                    scope.$watch('vm.$$data', refresh);\n\n                    scope.$watch('schemaForm.$valid', function ($valid) {\n                        scope.vm.$$data.$valid = $valid;\n                    });\n\n                    function refresh() {\n\n                        var schema = new Schema();\n                        var field = scope.vm.$$data;\n\n                        // 设置空间name\n                        schema.name(field.id);\n\n                        // 设置edit是否显示\n                        schema.notShowEdit(scope.vm.$$notShowEdit == undefined ? false : scope.vm.$$notShowEdit);\n\n                        schema.type(field.type);\n\n                        switch (field.type) {\n                            case fieldTypes.RADIO:\n                                if (scope.vm.$$complex)\n                                    schema.type(fieldTypes.SINGLE_CHECK);\n                                break;\n                            case fieldTypes.MULTI_CHECK:\n                                _setCheckValues(field.values);\n                                break;\n                            case fieldTypes.MULTI_COMPLEX:\n                                field.complexValues = _resetMultiComplex(field);\n                                break;\n                            case fieldTypes.COMPLEX:\n                                _resetComplex(field);\n                                break;\n                        }\n\n                        angular.forEach(field.rules, function (rule) {\n                            switch (rule.name) {\n                                case ruleTypes.VALUE_TYPE_RULE:\n                                    _valueTypeRule(rule);\n                                    break;\n                                case ruleTypes.REQUIRED_RULE:\n                                    _requiredRule(rule);\n                                    break;\n                                case ruleTypes.DISABLE_RULE:\n                                    _disableRule(rule);\n                                    break;\n                                case ruleTypes.READ_ONLY_RULE:\n                                    _readOnlyRule(rule);\n                                    break;\n                                case ruleTypes.REGEX_RULE:\n                                    _regexRule(rule);\n                                    break;\n                                case ruleTypes.TIP_RULE:\n                                    _tipRule(rule);\n                                    break;\n                                case ruleTypes.MIN_LENGTH_RULE:\n                                    _minLengthRule(rule);\n                                    break;\n                                case ruleTypes.MAX_LENGTH_RULE:\n                                    _maxLengthRule(rule);\n                                    break;\n                                case ruleTypes.MIN_VALUE_RULE:\n                                    _minValueRule(rule);\n                                    break;\n                                case ruleTypes.MAX_VALUE_RULE:\n                                    _maxValueRule(rule);\n                                    break;\n                                case ruleTypes.MIN_INPUT_NUM_RULE:\n                                    _minInputNumRule(rule);\n                                    break;\n                                case ruleTypes.MAX_INPUT_NUM_RULE:\n                                    _maxInputNumRule(rule);\n                                    break;\n                            }\n                        });\n\n                        var tempHtml = \"\";\n\n                        // 拼接body\n                        switch (schema.type()) {\n                            case fieldTypes.INPUT:\n                                tempHtml = templates.input.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.DATE:\n                                tempHtml = templates.date.replace(\"%replaceInfo%\", schema.html()).replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.DATETIME:\n                                tempHtml = templates.datetime.replace(\"%replaceInfo%\", schema.html()).replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.TEXTAREA:\n                                tempHtml = templates.textarea.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.SINGLE_CHECK:\n                                tempHtml = templates.select.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.RADIO:\n                                tempHtml = templates.radio.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.MULTI_CHECK:\n                                tempHtml = templates.checkbox.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.LABEL:\n                                tempHtml = templates.label;\n                                break;\n                            case fieldTypes.MULTI_COMPLEX:\n                                tempHtml = templates.multiComplex;\n                                break;\n                            case fieldTypes.COMPLEX:\n                                tempHtml = scope.vm.$$complex ? templates.multi_in_complex : templates.complex;\n                                break;\n                        }\n\n                        // 添加规则说明\n                        if (schema.tipMsg() != null && scope.vm.$$hastip) {\n                            tempHtml += templates.multiComplex_tip;\n                        }\n\n                        // 包裹 ng-form, 用于启用 angular 的验证功能\n                        tempHtml = '<ng-form name=\"schemaForm\">' + tempHtml + '</ng-form>';\n                        // 追加错误信息的显示\n                        tempHtml += '<div ng-repeat=\"(k, v) in schemaForm.$error\">{{k}}</div>';\n\n                        scope.showHtmlData = angular.copy(schema.config);\n                        element.html($compile(tempHtml)(scope));\n\n                        /**\n                         * 设置checkbox被选中的value值处理\n                         * @param value\n                         */\n                        scope.checkboxValue = function (value) {\n                            if (_.contains(scope.showHtmlData.checkValues, value)) {\n                                scope.showHtmlData.checkValues.splice(_.indexOf(scope.showHtmlData.checkValues, value), 1);\n                            } else {\n                                scope.showHtmlData.checkValues.push(value);\n                            }\n                            field.values = [];\n                            angular.forEach(scope.showHtmlData.checkValues, function (obj) {\n                                field.values.push({id: null, value: obj});\n                            })\n                        };\n\n                        /**\n                         * 判断是否被选中\n                         * @param value\n                         */\n                        scope.isSelected = function (value) {\n                            return _.contains(scope.showHtmlData.checkValues, value)\n                        };\n\n                        /**\n                         * 设置multi complex删除该条记录\n                         * @param index\n                         */\n                        scope.delField = function (index) {\n                            field.complexValues.splice(index, 1);\n                        };\n\n                        /**\n                         * 设置checkvalues\n                         * @param values\n                         * @private\n                         */\n                        function _setCheckValues(values) {\n                            if (values != undefined && values != null) {\n                                angular.forEach(values, function (obj) {\n                                    schema.checkValues(obj.value);\n                                })\n                            }\n                        }\n\n                        /**\n                         * 重新设置multicomplex的一些属性\n                         * @param data\n                         * @private\n                         */\n                        function _resetMultiComplex(data) {\n                            var tempValues = [];\n                            angular.forEach(data.complexValues, function (value) {\n                                var tempFieldMap = {};\n                                angular.forEach(data.fields, function (field) {\n                                    var tempField = angular.copy(field);\n                                    if (value.fieldMap[field.id] != undefined) {\n                                        switch (field.type) {\n                                            case fieldTypes.INPUT:\n                                            case fieldTypes.LABEL:\n                                            case fieldTypes.DATE:\n                                            case fieldTypes.DATETIME:\n                                            case fieldTypes.TEXTAREA:\n                                            case fieldTypes.SINGLE_CHECK:\n                                            case fieldTypes.RADIO:\n                                                tempField.value = value.fieldMap[field.id].value;\n                                                break;\n                                            case fieldTypes.MULTI_INPUT:\n                                            case fieldTypes.MULTI_CHECK:\n                                                tempField.values = value.fieldMap[field.id].values;\n                                                break;\n                                            case fieldTypes.COMPLEX:\n                                                tempField.complexValue = value.fieldMap[field.id].complexValue;\n                                                break;\n                                            case fieldTypes.MULTI_COMPLEX:\n                                                tempField.complexValues = value.fieldMap[field.id].complexValues;\n                                                break;\n                                        }\n                                    }\n                                    tempFieldMap[field.id] = tempField;\n                                });\n                                tempValues.push({fieldMap: angular.copy(tempFieldMap)});\n                            });\n\n                            // 如果values为空,默认添加空白行\n                            if (_.isEmpty(data.complexValues)) {\n                                var newFieldMap = {};\n                                angular.forEach(data.fields, function (field) {\n                                    newFieldMap[field.id] = field;\n                                    //eval(\"newFieldMap.\" + field.id + \"=field\");\n                                });\n\n                                tempValues.push({fieldMap: angular.copy(newFieldMap)});\n                            }\n\n                            return tempValues;\n                        }\n\n                        /**\n                         * 重新\n                         * @param data\n                         * @private\n                         */\n                        function _resetComplex(data) {\n                            angular.forEach(data.fields, function (field) {\n                                switch (field.type) {\n                                    case fieldTypes.INPUT:\n                                    case fieldTypes.LABEL:\n                                    case fieldTypes.DATE:\n                                    case fieldTypes.DATETIME:\n                                    case fieldTypes.TEXTAREA:\n                                    case fieldTypes.SINGLE_CHECK:\n                                    case fieldTypes.RADIO:\n                                        if (!_.isEmpty(data.complexValue.fieldMap))\n                                            field.value = data.complexValue.fieldMap[field.id].value;\n                                        else\n                                            field.value = data.defaultComplexValue.fieldMap[field.id].value;\n                                        break;\n                                    case fieldTypes.MULTI_INPUT:\n                                    case fieldTypes.MULTI_CHECK:\n                                        if (!_.isEmpty(data.complexValue.fieldMap))\n                                            field.values = data.complexValue.fieldMap[field.id].values;\n                                        else\n                                            field.values = data.defaultComplexValue.fieldMap[field.id].values;\n                                        break;\n                                    case fieldTypes.COMPLEX:\n                                        if (!_.isEmpty(data.complexValue.fieldMap))\n                                            field.complexValue = data.complexValue.fieldMap[field.id].complexValue;\n                                        else\n                                            field.complexValue = data.defaultComplexValue.fieldMap[field.id].complexValue;\n                                        break;\n                                    case fieldTypes.MULTI_COMPLEX:\n                                        if (!_.isEmpty(data.complexValue.fieldMap))\n                                            field.complexValues = data.complexValue.fieldMap[field.id].complexValues;\n                                        else\n                                            field.complexValues = data.defaultComplexValue.fieldMap[field.id].complexValues;\n                                        break;\n                                }\n                            });\n                        }\n\n                        /**\n                         * 处理valueTypeRule\n                         * @param valueTypeRule\n                         * @private\n                         */\n                        function _valueTypeRule(valueTypeRule) {\n                            switch (valueTypeRule.value) {\n                                case valueTypes.TEXT:\n                                case valueTypes.DECIMAL:\n                                case valueTypes.INTEGER:\n                                case valueTypes.LONG:\n                                    schema.type(fieldTypes.INPUT);\n                                    schema.html(\"type=\\\"text\\\"\");\n                                    break;\n                                case valueTypes.DATE:\n                                    schema.type(fieldTypes.DATE);\n                                    break;\n                                case valueTypes.TIME:\n                                    schema.type(fieldTypes.DATETIME);\n                                    break;\n                                case valueTypes.URL:\n                                    schema.type(fieldTypes.INPUT);\n                                    schema.html(\"type=\\\"url\\\"\");\n                                    break;\n                                case valueTypes.TEXTAREA:\n                                    schema.type(fieldTypes.TEXTAREA);\n                                    schema.rowNum(4);\n                                    break;\n                                case valueTypes.HTML:\n                                    schema.type(fieldTypes.TEXTAREA);\n                                    schema.rowNum(10);\n                                    break;\n                            }\n                        }\n\n                        /**\n                         * 处理requiredRule\n                         * @param requiredRule\n                         * @private\n                         */\n                        function _requiredRule(requiredRule) {\n                            if (\"true\" == requiredRule.value) {\n                                schema.isRequired(true);\n                                schema.html(\"required\");\n                            }\n                        }\n\n                        /**\n                         * 处理disableRule\n                         * @param disableRule\n                         * @private\n                         */\n                        function _disableRule(disableRule) {\n                            if (\"true\" == disableRule.value\n                                && disableRule.dependGroup == null) {\n                                schema.html(\"ng-disabled=\\\"true\\\"\");\n                            }\n                        }\n\n                        /**\n                         * 处理readOnlyRule\n                         * @param readOnlyRule\n                         * @private\n                         */\n                        function _readOnlyRule(readOnlyRule) {\n                            if (\"true\" == readOnlyRule.value) {\n                                schema.html(\"readonly\");\n                            }\n                        }\n\n                        /**\n                         * 处理regexRule\n                         * @param regexRule\n                         * @private\n                         */\n                        function _regexRule(regexRule) {\n                            schema.html(\"ng-pattern=\\\"/\" + regexRule.value + \"/\\\"\");\n                        }\n\n                        /**\n                         * 处理tipRule\n                         * @param tipRule\n                         * @private\n                         */\n                        function _tipRule(tipRule) {\n                            schema.tipMsg(tipRule.value);\n                        }\n\n                        /**\n                         * 处理minLengthRule\n                         * @param minLengthRule\n                         * @private\n                         */\n                        function _minLengthRule(minLengthRule) {\n                            var value = isNaN(parseInt(minLengthRule.value)) ? 0 : minLengthRule.value;\n\n                            if (\"not include\" === minLengthRule.exProperty)\n                                value = (value > 0) ? value - 1 : 0;\n\n                            if (\"character\" == minLengthRule.unit)\n                                schema.html(\"ng-minlength=\\\"\" + value + \"\\\"\");\n                            else\n                                schema.html(\"ng-char-minlength=\\\"\" + value + \"\\\"\");\n                        }\n\n                        /**\n                         * 处理maxLengthRule\n                         * @param maxLengthRule\n                         * @private\n                         */\n                        function _maxLengthRule(maxLengthRule) {\n                            var value = isNaN(parseInt(maxLengthRule.value)) ? 0 : maxLengthRule.value;\n\n                            if (\"not include\" === maxLengthRule.exProperty)\n                                value = (value > 0) ? value - 1 : 0;\n\n                            if (\"character\" == maxLengthRule.unit)\n                                schema.html(\"ng-maxlength=\\\"\" + value + \"\\\"\");\n                            else\n                                schema.html(\"ng-char-maxlength=\\\"\" + value + \"\\\"\");\n                        }\n\n                        /**\n                         * 处理minValueRule\n                         * @param minValueRule\n                         * @private\n                         */\n                        function _minValueRule(minValueRule) {\n                            var value = isNaN(parseFloat(minValueRule.value)) ? 0 : parseFloat(minValueRule.value);\n\n                            if (\"not include\" === minValueRule.exProperty)\n                                value = (value > 0) ? value - 0.01 : 0;\n\n                            schema.html(\"ng-minvalue=\\\"\" + value + \"\\\"\");\n                        }\n\n                        /**\n                         * 处理maxValueRule\n                         * @param maxValueRule\n                         * @private\n                         */\n                        function _maxValueRule(maxValueRule) {\n                            var value = isNaN(parseFloat(maxValueRule.value)) ? 0 : parseFloat(maxValueRule.value);\n\n                            if (\"not include\" === maxValueRule.exProperty)\n                                value = (value > 0) ? value - 0.01 : 0;\n\n                            schema.html(\"ng-maxvalue=\\\"\" + value + \"\\\"\");\n\n                        }\n\n                        /**\n                         * 处理minInputNumRule\n                         * @param minInputNumRule\n                         * @private\n                         */\n                        function _minInputNumRule(minInputNumRule) {\n                            var value = isNaN(parseInt(minInputNumRule.value)) ? 0 : parseInt(minInputNumRule.value);\n\n                            if (\"not include\" === minInputNumRule.exProperty)\n                                value = (value > 0) ? value - 1 : 0;\n\n                            schema.html(\"ng-mininputnum=\\\"\" + value + \"\\\"\");\n                        }\n\n                        /**\n                         * 处理maxInputNumRule\n                         * @param maxInputNumRule\n                         * @private\n                         */\n                        function _maxInputNumRule(maxInputNumRule) {\n                            var value = isNaN(parseInt(maxInputNumRule.value)) ? 0 : parseInt(maxInputNumRule.value);\n\n                            if (\"not include\" === maxInputNumRule.exProperty)\n                                value = (value > 0) ? value - 1 : 0;\n\n                            schema.html(\"ng-maxinputnum=\\\"\" + value + \"\\\"\");\n                        }\n                    }\n                }\n            };\n        });\n\n})();","/**\n * @Description:\n * 用于动态显示options\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-22\n */\n\nangular.module('voyageone.angular.directives.voption', [])\n    .directive('voption', function ($templateCache, $compile) {\n\n        var templateKey_select = \"voyageone.angular.directives.optionSelect.tpl.html\";\n\n        // 显示成select样式\n        if (!$templateCache.get(templateKey_select)) {\n            $templateCache.put(templateKey_select,\n                '<select class=\"form-control\" ng-model=\"$$data.value.value\" ng-options=\"option.value as option.displayName for option in $$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');\n        }\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope, element) {\n\n                // 定义不同的展示种类\n                var typeList = {\n                    SINGLE_CHECK: \"SINGLECHECK\"\n                };\n\n                // 监视配置变动\n                scope.$watch('$$data', function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 根据type选择展示不同的控件\n                 */\n                function refresh() {\n                    var tempHtml;\n                    switch (scope.$$data.type) {\n                        case typeList.SINGLE_CHECK:\n                            tempHtml = $compile($templateCache.get(templateKey_select))(scope);\n                            break;\n                    }\n                    element.html(tempHtml);\n                }\n            }\n        };\n    });","/**\n * @Description:\n * 用于分页\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-08\n */\n\nangular.module('voyageone.angular.directives.vpagination', [])\n    .directive('vpagination', function ($templateCache, $compile, vpagination) {\n\n        var templateKey = \"voyageone.angular.directives.pagination.tpl.html\";\n        var templateKeyNoData = \"voyageone.angular.directives.paginationNoData.tpl.html\";\n\n        // 有数据分页样式\n        if (!$templateCache.get(templateKey)) {\n            $templateCache.put(templateKey,\n                '<div class=\"col-sm-3\">\\n' +\n                '    <div class=\"page-main form-inline\">{{\\'TXT_SHOWING_NO\\' | translate}}&nbsp;<input class=\"text-center\" type=\"text\" ng-model=\"curr.pageNo\"/>&nbsp;/&nbsp;{{totalPages}}&nbsp;{{\\'TXT_PAGE\\' | translate}}&nbsp;' +\n                '        <button class=\"btn btn-xs btn-default\" type=\"button\" ng-click=\"goPage(curr.pageNo)\" translate=\"BTN_GO\"></button>\\n' +\n                '    </div>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-4 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_SHOWING\\' | translate}}&nbsp;{{curr.start}}-{{curr.end}}&nbsp;{{\\'TXT_OF\\' | translate}}&nbsp;{{totalItems}}&nbsp{{\\'TXT_ITEMS\\' | translate}}</small>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-5 text-right text-center-xs\"><div>' +\n                '    <ul class=\"pagination-sm m-t-none m-b pagination ng-isolate-scope ng-valid ng-dirty ng-valid-parse\">\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-first\"><a href ng-click=\"goPage(1)\" ng-disabled=\"curr.isFirst\">&laquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-prev\"><a href ng-click=\"goPage(curr.pageNo - 1)\" ng-disabled=\"curr.isFirst\">&lsaquo;</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowStart\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-repeat=\"page in curr.pages track by $index\" ng-class=\"{active: isCurr(page)}\" class=\"pagination-page\"><a href ng-click=\"goPage(page)\">{{page}}</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowEnd\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-next\"><a href ng-click=\"goPage(curr.pageNo + 1)\" ng-disabled=\"curr.isLast\">&rsaquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-last\"><a href ng-click=\"goPage(totalPages)\" ng-disabled=\"curr.isLast\">&raquo;</a></li>\\n' +\n                '    </ul>\\n' +\n                '</div>');\n        }\n\n        // 无数据分页样式\n        if (!$templateCache.get(templateKeyNoData)) {\n            $templateCache.put(templateKeyNoData,\n                '<div class=\"col-sm-7 col-sm-offset-2 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_SHOWING\\' | translate}}&nbsp;0-0&nbsp;{{\\'TXT_OF\\' | translate}}&nbsp;0&nbsp{{\\'TXT_ITEMS\\' | translate}}</small>\\n' +\n                '</div>');\n        }\n\n        var defConfig = {curr: 1, total: 0, size: 20, showPageNo:5};\n\n        return {\n            restrict: \"AE\",\n            //templateUrl: templateKey,\n            replace: false,\n            scope: {\n                $$configNameForA: \"@vpagination\",\n                $$configNameForE: \"@config\"\n            },\n            link: function (scope, element) {\n\n                // 获取用户的config配置\n                var userConfigName = scope.$$configNameForA || scope.$$configNameForE;\n                var userConfig = scope.$parent.$eval(userConfigName);\n\n                // 将用户配置覆盖到默认配置后，在重新覆盖到用户配置上，用于补全配置属性\n                var userWithDefConfig = angular.extend({}, defConfig, userConfig);\n                scope.config = angular.extend(userConfig, userWithDefConfig);\n\n                var p = new vpagination(scope.config);\n\n                // 监视配置变动\n                scope.$parent.$watch(userConfigName, function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 跳转到指定页\n                 * @param num\n                 */\n                scope.goPage = function (num) {\n                    p.goPage(isNaN(Number(num)) ? 1 : Number(num));\n                };\n\n                /**\n                 * 判断是否是当前页\n                 * @param num\n                 * @returns {*|boolean}\n                 */\n                scope.isCurr = function (num) {\n                    return p.isCurr(num);\n                };\n\n                function refresh() {\n\n                    // 获取总页数\n                    scope.totalPages = p.getPageCount();\n                    // 获取总items数\n                    scope.totalItems = p.getTotal();\n                    // 获取当前页的信息\n                    scope.curr = p.getCurr();\n\n                    // 根据总数量显示不同的分页样式\n                    var tempHtml;\n                    if(p.getTotal() == 0) {\n                        tempHtml = $compile($templateCache.get(templateKeyNoData))(scope);\n                    } else {\n                        tempHtml = $compile($templateCache.get(templateKey))(scope);\n                    }\n                    element.html(tempHtml);\n\n                }\n            }\n        };\n    });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\nangular.module('voyageone.angular.directives.validator', [])\n\n    // 定义ng-char-maxlength\n    .directive('ngCharMaxlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxlength = -1;\n                attr.$observe('ngCharMaxlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    maxlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxlength = function(modelValue, viewValue) {\n                    return (maxlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) <= maxlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-char-minlength\n    .directive('ngCharMinlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minlength = -1;\n                attr.$observe('ngCharMinlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    minlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minlength = function(modelValue, viewValue) {\n                    return (minlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) >= minlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-maxvalue\n    .directive('ngMaxvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        maxvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        maxvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        maxvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxvalue = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-minvalue\n    .directive('ngMinvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMinvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        minvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        minvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        minvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minvalue = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue >= minvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-maxinputnum\n    .directive('ngMaxinputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxinputvalue', function(value) {\n                    maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxinputnum = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-mininputnum\n    .directive('ngMininputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMininputnum', function(value) {\n                    minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.mininputnum = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length >= minvalue);\n                };\n            }\n        }\n    })\n;"],"sourceRoot":"components/angular"}