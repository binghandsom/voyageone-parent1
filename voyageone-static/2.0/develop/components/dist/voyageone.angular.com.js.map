{"version":3,"sources":["voyageone.angular.com.js","controllers/datePicker.ctrl.js","controllers/selectRows.ctrl.js","controllers/showPopover.ctrl.js","directives/dateModelFormat.directive.js","directives/enterClick.directive.js","directives/filestyle.directive.js","directives/ifNoRows.directive.js","directives/navigation.directive.js","directives/schema.directive.js","directives/voption.directive.js","directives/vpagination.directive.js","directives/vvalidator.directive.js","factories/dialogs.factory.js","factories/interceptor.factory.js","factories/notify.factory.js","factories/pppAutoImpl.factory.js","factories/selectRows.factory.js","factories/vpagination.factory.js","services/ajax.service.js","services/cookie.service.js","services/message.service.js","services/permission.service.js","services/translate.service.js","providers/vresources.js"],"names":["define","angular","module","controller","$scope","vm","this","formats","formatDate","formatDateTime","open","$event","preventDefault","stopPropagation","opened","selectAll","selectOne","isAllSelected","objectList","id","selAllFlag","forEach","currPageRows","object","selFlag","hasOwnProperty","tempList","_","pluck","selList","indexOf","push","splice","currentId","isEqual","undefined","showInfo","values","tempHtml","data","index","length","directive","$filter","restrict","require","link","scope","elem","attrs","ngModel","$parsers","viewValue","dateModelFormat","attr","element","on","e","keyCode","selectExp","enterClick","targetElem","handler","triggerHandler","document","querySelector","$eval","$element","options","classInput","filestyle","$templateCache","$compile","tempNoDataKey","get","put","replace","$$data","$parent","$watch","find","remove","append","el","_window","$","window","_mb","wrap","next","backdrop","trigger","_this","parent","siblings","toggleClass","is","width","removeClass","target","top","w_h","height","offset","min","closest","addClass","position","css","appendTo","off","insertAfter","fieldTypes","INPUT","DATE","DATETIME","TEXTAREA","SINGLE_CHECK","RADIO","MULTI_INPUT","MULTI_CHECK","COMPLEX","MULTI_COMPLEX","LABEL","ruleTypes","VALUE_TYPE_RULE","REQUIRED_RULE","DISABLE_RULE","READ_ONLY_RULE","REGEX_RULE","SET_RULE","TIP_RULE","DEV_TIP_RULE","MIN_LENGTH_RULE","MAX_LENGTH_RULE","MIN_VALUE_RULE","MAX_VALUE_RULE","MIN_INPUT_NUM_RULE","MAX_INPUT_NUM_RULE","MIN_DECIMAL_DIGITS_RULE","MAX_DECIMAL_DIGITS_RULE","MIN_TARGET_SIZE_RULE","MAX_TARGET_SIZE_RULE","MIN_IMAGE_SIZE_RULE","MAX_IMAGE_SIZE_RULE","valueTypes","TEXT","DECIMAL","INTEGER","LONG","TIME","URL","HTML","templates","header","label","input","date","datetime","textarea","select","radio","checkbox","multiComplex","complex","multi_in_complex","multiComplex_tip","SchemaHeader","Schema","config","isRequired","isMultiComplex","isComplex","tipMsg","prototype","value","type","name","rowNum","checkValues","html","notShowEdit","join","transclude","template","field","rules","rule","showHtmlData","copy","addField","newFieldMap","fields","complexValues","fieldMap","bindToController","controllerAs","$$hastip","$$complex","$$notShowEdit","refresh","$valid","schema","_setCheckValues","_resetMultiComplex","_resetComplex","_valueTypeRule","_requiredRule","_disableRule","_readOnlyRule","_regexRule","_tipRule","_minLengthRule","_maxLengthRule","_minValueRule","_maxValueRule","_minInputNumRule","_maxInputNumRule","checkboxValue","contains","obj","isSelected","delField","tempValues","tempFieldMap","tempField","complexValue","isEmpty","defaultComplexValue","valueTypeRule","requiredRule","disableRule","dependGroup","readOnlyRule","regexRule","tipRule","minLengthRule","isNaN","parseInt","exProperty","unit","maxLengthRule","minValueRule","parseFloat","maxValueRule","minInputNumRule","maxInputNumRule","templateKey_select","typeList","vpagination","templateKey","templateKeyNoData","defConfig","curr","total","size","showPageNo","$$configNameForA","$$configNameForE","userConfigName","userConfig","userWithDefConfig","extend","p","goPage","num","Number","isCurr","totalPages","getPageCount","totalItems","getTotal","getCurr","elm","ctrl","maxlength","$observe","intVal","$validate","$validators","modelValue","$isEmpty","getByteLength","byteLen","len","i","charCodeAt","minlength","maxvalue","test","Date","minvalue","maxinputnum","mininputnum","factory","$modal","templateName","tran","translationId","isObject","content","title","modalInstance","templateUrl","close","dismiss","ok","$dialogs","isAlert","vConfirm","UNKNOWN_CODE","CODE_SYS_REDIRECT","MSG_TIMEOUT","autoRedirect","res","code","location","href","redirectTo","sessionTimeout","unknownException","response","$$lastUnknow","console","error","message","request","result","requestError","responseError","$httpProvider","interceptors","notify","isString","success","className","warning","danger","$q","declares","viewBaseUrl","jsBaseUrl","$$$","impl","declarePopupMethods","popupBaseKey","each","declare","parentDir","popupKey","isArray","clone","pathBase","controllerUrl","getControllerName","context","resolve","defer","promise","key","m","m1","toUpperCase","toLowerCase","_selectRowsInfo","clearCurrPageRows","selectRowsInfo","_pages","_lastTotal","_showPages","pageNo","start","getCurrStartItems","end","getCurrEndItems","isFirst","isLast","pages","createShowPages","isShowStart","isShowEnd","load","getPages","page","fetch","minPage","maxPage","currEndItems","$Ajax","$inject","AjaxService","service","$http","blockUI","post","url","then","alert","reject","$ajax","messageService","show","CookieService","keys","language","company","channel","application","gentProps","val","arguments","set","$cookieStore","removeAll","MessageService","DISPLAY_TYPES","ALERT","NOTIFY","POP","CUSTOM","confirm","displayType","PermissionService","$rootScope","permissions","setPermissions","$broadcast","has","permission","trim","TranslateService","$translate","languages","en","zh","setLanguage","getBrowserLanguage","use","currentLang","navigator","browserLanguage","substr","provider","$provide","getActionUrl","root","action","lastIndexOf","closureDataService","actions","ajaxService","DataResource","log","JSON","stringify","actionUrl","$get","register","childName","run","$vresources","$actions"],"mappings":"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","file":"voyageone.angular.com.js","sourcesContent":["define(function(){\n/**\n * @Description:\n * 弹出日期控件\n * @User:    Edward\n * @Version: 0.2.0, 2015-10-10\n */\n\nangular.module('voyageone.angular.controllers.datePicker', [])\n    .controller('datePickerCtrl', [\"$scope\", function ($scope) {\n        var vm = this;\n\n        vm.formats = ['yyyy-MM-dd', 'yyyy-MM-dd HH:mm:ss'];\n\n        $scope.formatDate = vm.formats[0];\n        $scope.formatDateTime = vm.formats[1];\n\n        $scope.open = open;\n\n        function open($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n\n            $scope.opened = true;\n        }\n    }]);\n/**\n * @Description:\n * select tables items\n * @User: linanbin\n * @Version: 2.0.0, 15/12/16\n */\n\nangular.module('voyageone.angular.controllers.selectRows', [])\n    .controller('selectRowsCtrl', [\"$scope\", function ($scope) {\n\n        $scope.selectAll = selectAll;\n        $scope.selectOne = selectOne;\n        $scope.isAllSelected = isAllSelected;\n\n        /**\n         * 全部选中当前页数据\n         * @param objectList\n         */\n        function selectAll(objectList, id) {\n\n            objectList.selAllFlag = !objectList.selAllFlag;\n            if(!id){\n                id=\"id\";\n            }\n\n            // 循环处理全选中的数据\n            angular.forEach(objectList.currPageRows, function (object) {\n\n                // 单签页面所有产品选中flag被标示\n                objectList.selFlag[object[id]] = objectList.selAllFlag;\n\n                if (objectList.hasOwnProperty('selList')) {\n\n                    var tempList = _.pluck(objectList.selList, id);\n                    if (objectList.selAllFlag && tempList.indexOf(object[id]) < 0) {\n                        objectList.selList.push(object);\n                    } else if (!objectList.selAllFlag && tempList.indexOf(object[id]) > -1) {\n                        objectList.selList.splice(tempList.indexOf(object[id]), 1);\n                    }\n                }\n            });\n        }\n\n        /**\n         * 选中单条数据\n         * @param currentId\n         * @param objectList\n         */\n        function selectOne(currentId, objectList, id) {\n            if(!id){\n                id=\"id\";\n            }\n            if (objectList.hasOwnProperty('selList')) {\n\n                angular.forEach(objectList.currPageRows, function(object) {\n\n                    var tempList = _.pluck(objectList.selList, id);\n                    if (_.isEqual(object[id], currentId)) {\n                        if (tempList.indexOf(object[id]) > -1) {\n                            objectList.selList.splice(tempList.indexOf(object[id]), 1);\n                        } else {\n                            objectList.selList.push(object);\n                        }\n                    }\n                });\n            }\n\n            objectList.selAllFlag = true;\n            tempList = _.pluck(objectList.selList, id);\n            angular.forEach(objectList.currPageRows, function(object) {\n                if (tempList.indexOf(object[id]) == -1) {\n                    objectList.selAllFlag = false;\n                }\n            })\n        }\n\n        /**\n         * 判断当前页是否为全选中\n         * @param objectList\n         * @param id\n         */\n        function isAllSelected (objectList, id) {\n            if(!id){\n                id=\"id\";\n            }\n\n            if (objectList != undefined) {\n\n                objectList.selAllFlag = true;\n                var tempList = _.pluck(objectList.selList, id);\n                angular.forEach(objectList.currPageRows, function(object) {\n                    if (tempList.indexOf(object[id]) == -1) {\n                        objectList.selAllFlag = false;\n                    }\n                });\n                return objectList.selAllFlag;\n            }\n\n            return false;\n        }\n    }]);\n/**\n * @Description:\n * 显示html的popover的共同方法\n * @User: linanbin\n * @Version: 2.0.0, 15/12/14\n */\n\nangular.module('voyageone.angular.controllers.showPopover', [])\n    .controller('showPopoverCtrl', [\"$scope\", function ($scope) {\n\n        $scope.showInfo = showInfo;\n\n        function showInfo(values) {\n            var tempHtml = \"\";\n\n            angular.forEach(values, function (data, index) {\n                tempHtml += data;\n                if (index !== values.length) {\n                    tempHtml += \"<br>\";\n                }\n            });\n            return tempHtml\n        }\n    }]);\n\n/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.dateModelFormat', [])\n    .directive('dateModelFormat', [\"$filter\", function ($filter) {\n        return {\n            restrict: \"A\",\n            require: 'ngModel',\n            link: function (scope, elem, attrs, ngModel) {\n                ngModel.$parsers.push(function (viewValue) {\n                    return $filter('date')(viewValue, attrs.dateModelFormat || 'yyyy-MM-dd HH:mm:ss');\n                });\n            }\n        };\n    }]);\n\n/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.directives.enterClick', [])\n    .directive('enterClick', function () {\n        return {\n            restrict: \"A\",\n            link: function (scope, elem, attr) {\n\n                angular.element(elem).on('keyup', function (e) {\n\n                    if (e.keyCode !== 13) return;\n\n                    var selectExp = attr.enterClick;\n\n                    var targetElem, handler = function () {\n                        targetElem.triggerHandler('click');\n                    };\n\n                    try {\n                        targetElem = document.querySelector(selectExp);\n                    } catch (e) {\n                        targetElem = null;\n                    }\n\n                    if (!targetElem) {\n                        // 如果取不到元素，则尝试作为表达式执行\n                        handler = function () {\n                            scope.$eval(selectExp);\n                        };\n                    } else {\n                        targetElem = angular.element(targetElem);\n                        // 如果元素存在，但是是禁用状态的，放弃执行\n                        if (targetElem.attr(\"disabled\")) return;\n                    }\n\n                    handler();\n                });\n            }\n        };\n    });\n\n/**\n * @Description:\n * 引入对上传框插件 fileStyle 的指令支持\n * @Date:    2015-11-19 17:35:22\n * @User:    Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.fileStyle', [])\n  .directive('fileStyle', function () {\n    return {\n      restrict: 'A',\n      controller: [\"$scope\", \"$element\", function ($scope, $element) {\n        var options = $element.data();\n        // old usage support\n        options.classInput = $element.data('classinput') || options.classInput;\n        if ($element.filestyle) {\n          $element.filestyle(options);\n        }\n      }]\n    };\n  });\n/**\n * @Description:\n * table中无数据范围的数据\n * @User: linanbin\n * @Version: 2.0.0, 15/12/11\n */\n\nangular.module('voyageone.angular.directives.ifNoRows', [])\n    .directive('ifNoRows', [\"$templateCache\", \"$compile\", function ($templateCache, $compile) {\n\n        var tempNoDataKey = \"voyageone.angular.directives.ifNoRows.tpl.html\";\n\n        // 没有数据显示警告\n        if (!$templateCache.get(tempNoDataKey)) {\n            $templateCache.put(tempNoDataKey,\n            '<div class=\"text-center text-hs\" id=\"noData\">\\n' +\n            '    <h4 class=\"text-vo\"><i class=\"icon fa fa-warning\"></i>&nbsp;{{\\'TXT_ALERT\\' | translate}}</h4>\\n' +\n            '{{\\'TXT_MSG_NO_DATE\\' | translate}}' +\n            '</dv>');\n        }\n\n        return {\n            restrict: \"A\",\n            replace: false,\n            scope: {\n                $$data: \"@ifNoRows\"\n            },\n            link: function (scope, element) {\n\n                scope.$parent.$watch(scope.$$data, function () {\n\n                    // 如果数据不存在则显示警告信息\n                    if(scope.$parent.$eval(scope.$$data)  == 0) {\n                        element.find(\"#noData\").remove();\n                        element.append($compile($templateCache.get(tempNoDataKey))(scope));\n                    } else {\n                        element.find(\"#noData\").remove();\n                    }\n                })\n            }\n        };\n    }]);\n\n/**\n * @Description:\n * 用于菜单目录二级展开\n * @User:    Jonas\n * @Version: 0.2.0, 2015-12-07\n */\n\nangular.module('voyageone.angular.directives.uiNav', [])\n    .directive('uiNav', function () {\n\n        return {\n            restrict: 'AC',\n            link: function(scope, el) {\n                var _window = $(window),\n                    _mb = 768,\n                    wrap = $('.app-aside'),\n                    next,\n                    backdrop = '.dropdown-backdrop';\n                // unfolded\n                el.on('click', 'a', function(e) {\n                    next && next.trigger('mouseleave.nav');\n                    var _this = $(this);\n                    _this.parent().siblings( \".active\" ).toggleClass('active');\n                    _this.next().is('ul') &&  _this.parent().toggleClass('active') &&  e.preventDefault();\n                    // mobile\n                    _this.next().is('ul') || ( ( _window.width() < _mb ) && $('.app-aside').removeClass('show off-screen') );\n                });\n\n                // folded & fixed\n                el.on('mouseenter', 'a', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                    if ( !$('.app-aside-fixed.app-aside-folded').length || ( _window.width() < _mb ) || $('.app-aside-dock').length) return;\n                    var _this = $(e.target)\n                        , top\n                        , w_h = $(window).height()\n                        , offset = 50\n                        , min = 150;\n\n                    !_this.is('a') && (_this = _this.closest('a'));\n                    if( _this.next().is('ul') ){\n                        next = _this.next();\n                    }else{\n                        return;\n                    }\n\n                    _this.parent().addClass('active');\n                    top = _this.parent().position().top + offset;\n                    next.css('top', top);\n                    if( top + next.height() > w_h ){\n                        next.css('bottom', 0);\n                    }\n                    if(top + min > w_h){\n                        next.css('bottom', w_h - top - offset).css('top', 'auto');\n                    }\n                    next.appendTo(wrap);\n\n                    next.on('mouseleave.nav', function(e){\n                        $(backdrop).remove();\n                        next.appendTo(_this.parent());\n                        next.off('mouseleave.nav').css('top', 'auto').css('bottom', 'auto');\n                        _this.parent().removeClass('active');\n                    });\n\n                    $('.smart').length && $('<div class=\"dropdown-backdrop\"/>').insertAfter('.app-aside').on('click', function(next){\n                        next && next.trigger('mouseleave.nav');\n                    });\n\n                });\n\n                wrap.on('mouseleave', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                });\n            }\n        };\n    });\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/24\n */\n\n(function () {\n\n    var fieldTypes = {\n        INPUT: \"INPUT\",\n        DATE: \"DATE\",\n        DATETIME: \"DATETIME\",\n        TEXTAREA: \"TEXTAREA\",\n        SINGLE_CHECK: \"SINGLECHECK\",// 在complex中的显示select,以外的默认显示singlecheck,如果用户觉得select显示不方便,就将该field的type改成radio\n        RADIO: \"RADIO\",\n        MULTI_INPUT: \"MULTIINPUT\", // 没有被使用\n        MULTI_CHECK: \"MULTICHECK\",\n        COMPLEX: \"COMPLEX\", // TODO\n        MULTI_COMPLEX: \"MULTICOMPLEX\",\n        LABEL: \"LABEL\"  // 可以不显示\n    }, ruleTypes = {\n        VALUE_TYPE_RULE: \"valueTypeRule\",\n        REQUIRED_RULE: \"requiredRule\",\n        DISABLE_RULE: \"disableRule\",\n        READ_ONLY_RULE: \"readOnlyRule\",\n        REGEX_RULE: \"regexRule\",\n        SET_RULE: \"setRule\", // TODO 暂时不知道怎么用\n        TIP_RULE: \"tipRule\", // TODO 不需要处理\n        DEV_TIP_RULE: \"devTipRule\", // 不需要处理\n        MIN_LENGTH_RULE: \"minLengthRule\",\n        MAX_LENGTH_RULE: \"maxLengthRule\",\n        MIN_VALUE_RULE: \"minValueRule\",\n        MAX_VALUE_RULE: \"maxValueRule\",\n        MIN_INPUT_NUM_RULE: \"minInputNumRule\",\n        MAX_INPUT_NUM_RULE: \"maxInputNumRule\",\n        MIN_DECIMAL_DIGITS_RULE: \"minDecimalDigitsRule\", // TODO\n        MAX_DECIMAL_DIGITS_RULE: \"maxDecimalDigitsRule\", // TODO\n        MIN_TARGET_SIZE_RULE: \"minTargetSizeRule\", // TODO\n        MAX_TARGET_SIZE_RULE: \"maxTargetSizeRule\", // TODO\n        MIN_IMAGE_SIZE_RULE: \"minImageSizeRule\", // TODO\n        MAX_IMAGE_SIZE_RULE: \"maxImageSizeRule\" // TODO\n    }, valueTypes = {\n        TEXT: \"text\",\n        DECIMAL: \"decimal\",\n        INTEGER: \"integer\",\n        LONG: \"long\",\n        DATE: \"date\",\n        TIME: \"time\",\n        URL: \"url\",\n        TEXTAREA: \"textarea\",\n        HTML: \"html\"\n    }, templates = {\n        header: '<div class=\"form-group\">' +\n        '<label class=\"col-sm-2 control-label\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" ng-bind=\"$$data.name\"></label>' +\n        '<div class=\"col-sm-8\" ng-class=\"{\\'modal-open\\' : showHtmlData.isMultiComplex, \\'hierarchy_main\\': showHtmlData.isComplex}\" ng-transclude></div>' +\n        '<div class=\"col-sm-2\" ng-if=\"showHtmlData.isMultiComplex\"><button class=\"btn btn-success\" ng-click=\"addField($$data)\"><i class=\"fa fa-plus\"></i>{{\\'BTN_ADD\\' | translate}}</button></div>' +\n        '<div class=\"row\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><div class=\"col-sm-8 col-sm-offset-2 text-warnings\"><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div></div>' +\n        '</div>',\n        label: '<input style=\"min-width: 150px; max-width: 250px;\" type=\"text\" readonly ng-model=\"vm.$$data.value\" class=\"form-control\">',\n        input: '<input style=\"min-width: 150px; max-width: 250px;\" ng-model=\"vm.$$data.value\" class=\"form-control\" %replaceInfo%>',\n        date: '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input %replaceInfo% type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDate}}\" ng-model=\"$parent.vm.$$data.value\" date-model-format=\"{{formatDate}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button %replaceInfo% type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>',\n        datetime: '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input %replaceInfo% type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDateTime}}\" ng-model=\"$parent.vm.$$data.value\" date-model-format=\"{{formatDateTime}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button %replaceInfo% type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>',\n        textarea: '<textarea style=\"min-width: 150px; max-width: 650px;\" class=\"form-control no-resize\" ng-model=\"vm.$$data.value\" rows=\"{{showHtmlData.rowNum}}\" %replaceInfo%></textarea>',\n        select: '<select style=\"min-width: 150px; max-width: 250px;\" %replaceInfo% class=\"form-control\" ng-model=\"vm.$$data.value.value\" ng-options=\"option.value as option.displayName for option in vm.$$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>',\n        radio: '<label class=\"checkbox-inline c-radio\" ng-repeat=\"option in vm.$$data.options\"><input name=\"{{vm.$$data.id}}\" type=\"radio\" ng-value=\"option.value\" ng-model=\"vm.$$data.value.value\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>',\n        checkbox: '<label class=\"checkbox-inline c-checkbox\" ng-repeat=\"option in vm.$$data.options\"><input type=\"checkbox\" ng-value=\"option.value\" ng-click=\"checkboxValue(option.value)\" ng-checked=\"isSelected(option.value)\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>',\n        multiComplex: '<table class=\"table text-center\">' +\n        '<thead><tr>' +\n        '<th ng-repeat=\"field in vm.$$data.fields\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" class=\"text-center\" style=\"min-width: 180px;\">{{field.name}}</th>' +\n        '<th ng-if=\"!showHtmlData.notShowEdit\" style=\"min-width: 60px;\" class=\"text-center\" translate=\"TXT_ACTION\"></th>' +\n        '</tr></thead>' +\n        '<tbody><tr ng-repeat=\"value in vm.$$data.complexValues\">' +\n        '<td class=\"text-left\" ng-repeat=\"field in value.fieldMap\"><div class=\"tableLayer\"><p ng-if=\"field.type != \\'COMPLEX\\'\">&nbsp;</p><p><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></p></div></td>' +\n        '<td ng-if=\"!showHtmlData.notShowEdit\" style=\"min-width: 60px;\"><button title=\"{\\'BTN_DELETE\\' | translate}\" class=\"btn btn-danger btn-xs\" ng-click=\"delField($index)\"><i class=\"fa  fa-trash-o\"></i></button></td>' +\n        '</tr></tbody>' +\n        '</table>',\n        complex: '<schema-header ng-repeat=\"field in vm.$$data.fields\" data=\"field\"><schema-item data=\"field\"></schema-item></schema-header>',\n        multi_in_complex: '<div ng-repeat=\"field in vm.$$data.fields\"><p ng-bind=\"field.name\"></p><p><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></p></div>',\n        multiComplex_tip: '<div class=\"text-warnings\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><br><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div>'\n    };\n\n    var SchemaHeader, Schema;\n\n    SchemaHeader = function (config) {\n        this.config = config || {\n                isRequired: false,\n                isMultiComplex: false,\n                isComplex: false,\n                tipMsg: []\n            };\n    };\n\n    SchemaHeader.prototype = {\n        isRequired: function (value) {\n            return value !== undefined ? this.config.isRequired = value : this.config.isRequired;\n        },\n        isComplex: function (value) {\n            return value !== undefined ? this.config.isComplex = value : this.config.isComplex;\n        },\n        isMultiComplex: function (value) {\n            return value !== undefined ? this.config.isMultiComplex = value : this.config.isMultiComplex;\n        },\n        tipMsg: function (value) {\n            return value !== undefined ? this.config.tipMsg.push(value) : this.config.tipMsg;\n        }\n    };\n\n    Schema = function (config) {\n        this.config = config || {\n                type: null,\n                name: null,\n                rowNum: null,\n                isRequired: false,\n                checkValues: [],\n                tipMsg: [],\n                html: [],\n                notShowEdit: true\n            };\n    };\n\n    Schema.prototype = {\n        type: function (value) {\n            return value !== undefined ? this.config.type = value : this.config.type;\n        },\n        name: function (value) {\n            return value !== undefined ? this.config.name = value : this.config.name;\n        },\n        html: function (value) {\n            return value !== undefined ? this.config.html.push(value) : this.config.html.join(\" \");\n        },\n        isRequired: function (value) {\n            return value !== undefined ? this.config.isRequired = value : this.config.isRequired;\n        },\n        rowNum: function (value) {\n            return value !== undefined ? this.config.rowNum = value : this.config.rowNum;\n        },\n        tipMsg: function (value) {\n            return value !== undefined ? this.config.tipMsg.push(value) : this.config.tipMsg;\n        },\n        checkValues: function (value) {\n            return value !== undefined ? this.config.checkValues.push(value) : this.config.checkValues;\n        },\n        notShowEdit: function (value) {\n            return value !== undefined ? this.config.notShowEdit = value : this.config.notShowEdit;\n        }\n    };\n\n    angular.module('voyageone.angular.directives.schema', [])\n\n        .directive('schemaHeader', function () {\n\n            return {\n                restrict: \"E\",\n                replace: true,\n                transclude: true,\n                template: templates.header,\n                scope: {\n                    $$data: \"=data\"\n                },\n                link: function (scope) {\n\n                    var header = new SchemaHeader();\n                    var field = scope.$$data;\n\n                    // 标记特殊类型的 Field\n                    switch (field.type) {\n                        case fieldTypes.MULTI_COMPLEX:\n                            header.isMultiComplex(true);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            header.isComplex(true);\n                            break;\n                    }\n\n                    // 标记提供了显示支持的规则\n                    angular.forEach(field.rules, function (rule) {\n                        switch (rule.name) {\n                            case ruleTypes.REQUIRED_RULE:\n                                header.isRequired(\"true\" == rule.value);\n                                break;\n                            case ruleTypes.TIP_RULE:\n                                header.tipMsg(rule.value);\n                                break;\n                        }\n                    });\n\n                    scope.showHtmlData = angular.copy(header.config);\n\n                    /**\n                     * 设置multi complex添加一条新记录\n                     * @param data\n                     */\n                    scope.addField = function (data) {\n                        var newFieldMap = {};\n                        angular.forEach(data.fields, function (field) {\n                            newFieldMap[field.id] = field;\n                        });\n\n                        data.complexValues.push({fieldMap: angular.copy(newFieldMap)});\n                    };\n\n                }\n            };\n        })\n\n        .directive('schemaItem', [\"$compile\", function ($compile) {\n\n            return {\n                restrict: \"E\",\n                require: ['^?form'],\n                bindToController: true,\n                controllerAs: \"vm\",\n                scope: {\n                    $$data: \"=data\",\n                    $$hastip: \"=hastip\",\n                    $$complex: \"=complex\",\n                    $$notShowEdit: \"=notShowEdit\"\n                },\n                controller: function () {\n                },\n                link: function (scope, element) {\n\n                    // 监视配置变动\n                    scope.$watch('vm.$$data', refresh);\n\n                    scope.$watch('schemaForm.$valid', function ($valid) {\n                        scope.vm.$$data.$valid = $valid;\n                    });\n\n                    function refresh() {\n\n                        var schema = new Schema();\n                        var field = scope.vm.$$data;\n\n                        // 设置空间name\n                        schema.name(field.id);\n\n                        // 设置edit是否显示\n                        schema.notShowEdit(scope.vm.$$notShowEdit == undefined ? false : scope.vm.$$notShowEdit);\n\n                        schema.type(field.type);\n\n                        switch (field.type) {\n                            case fieldTypes.RADIO:\n                                if (scope.vm.$$complex)\n                                    schema.type(fieldTypes.SINGLE_CHECK);\n                                break;\n                            case fieldTypes.MULTI_CHECK:\n                                _setCheckValues(field.values);\n                                break;\n                            case fieldTypes.MULTI_COMPLEX:\n                                field.complexValues = _resetMultiComplex(field);\n                                break;\n                            case fieldTypes.COMPLEX:\n                                _resetComplex(field);\n                                break;\n                        }\n\n                        angular.forEach(field.rules, function (rule) {\n                            switch (rule.name) {\n                                case ruleTypes.VALUE_TYPE_RULE:\n                                    _valueTypeRule(rule);\n                                    break;\n                                case ruleTypes.REQUIRED_RULE:\n                                    _requiredRule(rule);\n                                    break;\n                                case ruleTypes.DISABLE_RULE:\n                                    _disableRule(rule);\n                                    break;\n                                case ruleTypes.READ_ONLY_RULE:\n                                    _readOnlyRule(rule);\n                                    break;\n                                case ruleTypes.REGEX_RULE:\n                                    _regexRule(rule);\n                                    break;\n                                case ruleTypes.TIP_RULE:\n                                    _tipRule(rule);\n                                    break;\n                                case ruleTypes.MIN_LENGTH_RULE:\n                                    _minLengthRule(rule);\n                                    break;\n                                case ruleTypes.MAX_LENGTH_RULE:\n                                    _maxLengthRule(rule);\n                                    break;\n                                case ruleTypes.MIN_VALUE_RULE:\n                                    _minValueRule(rule);\n                                    break;\n                                case ruleTypes.MAX_VALUE_RULE:\n                                    _maxValueRule(rule);\n                                    break;\n                                case ruleTypes.MIN_INPUT_NUM_RULE:\n                                    _minInputNumRule(rule);\n                                    break;\n                                case ruleTypes.MAX_INPUT_NUM_RULE:\n                                    _maxInputNumRule(rule);\n                                    break;\n                            }\n                        });\n\n                        var tempHtml = \"\";\n\n                        // 拼接body\n                        switch (schema.type()) {\n                            case fieldTypes.INPUT:\n                                tempHtml = templates.input.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.DATE:\n                                tempHtml = templates.date.replace(\"%replaceInfo%\", schema.html()).replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.DATETIME:\n                                tempHtml = templates.datetime.replace(\"%replaceInfo%\", schema.html()).replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.TEXTAREA:\n                                tempHtml = templates.textarea.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.SINGLE_CHECK:\n                                tempHtml = templates.select.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.RADIO:\n                                tempHtml = templates.radio.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.MULTI_CHECK:\n                                tempHtml = templates.checkbox.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.LABEL:\n                                tempHtml = templates.label;\n                                break;\n                            case fieldTypes.MULTI_COMPLEX:\n                                tempHtml = templates.multiComplex;\n                                break;\n                            case fieldTypes.COMPLEX:\n                                tempHtml = scope.vm.$$complex ? templates.multi_in_complex : templates.complex;\n                                break;\n                        }\n\n                        // 添加规则说明\n                        if (schema.tipMsg() != null && scope.vm.$$hastip) {\n                            tempHtml += templates.multiComplex_tip;\n                        }\n\n                        // 包裹 ng-form, 用于启用 angular 的验证功能\n                        tempHtml = '<ng-form name=\"schemaForm\">' + tempHtml + '</ng-form>';\n                        // 追加错误信息的显示\n                        tempHtml += '<div ng-repeat=\"(k, v) in schemaForm.$error\">{{k}}</div>';\n\n                        scope.showHtmlData = angular.copy(schema.config);\n                        element.html($compile(tempHtml)(scope));\n\n                        /**\n                         * 设置checkbox被选中的value值处理\n                         * @param value\n                         */\n                        scope.checkboxValue = function (value) {\n                            if (_.contains(scope.showHtmlData.checkValues, value)) {\n                                scope.showHtmlData.checkValues.splice(_.indexOf(scope.showHtmlData.checkValues, value), 1);\n                            } else {\n                                scope.showHtmlData.checkValues.push(value);\n                            }\n                            field.values = [];\n                            angular.forEach(scope.showHtmlData.checkValues, function (obj) {\n                                field.values.push({id: null, value: obj});\n                            })\n                        };\n\n                        /**\n                         * 判断是否被选中\n                         * @param value\n                         */\n                        scope.isSelected = function (value) {\n                            return _.contains(scope.showHtmlData.checkValues, value)\n                        };\n\n                        /**\n                         * 设置multi complex删除该条记录\n                         * @param index\n                         */\n                        scope.delField = function (index) {\n                            field.complexValues.splice(index, 1);\n                        };\n\n                        /**\n                         * 设置checkvalues\n                         * @param values\n                         * @private\n                         */\n                        function _setCheckValues(values) {\n                            if (values != undefined && values != null) {\n                                angular.forEach(values, function (obj) {\n                                    schema.checkValues(obj.value);\n                                })\n                            }\n                        }\n\n                        /**\n                         * 重新设置multicomplex的一些属性\n                         * @param data\n                         * @private\n                         */\n                        function _resetMultiComplex(data) {\n                            var tempValues = [];\n                            angular.forEach(data.complexValues, function (value) {\n                                var tempFieldMap = {};\n                                angular.forEach(data.fields, function (field) {\n                                    var tempField = angular.copy(field);\n                                    if (value.fieldMap[field.id] != undefined) {\n                                        switch (field.type) {\n                                            case fieldTypes.INPUT:\n                                            case fieldTypes.LABEL:\n                                            case fieldTypes.DATE:\n                                            case fieldTypes.DATETIME:\n                                            case fieldTypes.TEXTAREA:\n                                            case fieldTypes.SINGLE_CHECK:\n                                            case fieldTypes.RADIO:\n                                                tempField.value = value.fieldMap[field.id].value;\n                                                break;\n                                            case fieldTypes.MULTI_INPUT:\n                                            case fieldTypes.MULTI_CHECK:\n                                                tempField.values = value.fieldMap[field.id].values;\n                                                break;\n                                            case fieldTypes.COMPLEX:\n                                                tempField.complexValue = value.fieldMap[field.id].complexValue;\n                                                break;\n                                            case fieldTypes.MULTI_COMPLEX:\n                                                tempField.complexValues = value.fieldMap[field.id].complexValues;\n                                                break;\n                                        }\n                                    }\n                                    tempFieldMap[field.id] = tempField;\n                                });\n                                tempValues.push({fieldMap: angular.copy(tempFieldMap)});\n                            });\n\n                            // 如果values为空,默认添加空白行\n                            if (_.isEmpty(data.complexValues)) {\n                                var newFieldMap = {};\n                                angular.forEach(data.fields, function (field) {\n                                    newFieldMap[field.id] = field;\n                                    //eval(\"newFieldMap.\" + field.id + \"=field\");\n                                });\n\n                                tempValues.push({fieldMap: angular.copy(newFieldMap)});\n                            }\n\n                            return tempValues;\n                        }\n\n                        /**\n                         * 重新\n                         * @param data\n                         * @private\n                         */\n                        function _resetComplex(data) {\n                            angular.forEach(data.fields, function (field) {\n                                switch (field.type) {\n                                    case fieldTypes.INPUT:\n                                    case fieldTypes.LABEL:\n                                    case fieldTypes.DATE:\n                                    case fieldTypes.DATETIME:\n                                    case fieldTypes.TEXTAREA:\n                                    case fieldTypes.SINGLE_CHECK:\n                                    case fieldTypes.RADIO:\n                                        if (!_.isEmpty(data.complexValue.fieldMap))\n                                            field.value = data.complexValue.fieldMap[field.id].value;\n                                        else\n                                            field.value = data.defaultComplexValue.fieldMap[field.id].value;\n                                        break;\n                                    case fieldTypes.MULTI_INPUT:\n                                    case fieldTypes.MULTI_CHECK:\n                                        if (!_.isEmpty(data.complexValue.fieldMap))\n                                            field.values = data.complexValue.fieldMap[field.id].values;\n                                        else\n                                            field.values = data.defaultComplexValue.fieldMap[field.id].values;\n                                        break;\n                                    case fieldTypes.COMPLEX:\n                                        if (!_.isEmpty(data.complexValue.fieldMap))\n                                            field.complexValue = data.complexValue.fieldMap[field.id].complexValue;\n                                        else\n                                            field.complexValue = data.defaultComplexValue.fieldMap[field.id].complexValue;\n                                        break;\n                                    case fieldTypes.MULTI_COMPLEX:\n                                        if (!_.isEmpty(data.complexValue.fieldMap))\n                                            field.complexValues = data.complexValue.fieldMap[field.id].complexValues;\n                                        else\n                                            field.complexValues = data.defaultComplexValue.fieldMap[field.id].complexValues;\n                                        break;\n                                }\n                            });\n                        }\n\n                        /**\n                         * 处理valueTypeRule\n                         * @param valueTypeRule\n                         * @private\n                         */\n                        function _valueTypeRule(valueTypeRule) {\n                            switch (valueTypeRule.value) {\n                                case valueTypes.TEXT:\n                                case valueTypes.DECIMAL:\n                                case valueTypes.INTEGER:\n                                case valueTypes.LONG:\n                                    schema.type(fieldTypes.INPUT);\n                                    schema.html(\"type=\\\"text\\\"\");\n                                    break;\n                                case valueTypes.DATE:\n                                    schema.type(fieldTypes.DATE);\n                                    break;\n                                case valueTypes.TIME:\n                                    schema.type(fieldTypes.DATETIME);\n                                    break;\n                                case valueTypes.URL:\n                                    schema.type(fieldTypes.INPUT);\n                                    schema.html(\"type=\\\"url\\\"\");\n                                    break;\n                                case valueTypes.TEXTAREA:\n                                    schema.type(fieldTypes.TEXTAREA);\n                                    schema.rowNum(4);\n                                    break;\n                                case valueTypes.HTML:\n                                    schema.type(fieldTypes.TEXTAREA);\n                                    schema.rowNum(10);\n                                    break;\n                            }\n                        }\n\n                        /**\n                         * 处理requiredRule\n                         * @param requiredRule\n                         * @private\n                         */\n                        function _requiredRule(requiredRule) {\n                            if (\"true\" == requiredRule.value) {\n                                schema.isRequired(true);\n                                schema.html(\"required\");\n                            }\n                        }\n\n                        /**\n                         * 处理disableRule\n                         * @param disableRule\n                         * @private\n                         */\n                        function _disableRule(disableRule) {\n                            if (\"true\" == disableRule.value\n                                && disableRule.dependGroup == null) {\n                                schema.html(\"ng-disabled=\\\"true\\\"\");\n                            }\n                        }\n\n                        /**\n                         * 处理readOnlyRule\n                         * @param readOnlyRule\n                         * @private\n                         */\n                        function _readOnlyRule(readOnlyRule) {\n                            if (\"true\" == readOnlyRule.value) {\n                                schema.html(\"readonly\");\n                            }\n                        }\n\n                        /**\n                         * 处理regexRule\n                         * @param regexRule\n                         * @private\n                         */\n                        function _regexRule(regexRule) {\n                            schema.html(\"ng-pattern=\\\"/\" + regexRule.value + \"/\\\"\");\n                        }\n\n                        /**\n                         * 处理tipRule\n                         * @param tipRule\n                         * @private\n                         */\n                        function _tipRule(tipRule) {\n                            schema.tipMsg(tipRule.value);\n                        }\n\n                        /**\n                         * 处理minLengthRule\n                         * @param minLengthRule\n                         * @private\n                         */\n                        function _minLengthRule(minLengthRule) {\n                            var value = isNaN(parseInt(minLengthRule.value)) ? 0 : minLengthRule.value;\n\n                            if (\"not include\" === minLengthRule.exProperty)\n                                value = (value > 0) ? value - 1 : 0;\n\n                            if (\"character\" == minLengthRule.unit)\n                                schema.html(\"ng-minlength=\\\"\" + value + \"\\\"\");\n                            else\n                                schema.html(\"ng-char-minlength=\\\"\" + value + \"\\\"\");\n                        }\n\n                        /**\n                         * 处理maxLengthRule\n                         * @param maxLengthRule\n                         * @private\n                         */\n                        function _maxLengthRule(maxLengthRule) {\n                            var value = isNaN(parseInt(maxLengthRule.value)) ? 0 : maxLengthRule.value;\n\n                            if (\"not include\" === maxLengthRule.exProperty)\n                                value = (value > 0) ? value - 1 : 0;\n\n                            if (\"character\" == maxLengthRule.unit)\n                                schema.html(\"ng-maxlength=\\\"\" + value + \"\\\"\");\n                            else\n                                schema.html(\"ng-char-maxlength=\\\"\" + value + \"\\\"\");\n                        }\n\n                        /**\n                         * 处理minValueRule\n                         * @param minValueRule\n                         * @private\n                         */\n                        function _minValueRule(minValueRule) {\n                            var value = isNaN(parseFloat(minValueRule.value)) ? 0 : parseFloat(minValueRule.value);\n\n                            if (\"not include\" === minValueRule.exProperty)\n                                value = (value > 0) ? value - 0.01 : 0;\n\n                            schema.html(\"ng-minvalue=\\\"\" + value + \"\\\"\");\n                        }\n\n                        /**\n                         * 处理maxValueRule\n                         * @param maxValueRule\n                         * @private\n                         */\n                        function _maxValueRule(maxValueRule) {\n                            var value = isNaN(parseFloat(maxValueRule.value)) ? 0 : parseFloat(maxValueRule.value);\n\n                            if (\"not include\" === maxValueRule.exProperty)\n                                value = (value > 0) ? value - 0.01 : 0;\n\n                            schema.html(\"ng-maxvalue=\\\"\" + value + \"\\\"\");\n\n                        }\n\n                        /**\n                         * 处理minInputNumRule\n                         * @param minInputNumRule\n                         * @private\n                         */\n                        function _minInputNumRule(minInputNumRule) {\n                            var value = isNaN(parseInt(minInputNumRule.value)) ? 0 : parseInt(minInputNumRule.value);\n\n                            if (\"not include\" === minInputNumRule.exProperty)\n                                value = (value > 0) ? value - 1 : 0;\n\n                            schema.html(\"ng-mininputnum=\\\"\" + value + \"\\\"\");\n                        }\n\n                        /**\n                         * 处理maxInputNumRule\n                         * @param maxInputNumRule\n                         * @private\n                         */\n                        function _maxInputNumRule(maxInputNumRule) {\n                            var value = isNaN(parseInt(maxInputNumRule.value)) ? 0 : parseInt(maxInputNumRule.value);\n\n                            if (\"not include\" === maxInputNumRule.exProperty)\n                                value = (value > 0) ? value - 1 : 0;\n\n                            schema.html(\"ng-maxinputnum=\\\"\" + value + \"\\\"\");\n                        }\n                    }\n                }\n            };\n        }]);\n\n})();\n/**\n * @Description:\n * 用于动态显示options\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-22\n */\n\nangular.module('voyageone.angular.directives.voption', [])\n    .directive('voption', [\"$templateCache\", \"$compile\", function ($templateCache, $compile) {\n\n        var templateKey_select = \"voyageone.angular.directives.optionSelect.tpl.html\";\n\n        // 显示成select样式\n        if (!$templateCache.get(templateKey_select)) {\n            $templateCache.put(templateKey_select,\n                '<select class=\"form-control\" ng-model=\"$$data.value.value\" ng-options=\"option.value as option.displayName for option in $$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');\n        }\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope, element) {\n\n                // 定义不同的展示种类\n                var typeList = {\n                    SINGLE_CHECK: \"SINGLECHECK\"\n                };\n\n                // 监视配置变动\n                scope.$watch('$$data', function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 根据type选择展示不同的控件\n                 */\n                function refresh() {\n                    var tempHtml;\n                    switch (scope.$$data.type) {\n                        case typeList.SINGLE_CHECK:\n                            tempHtml = $compile($templateCache.get(templateKey_select))(scope);\n                            break;\n                    }\n                    element.html(tempHtml);\n                }\n            }\n        };\n    }]);\n/**\n * @Description:\n * 用于分页\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-08\n */\n\nangular.module('voyageone.angular.directives.vpagination', [])\n    .directive('vpagination', [\"$templateCache\", \"$compile\", \"vpagination\", function ($templateCache, $compile, vpagination) {\n\n        var templateKey = \"voyageone.angular.directives.pagination.tpl.html\";\n        var templateKeyNoData = \"voyageone.angular.directives.paginationNoData.tpl.html\";\n\n        // 有数据分页样式\n        if (!$templateCache.get(templateKey)) {\n            $templateCache.put(templateKey,\n                '<div class=\"col-sm-3\">\\n' +\n                '    <div class=\"page-main form-inline\">{{\\'TXT_SHOWING_NO\\' | translate}}&nbsp;<input class=\"text-center\" type=\"text\" ng-model=\"curr.pageNo\"/>&nbsp;/&nbsp;{{totalPages}}&nbsp;{{\\'TXT_PAGE\\' | translate}}&nbsp;' +\n                '        <button class=\"btn btn-xs btn-default\" type=\"button\" ng-click=\"goPage(curr.pageNo)\" translate=\"BTN_GO\"></button>\\n' +\n                '    </div>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-4 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_SHOWING\\' | translate}}&nbsp;{{curr.start}}-{{curr.end}}&nbsp;{{\\'TXT_OF\\' | translate}}&nbsp;{{totalItems}}&nbsp{{\\'TXT_ITEMS\\' | translate}}</small>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-5 text-right text-center-xs\"><div>' +\n                '    <ul class=\"pagination-sm m-t-none m-b pagination ng-isolate-scope ng-valid ng-dirty ng-valid-parse\">\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-first\"><a href ng-click=\"goPage(1)\" ng-disabled=\"curr.isFirst\">&laquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-prev\"><a href ng-click=\"goPage(curr.pageNo - 1)\" ng-disabled=\"curr.isFirst\">&lsaquo;</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowStart\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-repeat=\"page in curr.pages track by $index\" ng-class=\"{active: isCurr(page)}\" class=\"pagination-page\"><a href ng-click=\"goPage(page)\">{{page}}</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowEnd\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-next\"><a href ng-click=\"goPage(curr.pageNo + 1)\" ng-disabled=\"curr.isLast\">&rsaquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-last\"><a href ng-click=\"goPage(totalPages)\" ng-disabled=\"curr.isLast\">&raquo;</a></li>\\n' +\n                '    </ul>\\n' +\n                '</div>');\n        }\n\n        // 无数据分页样式\n        if (!$templateCache.get(templateKeyNoData)) {\n            $templateCache.put(templateKeyNoData,\n                '<div class=\"col-sm-7 col-sm-offset-2 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_SHOWING\\' | translate}}&nbsp;0-0&nbsp;{{\\'TXT_OF\\' | translate}}&nbsp;0&nbsp{{\\'TXT_ITEMS\\' | translate}}</small>\\n' +\n                '</div>');\n        }\n\n        var defConfig = {curr: 1, total: 0, size: 20, showPageNo:5};\n\n        return {\n            restrict: \"AE\",\n            //templateUrl: templateKey,\n            replace: false,\n            scope: {\n                $$configNameForA: \"@vpagination\",\n                $$configNameForE: \"@config\"\n            },\n            link: function (scope, element) {\n\n                // 获取用户的config配置\n                var userConfigName = scope.$$configNameForA || scope.$$configNameForE;\n                var userConfig = scope.$parent.$eval(userConfigName);\n\n                // 将用户配置覆盖到默认配置后，在重新覆盖到用户配置上，用于补全配置属性\n                var userWithDefConfig = angular.extend({}, defConfig, userConfig);\n                scope.config = angular.extend(userConfig, userWithDefConfig);\n\n                var p = new vpagination(scope.config);\n\n                // 监视配置变动\n                scope.$parent.$watch(userConfigName, function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 跳转到指定页\n                 * @param num\n                 */\n                scope.goPage = function (num) {\n                    p.goPage(isNaN(Number(num)) ? 1 : Number(num));\n                };\n\n                /**\n                 * 判断是否是当前页\n                 * @param num\n                 * @returns {*|boolean}\n                 */\n                scope.isCurr = function (num) {\n                    return p.isCurr(num);\n                };\n\n                function refresh() {\n\n                    // 获取总页数\n                    scope.totalPages = p.getPageCount();\n                    // 获取总items数\n                    scope.totalItems = p.getTotal();\n                    // 获取当前页的信息\n                    scope.curr = p.getCurr();\n\n                    // 根据总数量显示不同的分页样式\n                    var tempHtml;\n                    if(p.getTotal() == 0) {\n                        tempHtml = $compile($templateCache.get(templateKeyNoData))(scope);\n                    } else {\n                        tempHtml = $compile($templateCache.get(templateKey))(scope);\n                    }\n                    element.html(tempHtml);\n\n                }\n            }\n        };\n    }]);\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\nangular.module('voyageone.angular.directives.validator', [])\n\n    // 定义ng-char-maxlength\n    .directive('ngCharMaxlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxlength = -1;\n                attr.$observe('ngCharMaxlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    maxlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxlength = function(modelValue, viewValue) {\n                    return (maxlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) <= maxlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-char-minlength\n    .directive('ngCharMinlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minlength = -1;\n                attr.$observe('ngCharMinlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    minlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minlength = function(modelValue, viewValue) {\n                    return (minlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) >= minlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-maxvalue\n    .directive('ngMaxvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        maxvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        maxvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        maxvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxvalue = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-minvalue\n    .directive('ngMinvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMinvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        minvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        minvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        minvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minvalue = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue >= minvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-maxinputnum\n    .directive('ngMaxinputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxinputvalue', function(value) {\n                    maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxinputnum = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-mininputnum\n    .directive('ngMininputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMininputnum', function(value) {\n                    minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.mininputnum = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length >= minvalue);\n                };\n            }\n        }\n    })\n;\n/**\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.dialogs', [])\n    .factory(\"$dialogs\", [\"$modal\", \"$filter\", \"$templateCache\", function ($modal, $filter, $templateCache) {\n\n        var templateName = 'voyageone.angular.factories.dialogs.tpl.html';\n        var template =\n            '<div class=\"vo_modal\">' +\n                '<div class=\"modal-header\">' +\n                    '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" ng-click=\"close()\">' +\n                        '<span aria-hidden=\"true\"><i ng-click=\"close()\" class=\"fa fa-close\"></i></span>' +\n                    '</button>' +\n                    '<h5 class=\"modal-title\" ng-bind-html=\"title\"></h5>' +\n                '</div>' +\n                '<div class=\"modal-body wrapper-lg\">' +\n                    '<div class=\"row\">' +\n                        '<h5 class=\"text-center text-hs\"><p class=\"text-center\" ng-bind-html=\"content\"></p></h5>' +\n                    '</div>' +\n                '</div>' +\n                '<div class=\"modal-footer\">' +\n                    '<button class=\"btn btn-default btn-sm\" ng-if=\"!isAlert\" ng-click=\"close()\" translate=\"BTN_CANCEL\"></button>' +\n                    '<button class=\"btn btn-vo btn-sm\" ng-click=\"ok()\" translate=\"BTN_OK\"></button>' +\n                '</div>' +\n            '</div>';\n        $templateCache.put(templateName, template);\n\n        function tran(translationId, values) {\n            return $filter('translate')(translationId, values);\n        }\n\n        return function (options) {\n\n            if (!_.isObject(options)) throw \"arg type must be object\";\n\n            var values;\n\n            if (_.isObject(options.content)) {\n                values = options.content.values;\n                options.content = options.content.id;\n            }\n\n            options.title = tran(options.title);\n            options.content = tran(options.content, values);\n\n            var modalInstance = $modal.open({\n                templateUrl: templateName,\n                controller: [\"$scope\", function (scope) {\n                    _.extend(scope, options);\n                }],\n                size: 'md'\n            });\n\n            options.close = function () {\n                modalInstance.dismiss('close')\n            };\n\n            options.ok = function () {\n                modalInstance.close('');\n            };\n\n            return modalInstance;\n        };\n    }])\n\n    .factory(\"alert\", [\"$dialogs\", function ($dialogs) {\n        return function (content, title) {\n            return $dialogs({\n                title: title || 'TXT_ALERT',\n                content: content,\n                isAlert: true\n            });\n        };\n    }])\n\n    .factory(\"confirm\", [\"$dialogs\", function vConfirm($dialogs) {\n        return function (content, title) {\n            return $dialogs({\n                title: title || 'TXT_CONFIRM',\n                content: content,\n                isAlert: false\n            });\n        };\n    }]);\n/**\n * @Date:    2015-11-16 20:51:05\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.factories.interceptor', [])\n    .factory('interceptorFactory', function () {\n\n        // 未知的系统错误\n        var UNKNOWN_CODE = \"5\";\n        // 和 JAVA 同步,系统通知前端自动跳转的特殊代码\n        var CODE_SYS_REDIRECT = \"SYS_REDIRECT\";\n        // 和 JAVA 同步,回话过期的信息\n        var MSG_TIMEOUT = \"300001\";\n\n        /**\n         * 对系统自动跳转的响应,执行跳转\n         * @param {{code:string,redirectTo:string}} res\n         * @returns {boolean}\n         */\n        function autoRedirect(res) {\n            if (res.code != CODE_SYS_REDIRECT) {\n                return false;\n            }\n            // 如果跳转数据异常,则默认跳转登陆页\n            location.href = res.redirectTo || '/login.html';\n            return true;\n        }\n\n        /**\n         * 对会话超时和未登录进行特殊处理\n         * @param {{code:string}} res\n         * @returns {boolean}\n         */\n        function sessionTimeout(res) {\n            if (res.code != MSG_TIMEOUT) {\n                return false;\n            }\n            // 会话超时,默认跳转到登陆页\n            location.href = '/login.html';\n            return true;\n        }\n\n        /**\n         * 处理位置的异常\n         * @param response\n         */\n        function unknownException(response) {\n\n            if (response.data.code !== UNKNOWN_CODE) {\n                return;\n            }\n\n            window.$$lastUnknow = response;\n            console.error('Server throw unknown exceptio. Message:', response.data.message);\n        }\n\n        return {\n            request: function (config) {\n                return config;\n            },\n            /**\n             * 响应拦截\n             * @param {{config:object, data:*, headers:function, status:number, statusText:string}} res\n             * @returns {*}\n             */\n            response: function (res) {\n                var result = res.data;\n\n                // 特殊处理部分内容\n                if (autoRedirect(result) || sessionTimeout(result)) {\n                    return res;\n                }\n\n                unknownException(res);\n\n                return res;\n            },\n            requestError: function (config) {\n                return config;\n            },\n            responseError: function (res) {\n            }\n        };\n    })\n    .config([\"$httpProvider\", function ($httpProvider) {\n        $httpProvider.interceptors.push('interceptorFactory');\n    }]);\n/**\n * Notify 的可用参数\n * {\n *    // whether to hide the notification on click\n *    clickToHide: true,\n *    // whether to auto-hide the notification\n *    autoHide: true,\n *    // if autoHide, hide after milliseconds\n *    autoHideDelay: 5000,\n *    // show the arrow pointing at the element\n *    arrowShow: true,\n *    // arrow size in pixels\n *    arrowSize: 5,\n *    // position defines the notification position though uses the defaults below\n *    position: '...',\n *    // default positions\n *    elementPosition: 'bottom left',\n *    globalPosition: 'top right',\n *    // default style\n *    style: 'bootstrap',\n *    // default class (string or [string])\n *    className: 'error',\n *    // show animation\n *    showAnimation: 'slideDown',\n *    // show animation duration\n *    showDuration: 400,\n *    // hide animation\n *    hideAnimation: 'slideUp',\n *    // hide animation duration\n *    hideDuration: 200,\n *    // padding between element and notification\n *    gap: 2\n * }\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.notify', [])\n\n    .factory('notify', [\"$filter\", function ($filter) {\n\n        /**\n         * @ngdoc function\n         * @name voNotify\n         * @description\n         * 自动关闭的弹出提示框\n         */\n        function notify(options) {\n\n            if (!options) return;\n            if (_.isString(options)) options = {message: options};\n            if (!_.isObject(options)) return;\n\n            var values;\n\n            // 为 translate 的格式化提供支持，检测类型并转换\n            if (_.isObject(options.message)) {\n\n                values = options.message.values;\n                options.message = options.message.id;\n            }\n\n            options.message = $filter('translate')(options.message, values);\n\n            return $.notify(options.message, options);\n        }\n\n        notify.success = function (message) {\n            return notify({message: message, className: \"success\"});\n        };\n\n        notify.warning = function (message) {\n            return notify({message: message, className: \"warning\"});\n        };\n\n        notify.danger = function (message) {\n            return notify({message: message, className: \"danger\"});\n        };\n\n        return notify;\n    }]);\n/**\n * @ngdoc\n * @factory\n * @name pppAutoImpl\n * @description\n * 根据定义自动生成方法实现. 注意! 依赖 ui-bootstrap\n */\n\nangular.module('voyageone.angular.factories.pppAutoImpl', [])\n    .factory('pppAutoImpl', [\"$q\", \"$modal\", function ($q, $modal) {\n        return function (declares, viewBaseUrl, jsBaseUrl) {\n            if (!declares.$$$ || !declares.$$$.impl)\n                declares.$$$ = {\n                    impl: declarePopupMethods(declares, viewBaseUrl, jsBaseUrl, '')\n                };\n            return declares.$$$.impl;\n        };\n\n        function declarePopupMethods(declares, viewBaseUrl, jsBaseUrl, popupBaseKey) {\n            var impl = {};\n            if (popupBaseKey) popupBaseKey += '/';\n            _.each(declares, function (declare, parentDir) {\n                if (!declare.popupKey) {\n                    if (_.isObject(declare) || _.isArray(declare)) _.extend(impl,\n                        declarePopupMethods(declare,\n                            viewBaseUrl, jsBaseUrl, popupBaseKey + parentDir,\n                            $q, $modal));\n                    return;\n                }\n\n                var options = _.clone(declare.options) || {};\n\n                var pathBase = '/' + popupBaseKey;\n                if (_.isString(parentDir)) pathBase += parentDir + '/';\n                pathBase += declare.popupKey;\n\n                options.templateUrl = viewBaseUrl + pathBase + '.tpl.html';\n                options.controllerUrl = jsBaseUrl + pathBase + '.ctl';\n\n                if (declare.controllerAs || declare.controller)\n                    options.controller = getControllerName(declare.popupKey);\n                if (declare.controllerAs)\n                    options.controller += ' as ' + (_.isString(declare.controllerAs) ? declare.controllerAs : 'ctrl');\n\n                impl[declare.popupKey] = function (context) {\n                    if (context) options.resolve = {\n                        context: function () {\n                            return context;\n                        }\n                    };\n\n                    var defer = $q.defer();\n                    require([options.controllerUrl], function () {\n                        defer.resolve($modal.open(options).result);\n                    });\n                    return defer.promise;\n                };\n            });\n            return impl;\n        }\n\n        function getControllerName(key) {\n            return key\n                    .replace(/\\.(\\w)/g, function (m, m1) {\n                        return m1.toUpperCase();\n                    })\n                    .replace(/^(\\w)/, function (m, m1) {\n                        return m1.toLowerCase()\n                    }) + 'PopupController';\n        }\n    }]);\n/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 16/1/11\n */\n\nangular.module('voyageone.angular.factories.selectRows', [])\n\n    // selectRowsFactory\n    .factory('selectRowsFactory', function () {\n        return function (config) {\n            var _selectRowsInfo = config ? config : {\n                selAllFlag: false,\n                currPageRows: [],// [{id: \"12345\"}], [{id: \"123456\", name: \"test1\"}]\n                selFlag:[], // [{\"12345\": true}, {\"12346\": false}]\n                selList: [] // [{id: \"12345\"}], [{id: \"123456\", name: \"test1\"}]\n            };\n\n            this.selAllFlag = function (value) {\n                return value !== undefined ? _selectRowsInfo.selAllFlag = value : _selectRowsInfo.selAllFlag;\n            };\n\n            this.clearCurrPageRows = function () {\n                _selectRowsInfo.currPageRows = [];\n            };\n\n            this.currPageRows = function (value) {\n                return value !== undefined ? _selectRowsInfo.currPageRows.push(value) : _selectRowsInfo.currPageRows;\n            };\n\n            this.selFlag = function (value) {\n                return value !== undefined ? _selectRowsInfo.selFlag.push(value) : _selectRowsInfo.selFlag;\n            };\n\n            this.selList = function (value) {\n                return value !== undefined ? _selectRowsInfo.selList.push(value) : _selectRowsInfo.selList;\n            };\n\n            this.selectRowsInfo = _selectRowsInfo;\n        }\n    });\n/**\n * @User: Edward\n * @Version: 2.0.0, 2015-12-09\n */\n\nangular.module('voyageone.angular.factories.vpagination', [])\n    .factory('vpagination', function () {\n\n        /**\n         * 创建一个分页服务\n         * @param {{ curr: number, size: number, total: number, fetch: function }} config 配置\n         */\n        return function (config) {\n\n            var _pages, _lastTotal = 0, _showPages = [];\n\n            /**\n             * 返回总件数\n             * @returns {*}\n             */\n            this.getTotal = function () {\n                return config.total;\n            };\n\n            /**\n             * 返回当前页的开始和结束号\n             * @returns {{start: number, end: number}}\n             */\n            this.getCurr = function () {\n                return {\n                    pageNo: curr(),\n                    start: getCurrStartItems(),\n                    end: getCurrEndItems(),\n                    isFirst: isFirst(),\n                    isLast: isLast(),\n                    pages: createShowPages(),\n                    isShowStart: isShowStart(),\n                    isShowEnd: isShowEnd()\n                }\n            };\n\n            // 跳转到指定页\n            this.goPage = load;\n            // 返回总页数\n            this.getPageCount = getPages;\n            // 是否是当前页\n            this.isCurr = isCurr;\n\n            /**\n             * 跳转到指定页\n             * @param {number} page 页号\n             */\n            function load(page) {\n                page = page || config.curr;\n\n                if (page < 1 || page > getPages() || isCurr(page)) return;\n\n                config.curr = page;\n\n                config.fetch(page, config.size);\n            }\n\n            /**\n             * 初始化page列表\n             * @returns {Array}\n             */\n            function createShowPages () {\n\n                var minPage, maxPage, _showPages= [];\n                if (config.curr < config.showPageNo) {\n                    minPage = 1;\n                    if(_pages <= config.showPageNo) maxPage = _pages;\n                    else maxPage = config.showPageNo;\n                } else if (config.curr + 2 > _pages) {\n                    minPage = _pages + 1 - config.showPageNo;\n                    maxPage = _pages;\n                } else {\n                    minPage = config.curr + 3 - config.showPageNo;\n                    maxPage = config.curr + 2;\n                }\n\n                // 按照指定数量创建按钮\n                for (var i =  minPage; i <= maxPage; i++) {\n                    //scope.pages.push({num: 1, active: \"\", show: false});\n                    _showPages.push(i);\n                }\n\n                return _showPages;\n            }\n\n            /**\n             * 获取当前总页数\n             * @returns {number}\n             */\n            function getPages() {\n                if (_lastTotal != config.total) {\n                    _pages = parseInt(config.total / config.size) + ((config.total % config.size) > 0 ? 1 : 0);\n                    _lastTotal = config.total;\n                }\n                return _pages;\n            }\n\n            /**\n             * 返回当前页的起始号\n             * @returns {number}\n             */\n            function getCurrStartItems() {\n                return (config.curr - 1) * config.size + 1\n            }\n\n            /**\n             * 返回当前页的结束号\n             * @returns {number}\n             */\n            function getCurrEndItems() {\n                var currEndItems = config.curr * config.size;\n                return currEndItems <= config.total ? currEndItems : config.total;\n\n            }\n\n            /**\n             * 是否是最后一页\n             * @returns {boolean}\n             */\n            function isLast() {\n                return config.curr == getPages();\n            }\n\n            /**\n             * 是否是第一页\n             * @returns {boolean}\n             */\n            function isFirst() {\n                return config.curr == 1;\n            }\n\n            /**\n             * 是否是当前页\n             * @param page 页码\n             * @returns {boolean}\n             */\n            function isCurr(page) {\n                return config.curr == page;\n            }\n\n            function curr() {\n                return config.curr;\n            }\n\n            /**\n             * 是否显示开始...项目\n             * @returns {boolean}\n             */\n            function isShowStart () {\n                _showPages = createShowPages();\n                return _showPages[0] > 1\n            }\n\n            /**\n             * 是否显示结束...项目\n             * @returns {boolean}\n             */\n            function isShowEnd () {\n                _showPages = createShowPages();\n                return _showPages[_showPages.length - 1] < _pages;\n            }\n\n        };\n    });\n/**\n * @Date:    2015-11-16 18:48:29\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\n$Ajax.$inject = [\"$http\", \"blockUI\", \"$q\"];\nAjaxService.$inject = [\"$q\", \"$ajax\", \"messageService\"];\nangular.module('voyageone.angular.services.ajax', [])\n  .service('$ajax', $Ajax)\n  .service('ajaxService', AjaxService);\n\nfunction $Ajax($http, blockUI, $q) {\n  this.$http = $http;\n  this.blockUI = blockUI;\n  this.$q = $q;\n}\n$Ajax.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n  this.$http.post(url, data).then(function (response) {\n    var res = response.data;\n    if (!res) {\n      alert('相应结果不存在?????');\n      defer.reject(null);\n      return;\n    }\n    if (res.message || res.code) {\n      defer.reject(res);\n      return;\n    }\n    defer.resolve(res);\n  }, function (response) {\n    defer.reject(null, response);\n  });\n  return defer.promise;\n};\n\nfunction AjaxService($q, $ajax, messageService) {\n  this.$q = $q;\n  this.$ajax = $ajax;\n  this.messageService = messageService;\n}\nAjaxService.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n\n  this.$ajax.post(url, data).then(function(res) {\n    // 成功\n    defer.resolve(res);\n    return res;\n  }, (function (_this) {\n    // 失败\n    return function(res) {\n      _this.messageService.show(res);\n      defer.reject(res);\n      return res;\n    };\n  })(this));\n\n  return defer.promise;\n};\n/**\n * @Date:    2015-11-16 20:30:37\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nCookieService.$inject = [\"$cookieStore\"];\nangular.module('voyageone.angular.services.cookie', [])\n    .service('cookieService', CookieService);\n\nvar keys = {\n    language: 'voyageone.user.language',\n    company: 'voyageone.user.company',\n    channel: 'voyageone.user.channel',\n    application: \"voyageone.user.application\"\n};\n\nfunction gentProps(key) {\n    return function (val) {\n        if (arguments.length === 1) {\n            return this.set(key, val);\n        } else if (arguments.length > 1) {\n            return this.set(key, arguments);\n        }\n        return this.get(key);\n    };\n}\n\nfunction CookieService($cookieStore) {\n    this.$cookieStore = $cookieStore;\n}\n\nCookieService.prototype.get = function (key) {\n    var result = this.$cookieStore.get(key);\n    return result == undefined || result == null ? \"\" : this.$cookieStore.get(key);\n};\n\nCookieService.prototype.set = function (key, value) {\n    return this.$cookieStore.put(key, value);\n};\n\nCookieService.prototype.language = gentProps(keys.language);\n\nCookieService.prototype.company = gentProps(keys.company);\n\nCookieService.prototype.channel = gentProps(keys.channel);\n\nCookieService.prototype.application = gentProps(keys.application);\n\nCookieService.prototype.removeAll = function () {\n    this.$cookieStore.remove(keys.language);\n    this.$cookieStore.remove(keys.company);\n    this.$cookieStore.remove(keys.channel);\n    this.$cookieStore.remove(keys.application);\n};\n\n/**\n * 对后台的信息进行自动处理\n * @Date:    2015-11-19 14:47:23\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nMessageService.$inject = [\"alert\", \"confirm\", \"notify\"];\nangular.module('voyageone.angular.services.message', [])\n  .service('messageService', MessageService);\n\n// 同步,DisplayType 枚举\nvar DISPLAY_TYPES = {\n  /**\n   * 弹出提示\n   */\n  ALERT: 1,\n  /**\n   * 顶端弹出自动关闭\n   */\n  NOTIFY: 2,\n  /**\n   * 右下弹出自动关闭\n   */\n  POP: 3,\n  /**\n   * 用户自定义处理\n   */\n  CUSTOM: 4\n};\n\nfunction MessageService(alert, confirm, notify) {\n  this.alert = alert;\n  this.confirm = confirm;\n  this.notify = notify;\n}\n\nMessageService.prototype = {\n  /**\n   * 根据类型自动显示信息\n   * @param {{displayType:Number, message:String}} res\n   */\n  show: function(res) {\n\n    var displayType = res.displayType;\n    var message = res.message;\n\n    switch (displayType) {\n      case DISPLAY_TYPES.ALERT:\n        this.alert(message);\n        break;\n      case DISPLAY_TYPES.NOTIFY:\n        this.notify(message);\n        break;\n      case DISPLAY_TYPES.POP:\n        this.notify({message: message, position: 'right bottom'});\n        break;\n    }\n  }\n};\n/**\n * @Date:    2015-11-19 14:26:43\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nPermissionService.$inject = [\"$rootScope\"];\nangular.module('voyageone.angular.services.permission', [])\n  .service('permissionService', PermissionService);\n\nfunction PermissionService($rootScope) {\n  this.$rootScope = $rootScope;\n  this.permissions = [];\n}\n\nPermissionService.prototype = {\n  /**\n   * set the action permissions.\n   * @param permissions\n   */\n  setPermissions: function(permissions) {\n    this.permissions = permissions;\n    this.$rootScope.$broadcast('permissionsChanged');\n  },\n  /**\n   * check the permission has been in action permissions.\n   * @param permission\n   * @returns {boolean|*}\n   */\n  has: function(permission) {\n    return _.contains(this.permissions, permission.trim());\n  }\n};\n\n/**\n * @Date:    2015-11-19 14:35:25\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nTranslateService.$inject = [\"$translate\"];\nangular.module('voyageone.angular.services.translate', [])\n  .service('translateService', TranslateService);\n\nfunction TranslateService($translate) {\n  this.$translate = $translate;\n}\n\nTranslateService.prototype = {\n  languages: {\n    en: \"en\",\n    zh: \"zh\"\n  },\n  /**\n   * set the web side language type.\n   * @param key\n   */\n  setLanguage: function(language) {\n    if (!_.contains(this.languages, language)) {\n      language = this.getBrowserLanguage();\n    }\n    this.$translate.use(language);\n    return language;\n  },\n  /**\n   * get the browser language type.\n   * @returns {string}\n   */\n  getBrowserLanguage: function() {\n    var currentLang = navigator.language;\n    if (!currentLang)\n      currentLang = navigator.browserLanguage;\n    return currentLang.substr(0, 2);\n  }\n};\n\n/**\n * @description\n *\n * 自动创建基于地址定义的数据访问 service.\n * 传入的定义必须是 {object}, 并且至少有 root 属性\n *\n * @User: Jonas\n * @Date: 2015-12-10 19:32:37\n * @Version: 2.0.0\n */\n\n//@Skip\nangular.module('voyageone.angular.vresources', [])\n  .provider('$vresources', [\"$provide\", function ($provide) {\n\n    /**\n     * @description 构建请求地址的 url\n     * @param {string} root 请求的根路径\n     * @param {string} action 请求的名称\n     * @returns {string}\n     */\n    function getActionUrl(root, action) {\n      return root + (root.lastIndexOf('/') === root.length - 1 ? '' : '/') + action;\n    }\n\n    /**\n     * 闭包声明一个数据访问的 Service\n     * @param {string} name Service 的名称\n     * @param {object} actions 方法和地址定义\n     * @param {AjaxService} ajaxService 封装的 ajax 发送服务\n     */\n    function closureDataService(name, actions, ajaxService) {\n      /**\n       * @description 与 actions 一同闭包的构造函数\n       * @constructor\n       */\n      function DataResource() {\n        if (!actions) {\n          return;\n        }\n\n        if (typeof actions !== \"object\") {\n          console.log(\"Failed to new DataResource: [\" + actions + \"] is not a object\");\n          return;\n        }\n\n        if (!actions.root) {\n          console.log(\"Failed to new DataResource: no root prop\" + (JSON && JSON.stringify ? \": \" + JSON.stringify(actions) : \"\"));\n          return;\n        }\n\n        // 遍历配置\n        for (var name in actions) {\n          // 不对 root 进行创建\n          if (name === \"root\") continue;\n          // 额外的检查\n          if (actions.hasOwnProperty(name)) {\n            // 闭包创建函数\n            this[name] = (function (actionUrl) {\n              return function (data) {\n                return ajaxService.post(actionUrl, data);\n              };\n            })(getActionUrl(actions.root, actions[name]));\n          }\n        }\n      }\n\n      $provide.service(name, DataResource);\n    }\n\n    this.$get = [\"ajaxService\", function (ajaxService) {\n\n      return {\n        register: function (name, actions) {\n\n          if (!actions) return;\n\n          if (typeof actions !== 'object') return;\n\n          // 如果有 root 这个属性,就创建 service\n          if (actions.root) {\n            closureDataService(name, actions, ajaxService);\n            return;\n          }\n\n          // 否则继续访问子属性\n          for (var childName in actions) {\n            // 额外的检查\n            if (actions.hasOwnProperty(childName)) {\n\n              this.register(childName, actions[childName]);\n            }\n          }\n        }\n      };\n    }];\n  }])\n\n  .run([\"$vresources\", \"$actions\", function ($vresources, $actions) {\n    $vresources.register(null, $actions);\n  }]);return angular.module(\"voyageone.angular\",[\n\"voyageone.angular.controllers.datePicker\",\n\"voyageone.angular.controllers.selectRows\",\n\"voyageone.angular.controllers.showPopover\",\n\"voyageone.angular.directives.dateModelFormat\",\n\"voyageone.angular.directives.enterClick\",\n\"voyageone.angular.directives.fileStyle\",\n\"voyageone.angular.directives.ifNoRows\",\n\"voyageone.angular.directives.uiNav\",\n\"voyageone.angular.directives.schema\",\n\"voyageone.angular.directives.voption\",\n\"voyageone.angular.directives.vpagination\",\n\"voyageone.angular.directives.validator\",\n\"voyageone.angular.factories.dialogs\",\n\"voyageone.angular.factories.interceptor\",\n\"voyageone.angular.factories.notify\",\n\"voyageone.angular.factories.pppAutoImpl\",\n\"voyageone.angular.factories.selectRows\",\n\"voyageone.angular.factories.vpagination\",\n\"voyageone.angular.services.ajax\",\n\"voyageone.angular.services.cookie\",\n\"voyageone.angular.services.message\",\n\"voyageone.angular.services.permission\",\n\"voyageone.angular.services.translate\"\n]);});","/**\n * @Description:\n * 弹出日期控件\n * @User:    Edward\n * @Version: 0.2.0, 2015-10-10\n */\n\nangular.module('voyageone.angular.controllers.datePicker', [])\n    .controller('datePickerCtrl', function ($scope) {\n        var vm = this;\n\n        vm.formats = ['yyyy-MM-dd', 'yyyy-MM-dd HH:mm:ss'];\n\n        $scope.formatDate = vm.formats[0];\n        $scope.formatDateTime = vm.formats[1];\n\n        $scope.open = open;\n\n        function open($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n\n            $scope.opened = true;\n        }\n    });","/**\n * @Description:\n * select tables items\n * @User: linanbin\n * @Version: 2.0.0, 15/12/16\n */\n\nangular.module('voyageone.angular.controllers.selectRows', [])\n    .controller('selectRowsCtrl', function ($scope) {\n\n        $scope.selectAll = selectAll;\n        $scope.selectOne = selectOne;\n        $scope.isAllSelected = isAllSelected;\n\n        /**\n         * 全部选中当前页数据\n         * @param objectList\n         */\n        function selectAll(objectList, id) {\n\n            objectList.selAllFlag = !objectList.selAllFlag;\n            if(!id){\n                id=\"id\";\n            }\n\n            // 循环处理全选中的数据\n            angular.forEach(objectList.currPageRows, function (object) {\n\n                // 单签页面所有产品选中flag被标示\n                objectList.selFlag[object[id]] = objectList.selAllFlag;\n\n                if (objectList.hasOwnProperty('selList')) {\n\n                    var tempList = _.pluck(objectList.selList, id);\n                    if (objectList.selAllFlag && tempList.indexOf(object[id]) < 0) {\n                        objectList.selList.push(object);\n                    } else if (!objectList.selAllFlag && tempList.indexOf(object[id]) > -1) {\n                        objectList.selList.splice(tempList.indexOf(object[id]), 1);\n                    }\n                }\n            });\n        }\n\n        /**\n         * 选中单条数据\n         * @param currentId\n         * @param objectList\n         */\n        function selectOne(currentId, objectList, id) {\n            if(!id){\n                id=\"id\";\n            }\n            if (objectList.hasOwnProperty('selList')) {\n\n                angular.forEach(objectList.currPageRows, function(object) {\n\n                    var tempList = _.pluck(objectList.selList, id);\n                    if (_.isEqual(object[id], currentId)) {\n                        if (tempList.indexOf(object[id]) > -1) {\n                            objectList.selList.splice(tempList.indexOf(object[id]), 1);\n                        } else {\n                            objectList.selList.push(object);\n                        }\n                    }\n                });\n            }\n\n            objectList.selAllFlag = true;\n            tempList = _.pluck(objectList.selList, id);\n            angular.forEach(objectList.currPageRows, function(object) {\n                if (tempList.indexOf(object[id]) == -1) {\n                    objectList.selAllFlag = false;\n                }\n            })\n        }\n\n        /**\n         * 判断当前页是否为全选中\n         * @param objectList\n         * @param id\n         */\n        function isAllSelected (objectList, id) {\n            if(!id){\n                id=\"id\";\n            }\n\n            if (objectList != undefined) {\n\n                objectList.selAllFlag = true;\n                var tempList = _.pluck(objectList.selList, id);\n                angular.forEach(objectList.currPageRows, function(object) {\n                    if (tempList.indexOf(object[id]) == -1) {\n                        objectList.selAllFlag = false;\n                    }\n                });\n                return objectList.selAllFlag;\n            }\n\n            return false;\n        }\n    });","/**\n * @Description:\n * 显示html的popover的共同方法\n * @User: linanbin\n * @Version: 2.0.0, 15/12/14\n */\n\nangular.module('voyageone.angular.controllers.showPopover', [])\n    .controller('showPopoverCtrl', function ($scope) {\n\n        $scope.showInfo = showInfo;\n\n        function showInfo(values) {\n            var tempHtml = \"\";\n\n            angular.forEach(values, function (data, index) {\n                tempHtml += data;\n                if (index !== values.length) {\n                    tempHtml += \"<br>\";\n                }\n            });\n            return tempHtml\n        }\n    });\n","/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.dateModelFormat', [])\n    .directive('dateModelFormat', function ($filter) {\n        return {\n            restrict: \"A\",\n            require: 'ngModel',\n            link: function (scope, elem, attrs, ngModel) {\n                ngModel.$parsers.push(function (viewValue) {\n                    return $filter('date')(viewValue, attrs.dateModelFormat || 'yyyy-MM-dd HH:mm:ss');\n                });\n            }\n        };\n    });\n","/**\n * @Date: 2015-11-19 15:13:02\n * @User: Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.directives.enterClick', [])\n    .directive('enterClick', function () {\n        return {\n            restrict: \"A\",\n            link: function (scope, elem, attr) {\n\n                angular.element(elem).on('keyup', function (e) {\n\n                    if (e.keyCode !== 13) return;\n\n                    var selectExp = attr.enterClick;\n\n                    var targetElem, handler = function () {\n                        targetElem.triggerHandler('click');\n                    };\n\n                    try {\n                        targetElem = document.querySelector(selectExp);\n                    } catch (e) {\n                        targetElem = null;\n                    }\n\n                    if (!targetElem) {\n                        // 如果取不到元素，则尝试作为表达式执行\n                        handler = function () {\n                            scope.$eval(selectExp);\n                        };\n                    } else {\n                        targetElem = angular.element(targetElem);\n                        // 如果元素存在，但是是禁用状态的，放弃执行\n                        if (targetElem.attr(\"disabled\")) return;\n                    }\n\n                    handler();\n                });\n            }\n        };\n    });\n","/**\n * @Description:\n * 引入对上传框插件 fileStyle 的指令支持\n * @Date:    2015-11-19 17:35:22\n * @User:    Jonas\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.directives.fileStyle', [])\n  .directive('fileStyle', function () {\n    return {\n      restrict: 'A',\n      controller: [\"$scope\", \"$element\", function ($scope, $element) {\n        var options = $element.data();\n        // old usage support\n        options.classInput = $element.data('classinput') || options.classInput;\n        if ($element.filestyle) {\n          $element.filestyle(options);\n        }\n      }]\n    };\n  });","/**\n * @Description:\n * table中无数据范围的数据\n * @User: linanbin\n * @Version: 2.0.0, 15/12/11\n */\n\nangular.module('voyageone.angular.directives.ifNoRows', [])\n    .directive('ifNoRows', function ($templateCache, $compile) {\n\n        var tempNoDataKey = \"voyageone.angular.directives.ifNoRows.tpl.html\";\n\n        // 没有数据显示警告\n        if (!$templateCache.get(tempNoDataKey)) {\n            $templateCache.put(tempNoDataKey,\n            '<div class=\"text-center text-hs\" id=\"noData\">\\n' +\n            '    <h4 class=\"text-vo\"><i class=\"icon fa fa-warning\"></i>&nbsp;{{\\'TXT_ALERT\\' | translate}}</h4>\\n' +\n            '{{\\'TXT_MSG_NO_DATE\\' | translate}}' +\n            '</dv>');\n        }\n\n        return {\n            restrict: \"A\",\n            replace: false,\n            scope: {\n                $$data: \"@ifNoRows\"\n            },\n            link: function (scope, element) {\n\n                scope.$parent.$watch(scope.$$data, function () {\n\n                    // 如果数据不存在则显示警告信息\n                    if(scope.$parent.$eval(scope.$$data)  == 0) {\n                        element.find(\"#noData\").remove();\n                        element.append($compile($templateCache.get(tempNoDataKey))(scope));\n                    } else {\n                        element.find(\"#noData\").remove();\n                    }\n                })\n            }\n        };\n    });\n","/**\n * @Description:\n * 用于菜单目录二级展开\n * @User:    Jonas\n * @Version: 0.2.0, 2015-12-07\n */\n\nangular.module('voyageone.angular.directives.uiNav', [])\n    .directive('uiNav', function () {\n\n        return {\n            restrict: 'AC',\n            link: function(scope, el) {\n                var _window = $(window),\n                    _mb = 768,\n                    wrap = $('.app-aside'),\n                    next,\n                    backdrop = '.dropdown-backdrop';\n                // unfolded\n                el.on('click', 'a', function(e) {\n                    next && next.trigger('mouseleave.nav');\n                    var _this = $(this);\n                    _this.parent().siblings( \".active\" ).toggleClass('active');\n                    _this.next().is('ul') &&  _this.parent().toggleClass('active') &&  e.preventDefault();\n                    // mobile\n                    _this.next().is('ul') || ( ( _window.width() < _mb ) && $('.app-aside').removeClass('show off-screen') );\n                });\n\n                // folded & fixed\n                el.on('mouseenter', 'a', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                    if ( !$('.app-aside-fixed.app-aside-folded').length || ( _window.width() < _mb ) || $('.app-aside-dock').length) return;\n                    var _this = $(e.target)\n                        , top\n                        , w_h = $(window).height()\n                        , offset = 50\n                        , min = 150;\n\n                    !_this.is('a') && (_this = _this.closest('a'));\n                    if( _this.next().is('ul') ){\n                        next = _this.next();\n                    }else{\n                        return;\n                    }\n\n                    _this.parent().addClass('active');\n                    top = _this.parent().position().top + offset;\n                    next.css('top', top);\n                    if( top + next.height() > w_h ){\n                        next.css('bottom', 0);\n                    }\n                    if(top + min > w_h){\n                        next.css('bottom', w_h - top - offset).css('top', 'auto');\n                    }\n                    next.appendTo(wrap);\n\n                    next.on('mouseleave.nav', function(e){\n                        $(backdrop).remove();\n                        next.appendTo(_this.parent());\n                        next.off('mouseleave.nav').css('top', 'auto').css('bottom', 'auto');\n                        _this.parent().removeClass('active');\n                    });\n\n                    $('.smart').length && $('<div class=\"dropdown-backdrop\"/>').insertAfter('.app-aside').on('click', function(next){\n                        next && next.trigger('mouseleave.nav');\n                    });\n\n                });\n\n                wrap.on('mouseleave', function(e){\n                    next && next.trigger('mouseleave.nav');\n                    $('> .nav', wrap).remove();\n                });\n            }\n        };\n    });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/24\n */\n\n(function () {\n\n    var fieldTypes = {\n        INPUT: \"INPUT\",\n        DATE: \"DATE\",\n        DATETIME: \"DATETIME\",\n        TEXTAREA: \"TEXTAREA\",\n        SINGLE_CHECK: \"SINGLECHECK\",// 在complex中的显示select,以外的默认显示singlecheck,如果用户觉得select显示不方便,就将该field的type改成radio\n        RADIO: \"RADIO\",\n        MULTI_INPUT: \"MULTIINPUT\", // 没有被使用\n        MULTI_CHECK: \"MULTICHECK\",\n        COMPLEX: \"COMPLEX\", // TODO\n        MULTI_COMPLEX: \"MULTICOMPLEX\",\n        LABEL: \"LABEL\"  // 可以不显示\n    }, ruleTypes = {\n        VALUE_TYPE_RULE: \"valueTypeRule\",\n        REQUIRED_RULE: \"requiredRule\",\n        DISABLE_RULE: \"disableRule\",\n        READ_ONLY_RULE: \"readOnlyRule\",\n        REGEX_RULE: \"regexRule\",\n        SET_RULE: \"setRule\", // TODO 暂时不知道怎么用\n        TIP_RULE: \"tipRule\", // TODO 不需要处理\n        DEV_TIP_RULE: \"devTipRule\", // 不需要处理\n        MIN_LENGTH_RULE: \"minLengthRule\",\n        MAX_LENGTH_RULE: \"maxLengthRule\",\n        MIN_VALUE_RULE: \"minValueRule\",\n        MAX_VALUE_RULE: \"maxValueRule\",\n        MIN_INPUT_NUM_RULE: \"minInputNumRule\",\n        MAX_INPUT_NUM_RULE: \"maxInputNumRule\",\n        MIN_DECIMAL_DIGITS_RULE: \"minDecimalDigitsRule\", // TODO\n        MAX_DECIMAL_DIGITS_RULE: \"maxDecimalDigitsRule\", // TODO\n        MIN_TARGET_SIZE_RULE: \"minTargetSizeRule\", // TODO\n        MAX_TARGET_SIZE_RULE: \"maxTargetSizeRule\", // TODO\n        MIN_IMAGE_SIZE_RULE: \"minImageSizeRule\", // TODO\n        MAX_IMAGE_SIZE_RULE: \"maxImageSizeRule\" // TODO\n    }, valueTypes = {\n        TEXT: \"text\",\n        DECIMAL: \"decimal\",\n        INTEGER: \"integer\",\n        LONG: \"long\",\n        DATE: \"date\",\n        TIME: \"time\",\n        URL: \"url\",\n        TEXTAREA: \"textarea\",\n        HTML: \"html\"\n    }, templates = {\n        header: '<div class=\"form-group\">' +\n        '<label class=\"col-sm-2 control-label\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" ng-bind=\"$$data.name\"></label>' +\n        '<div class=\"col-sm-8\" ng-class=\"{\\'modal-open\\' : showHtmlData.isMultiComplex, \\'hierarchy_main\\': showHtmlData.isComplex}\" ng-transclude></div>' +\n        '<div class=\"col-sm-2\" ng-if=\"showHtmlData.isMultiComplex\"><button class=\"btn btn-success\" ng-click=\"addField($$data)\"><i class=\"fa fa-plus\"></i>{{\\'BTN_ADD\\' | translate}}</button></div>' +\n        '<div class=\"row\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><div class=\"col-sm-8 col-sm-offset-2 text-warnings\"><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div></div>' +\n        '</div>',\n        label: '<input style=\"min-width: 150px; max-width: 250px;\" type=\"text\" readonly ng-model=\"vm.$$data.value\" class=\"form-control\">',\n        input: '<input style=\"min-width: 150px; max-width: 250px;\" ng-model=\"vm.$$data.value\" class=\"form-control\" %replaceInfo%>',\n        date: '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input %replaceInfo% type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDate}}\" ng-model=\"$parent.vm.$$data.value\" date-model-format=\"{{formatDate}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button %replaceInfo% type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>',\n        datetime: '<div class=\"input-group\" style=\"width: 180px;\" ng-controller=\"datePickerCtrl\"><input %replaceInfo% type=\"text\" class=\"form-control\" datepicker-popup=\"{{formatDateTime}}\" ng-model=\"$parent.vm.$$data.value\" date-model-format=\"{{formatDateTime}}\" is-open=\"opened\" datepicker-options=\"dateOptions\" close-text=\"Close\" /><span class=\"input-group-btn\"><button %replaceInfo% type=\"button\" class=\"btn btn-default\" ng-click=\"open($event)\"><i class=\"glyphicon glyphicon-calendar\"></i></button></span></div>',\n        textarea: '<textarea style=\"min-width: 150px; max-width: 650px;\" class=\"form-control no-resize\" ng-model=\"vm.$$data.value\" rows=\"{{showHtmlData.rowNum}}\" %replaceInfo%></textarea>',\n        select: '<select style=\"min-width: 150px; max-width: 250px;\" %replaceInfo% class=\"form-control\" ng-model=\"vm.$$data.value.value\" ng-options=\"option.value as option.displayName for option in vm.$$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>',\n        radio: '<label class=\"checkbox-inline c-radio\" ng-repeat=\"option in vm.$$data.options\"><input name=\"{{vm.$$data.id}}\" type=\"radio\" ng-value=\"option.value\" ng-model=\"vm.$$data.value.value\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>',\n        checkbox: '<label class=\"checkbox-inline c-checkbox\" ng-repeat=\"option in vm.$$data.options\"><input type=\"checkbox\" ng-value=\"option.value\" ng-click=\"checkboxValue(option.value)\" ng-checked=\"isSelected(option.value)\"><span class=\"fa fa-check\"></span> {{option.displayName}}</label>',\n        multiComplex: '<table class=\"table text-center\">' +\n        '<thead><tr>' +\n        '<th ng-repeat=\"field in vm.$$data.fields\" ng-class=\"{\\'vo_reqfield\\': showHtmlData.isRequired}\" class=\"text-center\" style=\"min-width: 180px;\">{{field.name}}</th>' +\n        '<th ng-if=\"!showHtmlData.notShowEdit\" style=\"min-width: 60px;\" class=\"text-center\" translate=\"TXT_ACTION\"></th>' +\n        '</tr></thead>' +\n        '<tbody><tr ng-repeat=\"value in vm.$$data.complexValues\">' +\n        '<td class=\"text-left\" ng-repeat=\"field in value.fieldMap\"><div class=\"tableLayer\"><p ng-if=\"field.type != \\'COMPLEX\\'\">&nbsp;</p><p><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></p></div></td>' +\n        '<td ng-if=\"!showHtmlData.notShowEdit\" style=\"min-width: 60px;\"><button title=\"{\\'BTN_DELETE\\' | translate}\" class=\"btn btn-danger btn-xs\" ng-click=\"delField($index)\"><i class=\"fa  fa-trash-o\"></i></button></td>' +\n        '</tr></tbody>' +\n        '</table>',\n        complex: '<schema-header ng-repeat=\"field in vm.$$data.fields\" data=\"field\"><schema-item data=\"field\"></schema-item></schema-header>',\n        multi_in_complex: '<div ng-repeat=\"field in vm.$$data.fields\"><p ng-bind=\"field.name\"></p><p><schema-item data=\"field\" hastip=\"true\" complex=\"true\"></schema-item></p></div>',\n        multiComplex_tip: '<div class=\"text-warnings\" ng-repeat=\"tipMsg in showHtmlData.tipMsg\"><br><i class=\"icon fa fa-bell-o\"></i>&nbsp;{{tipMsg}}</div>'\n    };\n\n    var SchemaHeader, Schema;\n\n    SchemaHeader = function (config) {\n        this.config = config || {\n                isRequired: false,\n                isMultiComplex: false,\n                isComplex: false,\n                tipMsg: []\n            };\n    };\n\n    SchemaHeader.prototype = {\n        isRequired: function (value) {\n            return value !== undefined ? this.config.isRequired = value : this.config.isRequired;\n        },\n        isComplex: function (value) {\n            return value !== undefined ? this.config.isComplex = value : this.config.isComplex;\n        },\n        isMultiComplex: function (value) {\n            return value !== undefined ? this.config.isMultiComplex = value : this.config.isMultiComplex;\n        },\n        tipMsg: function (value) {\n            return value !== undefined ? this.config.tipMsg.push(value) : this.config.tipMsg;\n        }\n    };\n\n    Schema = function (config) {\n        this.config = config || {\n                type: null,\n                name: null,\n                rowNum: null,\n                isRequired: false,\n                checkValues: [],\n                tipMsg: [],\n                html: [],\n                notShowEdit: true\n            };\n    };\n\n    Schema.prototype = {\n        type: function (value) {\n            return value !== undefined ? this.config.type = value : this.config.type;\n        },\n        name: function (value) {\n            return value !== undefined ? this.config.name = value : this.config.name;\n        },\n        html: function (value) {\n            return value !== undefined ? this.config.html.push(value) : this.config.html.join(\" \");\n        },\n        isRequired: function (value) {\n            return value !== undefined ? this.config.isRequired = value : this.config.isRequired;\n        },\n        rowNum: function (value) {\n            return value !== undefined ? this.config.rowNum = value : this.config.rowNum;\n        },\n        tipMsg: function (value) {\n            return value !== undefined ? this.config.tipMsg.push(value) : this.config.tipMsg;\n        },\n        checkValues: function (value) {\n            return value !== undefined ? this.config.checkValues.push(value) : this.config.checkValues;\n        },\n        notShowEdit: function (value) {\n            return value !== undefined ? this.config.notShowEdit = value : this.config.notShowEdit;\n        }\n    };\n\n    angular.module('voyageone.angular.directives.schema', [])\n\n        .directive('schemaHeader', function () {\n\n            return {\n                restrict: \"E\",\n                replace: true,\n                transclude: true,\n                template: templates.header,\n                scope: {\n                    $$data: \"=data\"\n                },\n                link: function (scope) {\n\n                    var header = new SchemaHeader();\n                    var field = scope.$$data;\n\n                    // 标记特殊类型的 Field\n                    switch (field.type) {\n                        case fieldTypes.MULTI_COMPLEX:\n                            header.isMultiComplex(true);\n                            break;\n                        case fieldTypes.COMPLEX:\n                            header.isComplex(true);\n                            break;\n                    }\n\n                    // 标记提供了显示支持的规则\n                    angular.forEach(field.rules, function (rule) {\n                        switch (rule.name) {\n                            case ruleTypes.REQUIRED_RULE:\n                                header.isRequired(\"true\" == rule.value);\n                                break;\n                            case ruleTypes.TIP_RULE:\n                                header.tipMsg(rule.value);\n                                break;\n                        }\n                    });\n\n                    scope.showHtmlData = angular.copy(header.config);\n\n                    /**\n                     * 设置multi complex添加一条新记录\n                     * @param data\n                     */\n                    scope.addField = function (data) {\n                        var newFieldMap = {};\n                        angular.forEach(data.fields, function (field) {\n                            newFieldMap[field.id] = field;\n                        });\n\n                        data.complexValues.push({fieldMap: angular.copy(newFieldMap)});\n                    };\n\n                }\n            };\n        })\n\n        .directive('schemaItem', function ($compile) {\n\n            return {\n                restrict: \"E\",\n                require: ['^?form'],\n                bindToController: true,\n                controllerAs: \"vm\",\n                scope: {\n                    $$data: \"=data\",\n                    $$hastip: \"=hastip\",\n                    $$complex: \"=complex\",\n                    $$notShowEdit: \"=notShowEdit\"\n                },\n                controller: function () {\n                },\n                link: function (scope, element) {\n\n                    // 监视配置变动\n                    scope.$watch('vm.$$data', refresh);\n\n                    scope.$watch('schemaForm.$valid', function ($valid) {\n                        scope.vm.$$data.$valid = $valid;\n                    });\n\n                    function refresh() {\n\n                        var schema = new Schema();\n                        var field = scope.vm.$$data;\n\n                        // 设置空间name\n                        schema.name(field.id);\n\n                        // 设置edit是否显示\n                        schema.notShowEdit(scope.vm.$$notShowEdit == undefined ? false : scope.vm.$$notShowEdit);\n\n                        schema.type(field.type);\n\n                        switch (field.type) {\n                            case fieldTypes.RADIO:\n                                if (scope.vm.$$complex)\n                                    schema.type(fieldTypes.SINGLE_CHECK);\n                                break;\n                            case fieldTypes.MULTI_CHECK:\n                                _setCheckValues(field.values);\n                                break;\n                            case fieldTypes.MULTI_COMPLEX:\n                                field.complexValues = _resetMultiComplex(field);\n                                break;\n                            case fieldTypes.COMPLEX:\n                                _resetComplex(field);\n                                break;\n                        }\n\n                        angular.forEach(field.rules, function (rule) {\n                            switch (rule.name) {\n                                case ruleTypes.VALUE_TYPE_RULE:\n                                    _valueTypeRule(rule);\n                                    break;\n                                case ruleTypes.REQUIRED_RULE:\n                                    _requiredRule(rule);\n                                    break;\n                                case ruleTypes.DISABLE_RULE:\n                                    _disableRule(rule);\n                                    break;\n                                case ruleTypes.READ_ONLY_RULE:\n                                    _readOnlyRule(rule);\n                                    break;\n                                case ruleTypes.REGEX_RULE:\n                                    _regexRule(rule);\n                                    break;\n                                case ruleTypes.TIP_RULE:\n                                    _tipRule(rule);\n                                    break;\n                                case ruleTypes.MIN_LENGTH_RULE:\n                                    _minLengthRule(rule);\n                                    break;\n                                case ruleTypes.MAX_LENGTH_RULE:\n                                    _maxLengthRule(rule);\n                                    break;\n                                case ruleTypes.MIN_VALUE_RULE:\n                                    _minValueRule(rule);\n                                    break;\n                                case ruleTypes.MAX_VALUE_RULE:\n                                    _maxValueRule(rule);\n                                    break;\n                                case ruleTypes.MIN_INPUT_NUM_RULE:\n                                    _minInputNumRule(rule);\n                                    break;\n                                case ruleTypes.MAX_INPUT_NUM_RULE:\n                                    _maxInputNumRule(rule);\n                                    break;\n                            }\n                        });\n\n                        var tempHtml = \"\";\n\n                        // 拼接body\n                        switch (schema.type()) {\n                            case fieldTypes.INPUT:\n                                tempHtml = templates.input.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.DATE:\n                                tempHtml = templates.date.replace(\"%replaceInfo%\", schema.html()).replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.DATETIME:\n                                tempHtml = templates.datetime.replace(\"%replaceInfo%\", schema.html()).replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.TEXTAREA:\n                                tempHtml = templates.textarea.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.SINGLE_CHECK:\n                                tempHtml = templates.select.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.RADIO:\n                                tempHtml = templates.radio.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.MULTI_CHECK:\n                                tempHtml = templates.checkbox.replace(\"%replaceInfo%\", schema.html());\n                                break;\n                            case fieldTypes.LABEL:\n                                tempHtml = templates.label;\n                                break;\n                            case fieldTypes.MULTI_COMPLEX:\n                                tempHtml = templates.multiComplex;\n                                break;\n                            case fieldTypes.COMPLEX:\n                                tempHtml = scope.vm.$$complex ? templates.multi_in_complex : templates.complex;\n                                break;\n                        }\n\n                        // 添加规则说明\n                        if (schema.tipMsg() != null && scope.vm.$$hastip) {\n                            tempHtml += templates.multiComplex_tip;\n                        }\n\n                        // 包裹 ng-form, 用于启用 angular 的验证功能\n                        tempHtml = '<ng-form name=\"schemaForm\">' + tempHtml + '</ng-form>';\n                        // 追加错误信息的显示\n                        tempHtml += '<div ng-repeat=\"(k, v) in schemaForm.$error\">{{k}}</div>';\n\n                        scope.showHtmlData = angular.copy(schema.config);\n                        element.html($compile(tempHtml)(scope));\n\n                        /**\n                         * 设置checkbox被选中的value值处理\n                         * @param value\n                         */\n                        scope.checkboxValue = function (value) {\n                            if (_.contains(scope.showHtmlData.checkValues, value)) {\n                                scope.showHtmlData.checkValues.splice(_.indexOf(scope.showHtmlData.checkValues, value), 1);\n                            } else {\n                                scope.showHtmlData.checkValues.push(value);\n                            }\n                            field.values = [];\n                            angular.forEach(scope.showHtmlData.checkValues, function (obj) {\n                                field.values.push({id: null, value: obj});\n                            })\n                        };\n\n                        /**\n                         * 判断是否被选中\n                         * @param value\n                         */\n                        scope.isSelected = function (value) {\n                            return _.contains(scope.showHtmlData.checkValues, value)\n                        };\n\n                        /**\n                         * 设置multi complex删除该条记录\n                         * @param index\n                         */\n                        scope.delField = function (index) {\n                            field.complexValues.splice(index, 1);\n                        };\n\n                        /**\n                         * 设置checkvalues\n                         * @param values\n                         * @private\n                         */\n                        function _setCheckValues(values) {\n                            if (values != undefined && values != null) {\n                                angular.forEach(values, function (obj) {\n                                    schema.checkValues(obj.value);\n                                })\n                            }\n                        }\n\n                        /**\n                         * 重新设置multicomplex的一些属性\n                         * @param data\n                         * @private\n                         */\n                        function _resetMultiComplex(data) {\n                            var tempValues = [];\n                            angular.forEach(data.complexValues, function (value) {\n                                var tempFieldMap = {};\n                                angular.forEach(data.fields, function (field) {\n                                    var tempField = angular.copy(field);\n                                    if (value.fieldMap[field.id] != undefined) {\n                                        switch (field.type) {\n                                            case fieldTypes.INPUT:\n                                            case fieldTypes.LABEL:\n                                            case fieldTypes.DATE:\n                                            case fieldTypes.DATETIME:\n                                            case fieldTypes.TEXTAREA:\n                                            case fieldTypes.SINGLE_CHECK:\n                                            case fieldTypes.RADIO:\n                                                tempField.value = value.fieldMap[field.id].value;\n                                                break;\n                                            case fieldTypes.MULTI_INPUT:\n                                            case fieldTypes.MULTI_CHECK:\n                                                tempField.values = value.fieldMap[field.id].values;\n                                                break;\n                                            case fieldTypes.COMPLEX:\n                                                tempField.complexValue = value.fieldMap[field.id].complexValue;\n                                                break;\n                                            case fieldTypes.MULTI_COMPLEX:\n                                                tempField.complexValues = value.fieldMap[field.id].complexValues;\n                                                break;\n                                        }\n                                    }\n                                    tempFieldMap[field.id] = tempField;\n                                });\n                                tempValues.push({fieldMap: angular.copy(tempFieldMap)});\n                            });\n\n                            // 如果values为空,默认添加空白行\n                            if (_.isEmpty(data.complexValues)) {\n                                var newFieldMap = {};\n                                angular.forEach(data.fields, function (field) {\n                                    newFieldMap[field.id] = field;\n                                    //eval(\"newFieldMap.\" + field.id + \"=field\");\n                                });\n\n                                tempValues.push({fieldMap: angular.copy(newFieldMap)});\n                            }\n\n                            return tempValues;\n                        }\n\n                        /**\n                         * 重新\n                         * @param data\n                         * @private\n                         */\n                        function _resetComplex(data) {\n                            angular.forEach(data.fields, function (field) {\n                                switch (field.type) {\n                                    case fieldTypes.INPUT:\n                                    case fieldTypes.LABEL:\n                                    case fieldTypes.DATE:\n                                    case fieldTypes.DATETIME:\n                                    case fieldTypes.TEXTAREA:\n                                    case fieldTypes.SINGLE_CHECK:\n                                    case fieldTypes.RADIO:\n                                        if (!_.isEmpty(data.complexValue.fieldMap))\n                                            field.value = data.complexValue.fieldMap[field.id].value;\n                                        else\n                                            field.value = data.defaultComplexValue.fieldMap[field.id].value;\n                                        break;\n                                    case fieldTypes.MULTI_INPUT:\n                                    case fieldTypes.MULTI_CHECK:\n                                        if (!_.isEmpty(data.complexValue.fieldMap))\n                                            field.values = data.complexValue.fieldMap[field.id].values;\n                                        else\n                                            field.values = data.defaultComplexValue.fieldMap[field.id].values;\n                                        break;\n                                    case fieldTypes.COMPLEX:\n                                        if (!_.isEmpty(data.complexValue.fieldMap))\n                                            field.complexValue = data.complexValue.fieldMap[field.id].complexValue;\n                                        else\n                                            field.complexValue = data.defaultComplexValue.fieldMap[field.id].complexValue;\n                                        break;\n                                    case fieldTypes.MULTI_COMPLEX:\n                                        if (!_.isEmpty(data.complexValue.fieldMap))\n                                            field.complexValues = data.complexValue.fieldMap[field.id].complexValues;\n                                        else\n                                            field.complexValues = data.defaultComplexValue.fieldMap[field.id].complexValues;\n                                        break;\n                                }\n                            });\n                        }\n\n                        /**\n                         * 处理valueTypeRule\n                         * @param valueTypeRule\n                         * @private\n                         */\n                        function _valueTypeRule(valueTypeRule) {\n                            switch (valueTypeRule.value) {\n                                case valueTypes.TEXT:\n                                case valueTypes.DECIMAL:\n                                case valueTypes.INTEGER:\n                                case valueTypes.LONG:\n                                    schema.type(fieldTypes.INPUT);\n                                    schema.html(\"type=\\\"text\\\"\");\n                                    break;\n                                case valueTypes.DATE:\n                                    schema.type(fieldTypes.DATE);\n                                    break;\n                                case valueTypes.TIME:\n                                    schema.type(fieldTypes.DATETIME);\n                                    break;\n                                case valueTypes.URL:\n                                    schema.type(fieldTypes.INPUT);\n                                    schema.html(\"type=\\\"url\\\"\");\n                                    break;\n                                case valueTypes.TEXTAREA:\n                                    schema.type(fieldTypes.TEXTAREA);\n                                    schema.rowNum(4);\n                                    break;\n                                case valueTypes.HTML:\n                                    schema.type(fieldTypes.TEXTAREA);\n                                    schema.rowNum(10);\n                                    break;\n                            }\n                        }\n\n                        /**\n                         * 处理requiredRule\n                         * @param requiredRule\n                         * @private\n                         */\n                        function _requiredRule(requiredRule) {\n                            if (\"true\" == requiredRule.value) {\n                                schema.isRequired(true);\n                                schema.html(\"required\");\n                            }\n                        }\n\n                        /**\n                         * 处理disableRule\n                         * @param disableRule\n                         * @private\n                         */\n                        function _disableRule(disableRule) {\n                            if (\"true\" == disableRule.value\n                                && disableRule.dependGroup == null) {\n                                schema.html(\"ng-disabled=\\\"true\\\"\");\n                            }\n                        }\n\n                        /**\n                         * 处理readOnlyRule\n                         * @param readOnlyRule\n                         * @private\n                         */\n                        function _readOnlyRule(readOnlyRule) {\n                            if (\"true\" == readOnlyRule.value) {\n                                schema.html(\"readonly\");\n                            }\n                        }\n\n                        /**\n                         * 处理regexRule\n                         * @param regexRule\n                         * @private\n                         */\n                        function _regexRule(regexRule) {\n                            schema.html(\"ng-pattern=\\\"/\" + regexRule.value + \"/\\\"\");\n                        }\n\n                        /**\n                         * 处理tipRule\n                         * @param tipRule\n                         * @private\n                         */\n                        function _tipRule(tipRule) {\n                            schema.tipMsg(tipRule.value);\n                        }\n\n                        /**\n                         * 处理minLengthRule\n                         * @param minLengthRule\n                         * @private\n                         */\n                        function _minLengthRule(minLengthRule) {\n                            var value = isNaN(parseInt(minLengthRule.value)) ? 0 : minLengthRule.value;\n\n                            if (\"not include\" === minLengthRule.exProperty)\n                                value = (value > 0) ? value - 1 : 0;\n\n                            if (\"character\" == minLengthRule.unit)\n                                schema.html(\"ng-minlength=\\\"\" + value + \"\\\"\");\n                            else\n                                schema.html(\"ng-char-minlength=\\\"\" + value + \"\\\"\");\n                        }\n\n                        /**\n                         * 处理maxLengthRule\n                         * @param maxLengthRule\n                         * @private\n                         */\n                        function _maxLengthRule(maxLengthRule) {\n                            var value = isNaN(parseInt(maxLengthRule.value)) ? 0 : maxLengthRule.value;\n\n                            if (\"not include\" === maxLengthRule.exProperty)\n                                value = (value > 0) ? value - 1 : 0;\n\n                            if (\"character\" == maxLengthRule.unit)\n                                schema.html(\"ng-maxlength=\\\"\" + value + \"\\\"\");\n                            else\n                                schema.html(\"ng-char-maxlength=\\\"\" + value + \"\\\"\");\n                        }\n\n                        /**\n                         * 处理minValueRule\n                         * @param minValueRule\n                         * @private\n                         */\n                        function _minValueRule(minValueRule) {\n                            var value = isNaN(parseFloat(minValueRule.value)) ? 0 : parseFloat(minValueRule.value);\n\n                            if (\"not include\" === minValueRule.exProperty)\n                                value = (value > 0) ? value - 0.01 : 0;\n\n                            schema.html(\"ng-minvalue=\\\"\" + value + \"\\\"\");\n                        }\n\n                        /**\n                         * 处理maxValueRule\n                         * @param maxValueRule\n                         * @private\n                         */\n                        function _maxValueRule(maxValueRule) {\n                            var value = isNaN(parseFloat(maxValueRule.value)) ? 0 : parseFloat(maxValueRule.value);\n\n                            if (\"not include\" === maxValueRule.exProperty)\n                                value = (value > 0) ? value - 0.01 : 0;\n\n                            schema.html(\"ng-maxvalue=\\\"\" + value + \"\\\"\");\n\n                        }\n\n                        /**\n                         * 处理minInputNumRule\n                         * @param minInputNumRule\n                         * @private\n                         */\n                        function _minInputNumRule(minInputNumRule) {\n                            var value = isNaN(parseInt(minInputNumRule.value)) ? 0 : parseInt(minInputNumRule.value);\n\n                            if (\"not include\" === minInputNumRule.exProperty)\n                                value = (value > 0) ? value - 1 : 0;\n\n                            schema.html(\"ng-mininputnum=\\\"\" + value + \"\\\"\");\n                        }\n\n                        /**\n                         * 处理maxInputNumRule\n                         * @param maxInputNumRule\n                         * @private\n                         */\n                        function _maxInputNumRule(maxInputNumRule) {\n                            var value = isNaN(parseInt(maxInputNumRule.value)) ? 0 : parseInt(maxInputNumRule.value);\n\n                            if (\"not include\" === maxInputNumRule.exProperty)\n                                value = (value > 0) ? value - 1 : 0;\n\n                            schema.html(\"ng-maxinputnum=\\\"\" + value + \"\\\"\");\n                        }\n                    }\n                }\n            };\n        });\n\n})();","/**\n * @Description:\n * 用于动态显示options\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-22\n */\n\nangular.module('voyageone.angular.directives.voption', [])\n    .directive('voption', function ($templateCache, $compile) {\n\n        var templateKey_select = \"voyageone.angular.directives.optionSelect.tpl.html\";\n\n        // 显示成select样式\n        if (!$templateCache.get(templateKey_select)) {\n            $templateCache.put(templateKey_select,\n                '<select class=\"form-control\" ng-model=\"$$data.value.value\" ng-options=\"option.value as option.displayName for option in $$data.options\"> <option value=\"\">{{\\'TXT_SELECT_NO_VALUE\\' | translate}}</option></select>');\n        }\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            scope: {\n                $$data: \"=data\"\n            },\n            link: function (scope, element) {\n\n                // 定义不同的展示种类\n                var typeList = {\n                    SINGLE_CHECK: \"SINGLECHECK\"\n                };\n\n                // 监视配置变动\n                scope.$watch('$$data', function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 根据type选择展示不同的控件\n                 */\n                function refresh() {\n                    var tempHtml;\n                    switch (scope.$$data.type) {\n                        case typeList.SINGLE_CHECK:\n                            tempHtml = $compile($templateCache.get(templateKey_select))(scope);\n                            break;\n                    }\n                    element.html(tempHtml);\n                }\n            }\n        };\n    });","/**\n * @Description:\n * 用于分页\n * @User:    Edward\n * @Version: 0.2.0, 2015-12-08\n */\n\nangular.module('voyageone.angular.directives.vpagination', [])\n    .directive('vpagination', function ($templateCache, $compile, vpagination) {\n\n        var templateKey = \"voyageone.angular.directives.pagination.tpl.html\";\n        var templateKeyNoData = \"voyageone.angular.directives.paginationNoData.tpl.html\";\n\n        // 有数据分页样式\n        if (!$templateCache.get(templateKey)) {\n            $templateCache.put(templateKey,\n                '<div class=\"col-sm-3\">\\n' +\n                '    <div class=\"page-main form-inline\">{{\\'TXT_SHOWING_NO\\' | translate}}&nbsp;<input class=\"text-center\" type=\"text\" ng-model=\"curr.pageNo\"/>&nbsp;/&nbsp;{{totalPages}}&nbsp;{{\\'TXT_PAGE\\' | translate}}&nbsp;' +\n                '        <button class=\"btn btn-xs btn-default\" type=\"button\" ng-click=\"goPage(curr.pageNo)\" translate=\"BTN_GO\"></button>\\n' +\n                '    </div>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-4 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_SHOWING\\' | translate}}&nbsp;{{curr.start}}-{{curr.end}}&nbsp;{{\\'TXT_OF\\' | translate}}&nbsp;{{totalItems}}&nbsp{{\\'TXT_ITEMS\\' | translate}}</small>\\n' +\n                '</div>\\n' +\n                '<div class=\"col-sm-5 text-right text-center-xs\"><div>' +\n                '    <ul class=\"pagination-sm m-t-none m-b pagination ng-isolate-scope ng-valid ng-dirty ng-valid-parse\">\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-first\"><a href ng-click=\"goPage(1)\" ng-disabled=\"curr.isFirst\">&laquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isFirst ||ngDisabled}\" class=\"pagination-prev\"><a href ng-click=\"goPage(curr.pageNo - 1)\" ng-disabled=\"curr.isFirst\">&lsaquo;</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowStart\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-repeat=\"page in curr.pages track by $index\" ng-class=\"{active: isCurr(page)}\" class=\"pagination-page\"><a href ng-click=\"goPage(page)\">{{page}}</a></li>\\n' +\n                '        <li ng-if=\"curr.isShowEnd\" class=\"disabled\" disabled><a href>...</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-next\"><a href ng-click=\"goPage(curr.pageNo + 1)\" ng-disabled=\"curr.isLast\">&rsaquo;</a></li>\\n' +\n                '        <li ng-class=\"{disabled: curr.isLast ||ngDisabled}\" class=\"pagination-last\"><a href ng-click=\"goPage(totalPages)\" ng-disabled=\"curr.isLast\">&raquo;</a></li>\\n' +\n                '    </ul>\\n' +\n                '</div>');\n        }\n\n        // 无数据分页样式\n        if (!$templateCache.get(templateKeyNoData)) {\n            $templateCache.put(templateKeyNoData,\n                '<div class=\"col-sm-7 col-sm-offset-2 text-center\">\\n' +\n                '    <small class=\"text-muted inline m-t-sm m-b-sm\">{{\\'TXT_SHOWING\\' | translate}}&nbsp;0-0&nbsp;{{\\'TXT_OF\\' | translate}}&nbsp;0&nbsp{{\\'TXT_ITEMS\\' | translate}}</small>\\n' +\n                '</div>');\n        }\n\n        var defConfig = {curr: 1, total: 0, size: 20, showPageNo:5};\n\n        return {\n            restrict: \"AE\",\n            //templateUrl: templateKey,\n            replace: false,\n            scope: {\n                $$configNameForA: \"@vpagination\",\n                $$configNameForE: \"@config\"\n            },\n            link: function (scope, element) {\n\n                // 获取用户的config配置\n                var userConfigName = scope.$$configNameForA || scope.$$configNameForE;\n                var userConfig = scope.$parent.$eval(userConfigName);\n\n                // 将用户配置覆盖到默认配置后，在重新覆盖到用户配置上，用于补全配置属性\n                var userWithDefConfig = angular.extend({}, defConfig, userConfig);\n                scope.config = angular.extend(userConfig, userWithDefConfig);\n\n                var p = new vpagination(scope.config);\n\n                // 监视配置变动\n                scope.$parent.$watch(userConfigName, function () {\n                    refresh();\n                }, true);\n\n                /**\n                 * 跳转到指定页\n                 * @param num\n                 */\n                scope.goPage = function (num) {\n                    p.goPage(isNaN(Number(num)) ? 1 : Number(num));\n                };\n\n                /**\n                 * 判断是否是当前页\n                 * @param num\n                 * @returns {*|boolean}\n                 */\n                scope.isCurr = function (num) {\n                    return p.isCurr(num);\n                };\n\n                function refresh() {\n\n                    // 获取总页数\n                    scope.totalPages = p.getPageCount();\n                    // 获取总items数\n                    scope.totalItems = p.getTotal();\n                    // 获取当前页的信息\n                    scope.curr = p.getCurr();\n\n                    // 根据总数量显示不同的分页样式\n                    var tempHtml;\n                    if(p.getTotal() == 0) {\n                        tempHtml = $compile($templateCache.get(templateKeyNoData))(scope);\n                    } else {\n                        tempHtml = $compile($templateCache.get(templateKey))(scope);\n                    }\n                    element.html(tempHtml);\n\n                }\n            }\n        };\n    });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 15/12/25\n */\n\nangular.module('voyageone.angular.directives.validator', [])\n\n    // 定义ng-char-maxlength\n    .directive('ngCharMaxlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxlength = -1;\n                attr.$observe('ngCharMaxlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    maxlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxlength = function(modelValue, viewValue) {\n                    return (maxlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) <= maxlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-char-minlength\n    .directive('ngCharMinlength', function () {\n\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minlength = -1;\n                attr.$observe('ngCharMinlength', function(value) {\n                    var intVal =  parseInt(value) ;\n                    minlength = isNaN(intVal) ? -1 : intVal;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minlength = function(modelValue, viewValue) {\n                    return (minlength < 0) || ctrl.$isEmpty(viewValue) || (getByteLength(viewValue) >= minlength);\n                };\n            }\n        };\n\n        /**\n         * 取得字段的字节长度.\n         * @param value\n         * @returns {number}\n         */\n        function getByteLength(value) {\n            var byteLen = 0,len = value.length;\n            if(value){\n                for(var i = 0; i<len; i++){\n                    if(value.charCodeAt(i)>255){\n                        byteLen += 2;\n                    }\n                    else{\n                        byteLen++;\n                    }\n                }\n                return byteLen;\n            }\n            else{\n                return 0;\n            }\n        }\n    })\n\n    // 定义ng-maxvalue\n    .directive('ngMaxvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        maxvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        maxvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        maxvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxvalue = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-minvalue\n    .directive('ngMinvalue', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMinvalue', function(value) {\n                    if(/^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/.test(value))\n                        minvalue = new Date(value);\n                    else if (/^(\\d+)(\\.[0-9]{0,2})?$/.test(value))\n                        minvalue = isNaN(parseFloat(value)) ? -1 : parseFloat(value);\n                    else if (/^(\\d+)$/.test(value))\n                        minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    else\n                        minvalue = -1;\n                    ctrl.$validate();\n                });\n                ctrl.$validators.minvalue = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue >= minvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-maxinputnum\n    .directive('ngMaxinputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var maxvalue = -1;\n                attr.$observe('ngMaxinputvalue', function(value) {\n                    maxvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.maxinputnum = function(modelValue, viewValue) {\n                    return (maxvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length <= maxvalue);\n                };\n            }\n        }\n    })\n\n    // 定义ng-mininputnum\n    .directive('ngMininputnum', function () {\n        return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function (scope, elm, attr, ctrl) {\n                if (!ctrl) return;\n\n                var minvalue = -1;\n                attr.$observe('ngMininputnum', function(value) {\n                    minvalue = isNaN(parseInt(value)) ? -1 : parseInt(value);\n                    ctrl.$validate();\n                });\n                ctrl.$validators.mininputnum = function(modelValue, viewValue) {\n                    return (minvalue < 0) || ctrl.$isEmpty(viewValue) || (viewValue.length >= minvalue);\n                };\n            }\n        }\n    })\n;","/**\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.dialogs', [])\n    .factory(\"$dialogs\", function ($modal, $filter, $templateCache) {\n\n        var templateName = 'voyageone.angular.factories.dialogs.tpl.html';\n        var template =\n            '<div class=\"vo_modal\">' +\n                '<div class=\"modal-header\">' +\n                    '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" ng-click=\"close()\">' +\n                        '<span aria-hidden=\"true\"><i ng-click=\"close()\" class=\"fa fa-close\"></i></span>' +\n                    '</button>' +\n                    '<h5 class=\"modal-title\" ng-bind-html=\"title\"></h5>' +\n                '</div>' +\n                '<div class=\"modal-body wrapper-lg\">' +\n                    '<div class=\"row\">' +\n                        '<h5 class=\"text-center text-hs\"><p class=\"text-center\" ng-bind-html=\"content\"></p></h5>' +\n                    '</div>' +\n                '</div>' +\n                '<div class=\"modal-footer\">' +\n                    '<button class=\"btn btn-default btn-sm\" ng-if=\"!isAlert\" ng-click=\"close()\" translate=\"BTN_CANCEL\"></button>' +\n                    '<button class=\"btn btn-vo btn-sm\" ng-click=\"ok()\" translate=\"BTN_OK\"></button>' +\n                '</div>' +\n            '</div>';\n        $templateCache.put(templateName, template);\n\n        function tran(translationId, values) {\n            return $filter('translate')(translationId, values);\n        }\n\n        return function (options) {\n\n            if (!_.isObject(options)) throw \"arg type must be object\";\n\n            var values;\n\n            if (_.isObject(options.content)) {\n                values = options.content.values;\n                options.content = options.content.id;\n            }\n\n            options.title = tran(options.title);\n            options.content = tran(options.content, values);\n\n            var modalInstance = $modal.open({\n                templateUrl: templateName,\n                controller: [\"$scope\", function (scope) {\n                    _.extend(scope, options);\n                }],\n                size: 'md'\n            });\n\n            options.close = function () {\n                modalInstance.dismiss('close')\n            };\n\n            options.ok = function () {\n                modalInstance.close('');\n            };\n\n            return modalInstance;\n        };\n    })\n\n    .factory(\"alert\", function ($dialogs) {\n        return function (content, title) {\n            return $dialogs({\n                title: title || 'TXT_ALERT',\n                content: content,\n                isAlert: true\n            });\n        };\n    })\n\n    .factory(\"confirm\", function vConfirm($dialogs) {\n        return function (content, title) {\n            return $dialogs({\n                title: title || 'TXT_CONFIRM',\n                content: content,\n                isAlert: false\n            });\n        };\n    });","/**\n * @Date:    2015-11-16 20:51:05\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.factories.interceptor', [])\n    .factory('interceptorFactory', function () {\n\n        // 未知的系统错误\n        var UNKNOWN_CODE = \"5\";\n        // 和 JAVA 同步,系统通知前端自动跳转的特殊代码\n        var CODE_SYS_REDIRECT = \"SYS_REDIRECT\";\n        // 和 JAVA 同步,回话过期的信息\n        var MSG_TIMEOUT = \"300001\";\n\n        /**\n         * 对系统自动跳转的响应,执行跳转\n         * @param {{code:string,redirectTo:string}} res\n         * @returns {boolean}\n         */\n        function autoRedirect(res) {\n            if (res.code != CODE_SYS_REDIRECT) {\n                return false;\n            }\n            // 如果跳转数据异常,则默认跳转登陆页\n            location.href = res.redirectTo || '/login.html';\n            return true;\n        }\n\n        /**\n         * 对会话超时和未登录进行特殊处理\n         * @param {{code:string}} res\n         * @returns {boolean}\n         */\n        function sessionTimeout(res) {\n            if (res.code != MSG_TIMEOUT) {\n                return false;\n            }\n            // 会话超时,默认跳转到登陆页\n            location.href = '/login.html';\n            return true;\n        }\n\n        /**\n         * 处理位置的异常\n         * @param response\n         */\n        function unknownException(response) {\n\n            if (response.data.code !== UNKNOWN_CODE) {\n                return;\n            }\n\n            window.$$lastUnknow = response;\n            console.error('Server throw unknown exceptio. Message:', response.data.message);\n        }\n\n        return {\n            request: function (config) {\n                return config;\n            },\n            /**\n             * 响应拦截\n             * @param {{config:object, data:*, headers:function, status:number, statusText:string}} res\n             * @returns {*}\n             */\n            response: function (res) {\n                var result = res.data;\n\n                // 特殊处理部分内容\n                if (autoRedirect(result) || sessionTimeout(result)) {\n                    return res;\n                }\n\n                unknownException(res);\n\n                return res;\n            },\n            requestError: function (config) {\n                return config;\n            },\n            responseError: function (res) {\n            }\n        };\n    })\n    .config(function ($httpProvider) {\n        $httpProvider.interceptors.push('interceptorFactory');\n    });","/**\n * Notify 的可用参数\n * {\n *    // whether to hide the notification on click\n *    clickToHide: true,\n *    // whether to auto-hide the notification\n *    autoHide: true,\n *    // if autoHide, hide after milliseconds\n *    autoHideDelay: 5000,\n *    // show the arrow pointing at the element\n *    arrowShow: true,\n *    // arrow size in pixels\n *    arrowSize: 5,\n *    // position defines the notification position though uses the defaults below\n *    position: '...',\n *    // default positions\n *    elementPosition: 'bottom left',\n *    globalPosition: 'top right',\n *    // default style\n *    style: 'bootstrap',\n *    // default class (string or [string])\n *    className: 'error',\n *    // show animation\n *    showAnimation: 'slideDown',\n *    // show animation duration\n *    showDuration: 400,\n *    // hide animation\n *    hideAnimation: 'slideUp',\n *    // hide animation duration\n *    hideDuration: 200,\n *    // padding between element and notification\n *    gap: 2\n * }\n * @User: Jonas\n * @Date: 2015-3-31 14:39:26\n * @Version: 2.0.0\n */\n\nangular.module('voyageone.angular.factories.notify', [])\n\n    .factory('notify', function ($filter) {\n\n        /**\n         * @ngdoc function\n         * @name voNotify\n         * @description\n         * 自动关闭的弹出提示框\n         */\n        function notify(options) {\n\n            if (!options) return;\n            if (_.isString(options)) options = {message: options};\n            if (!_.isObject(options)) return;\n\n            var values;\n\n            // 为 translate 的格式化提供支持，检测类型并转换\n            if (_.isObject(options.message)) {\n\n                values = options.message.values;\n                options.message = options.message.id;\n            }\n\n            options.message = $filter('translate')(options.message, values);\n\n            return $.notify(options.message, options);\n        }\n\n        notify.success = function (message) {\n            return notify({message: message, className: \"success\"});\n        };\n\n        notify.warning = function (message) {\n            return notify({message: message, className: \"warning\"});\n        };\n\n        notify.danger = function (message) {\n            return notify({message: message, className: \"danger\"});\n        };\n\n        return notify;\n    });","/**\n * @ngdoc\n * @factory\n * @name pppAutoImpl\n * @description\n * 根据定义自动生成方法实现. 注意! 依赖 ui-bootstrap\n */\n\nangular.module('voyageone.angular.factories.pppAutoImpl', [])\n    .factory('pppAutoImpl', function ($q, $modal) {\n        return function (declares, viewBaseUrl, jsBaseUrl) {\n            if (!declares.$$$ || !declares.$$$.impl)\n                declares.$$$ = {\n                    impl: declarePopupMethods(declares, viewBaseUrl, jsBaseUrl, '')\n                };\n            return declares.$$$.impl;\n        };\n\n        function declarePopupMethods(declares, viewBaseUrl, jsBaseUrl, popupBaseKey) {\n            var impl = {};\n            if (popupBaseKey) popupBaseKey += '/';\n            _.each(declares, function (declare, parentDir) {\n                if (!declare.popupKey) {\n                    if (_.isObject(declare) || _.isArray(declare)) _.extend(impl,\n                        declarePopupMethods(declare,\n                            viewBaseUrl, jsBaseUrl, popupBaseKey + parentDir,\n                            $q, $modal));\n                    return;\n                }\n\n                var options = _.clone(declare.options) || {};\n\n                var pathBase = '/' + popupBaseKey;\n                if (_.isString(parentDir)) pathBase += parentDir + '/';\n                pathBase += declare.popupKey;\n\n                options.templateUrl = viewBaseUrl + pathBase + '.tpl.html';\n                options.controllerUrl = jsBaseUrl + pathBase + '.ctl';\n\n                if (declare.controllerAs || declare.controller)\n                    options.controller = getControllerName(declare.popupKey);\n                if (declare.controllerAs)\n                    options.controller += ' as ' + (_.isString(declare.controllerAs) ? declare.controllerAs : 'ctrl');\n\n                impl[declare.popupKey] = function (context) {\n                    if (context) options.resolve = {\n                        context: function () {\n                            return context;\n                        }\n                    };\n\n                    var defer = $q.defer();\n                    require([options.controllerUrl], function () {\n                        defer.resolve($modal.open(options).result);\n                    });\n                    return defer.promise;\n                };\n            });\n            return impl;\n        }\n\n        function getControllerName(key) {\n            return key\n                    .replace(/\\.(\\w)/g, function (m, m1) {\n                        return m1.toUpperCase();\n                    })\n                    .replace(/^(\\w)/, function (m, m1) {\n                        return m1.toLowerCase()\n                    }) + 'PopupController';\n        }\n    });","/**\n * @Description:\n *\n * @User: linanbin\n * @Version: 2.0.0, 16/1/11\n */\n\nangular.module('voyageone.angular.factories.selectRows', [])\n\n    // selectRowsFactory\n    .factory('selectRowsFactory', function () {\n        return function (config) {\n            var _selectRowsInfo = config ? config : {\n                selAllFlag: false,\n                currPageRows: [],// [{id: \"12345\"}], [{id: \"123456\", name: \"test1\"}]\n                selFlag:[], // [{\"12345\": true}, {\"12346\": false}]\n                selList: [] // [{id: \"12345\"}], [{id: \"123456\", name: \"test1\"}]\n            };\n\n            this.selAllFlag = function (value) {\n                return value !== undefined ? _selectRowsInfo.selAllFlag = value : _selectRowsInfo.selAllFlag;\n            };\n\n            this.clearCurrPageRows = function () {\n                _selectRowsInfo.currPageRows = [];\n            };\n\n            this.currPageRows = function (value) {\n                return value !== undefined ? _selectRowsInfo.currPageRows.push(value) : _selectRowsInfo.currPageRows;\n            };\n\n            this.selFlag = function (value) {\n                return value !== undefined ? _selectRowsInfo.selFlag.push(value) : _selectRowsInfo.selFlag;\n            };\n\n            this.selList = function (value) {\n                return value !== undefined ? _selectRowsInfo.selList.push(value) : _selectRowsInfo.selList;\n            };\n\n            this.selectRowsInfo = _selectRowsInfo;\n        }\n    });","/**\n * @User: Edward\n * @Version: 2.0.0, 2015-12-09\n */\n\nangular.module('voyageone.angular.factories.vpagination', [])\n    .factory('vpagination', function () {\n\n        /**\n         * 创建一个分页服务\n         * @param {{ curr: number, size: number, total: number, fetch: function }} config 配置\n         */\n        return function (config) {\n\n            var _pages, _lastTotal = 0, _showPages = [];\n\n            /**\n             * 返回总件数\n             * @returns {*}\n             */\n            this.getTotal = function () {\n                return config.total;\n            };\n\n            /**\n             * 返回当前页的开始和结束号\n             * @returns {{start: number, end: number}}\n             */\n            this.getCurr = function () {\n                return {\n                    pageNo: curr(),\n                    start: getCurrStartItems(),\n                    end: getCurrEndItems(),\n                    isFirst: isFirst(),\n                    isLast: isLast(),\n                    pages: createShowPages(),\n                    isShowStart: isShowStart(),\n                    isShowEnd: isShowEnd()\n                }\n            };\n\n            // 跳转到指定页\n            this.goPage = load;\n            // 返回总页数\n            this.getPageCount = getPages;\n            // 是否是当前页\n            this.isCurr = isCurr;\n\n            /**\n             * 跳转到指定页\n             * @param {number} page 页号\n             */\n            function load(page) {\n                page = page || config.curr;\n\n                if (page < 1 || page > getPages() || isCurr(page)) return;\n\n                config.curr = page;\n\n                config.fetch(page, config.size);\n            }\n\n            /**\n             * 初始化page列表\n             * @returns {Array}\n             */\n            function createShowPages () {\n\n                var minPage, maxPage, _showPages= [];\n                if (config.curr < config.showPageNo) {\n                    minPage = 1;\n                    if(_pages <= config.showPageNo) maxPage = _pages;\n                    else maxPage = config.showPageNo;\n                } else if (config.curr + 2 > _pages) {\n                    minPage = _pages + 1 - config.showPageNo;\n                    maxPage = _pages;\n                } else {\n                    minPage = config.curr + 3 - config.showPageNo;\n                    maxPage = config.curr + 2;\n                }\n\n                // 按照指定数量创建按钮\n                for (var i =  minPage; i <= maxPage; i++) {\n                    //scope.pages.push({num: 1, active: \"\", show: false});\n                    _showPages.push(i);\n                }\n\n                return _showPages;\n            }\n\n            /**\n             * 获取当前总页数\n             * @returns {number}\n             */\n            function getPages() {\n                if (_lastTotal != config.total) {\n                    _pages = parseInt(config.total / config.size) + ((config.total % config.size) > 0 ? 1 : 0);\n                    _lastTotal = config.total;\n                }\n                return _pages;\n            }\n\n            /**\n             * 返回当前页的起始号\n             * @returns {number}\n             */\n            function getCurrStartItems() {\n                return (config.curr - 1) * config.size + 1\n            }\n\n            /**\n             * 返回当前页的结束号\n             * @returns {number}\n             */\n            function getCurrEndItems() {\n                var currEndItems = config.curr * config.size;\n                return currEndItems <= config.total ? currEndItems : config.total;\n\n            }\n\n            /**\n             * 是否是最后一页\n             * @returns {boolean}\n             */\n            function isLast() {\n                return config.curr == getPages();\n            }\n\n            /**\n             * 是否是第一页\n             * @returns {boolean}\n             */\n            function isFirst() {\n                return config.curr == 1;\n            }\n\n            /**\n             * 是否是当前页\n             * @param page 页码\n             * @returns {boolean}\n             */\n            function isCurr(page) {\n                return config.curr == page;\n            }\n\n            function curr() {\n                return config.curr;\n            }\n\n            /**\n             * 是否显示开始...项目\n             * @returns {boolean}\n             */\n            function isShowStart () {\n                _showPages = createShowPages();\n                return _showPages[0] > 1\n            }\n\n            /**\n             * 是否显示结束...项目\n             * @returns {boolean}\n             */\n            function isShowEnd () {\n                _showPages = createShowPages();\n                return _showPages[_showPages.length - 1] < _pages;\n            }\n\n        };\n    });","/**\n * @Date:    2015-11-16 18:48:29\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.ajax', [])\n  .service('$ajax', $Ajax)\n  .service('ajaxService', AjaxService);\n\nfunction $Ajax($http, blockUI, $q) {\n  this.$http = $http;\n  this.blockUI = blockUI;\n  this.$q = $q;\n}\n$Ajax.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n  this.$http.post(url, data).then(function (response) {\n    var res = response.data;\n    if (!res) {\n      alert('相应结果不存在?????');\n      defer.reject(null);\n      return;\n    }\n    if (res.message || res.code) {\n      defer.reject(res);\n      return;\n    }\n    defer.resolve(res);\n  }, function (response) {\n    defer.reject(null, response);\n  });\n  return defer.promise;\n};\n\nfunction AjaxService($q, $ajax, messageService) {\n  this.$q = $q;\n  this.$ajax = $ajax;\n  this.messageService = messageService;\n}\nAjaxService.prototype.post = function (url, data) {\n\n  var defer = this.$q.defer();\n\n  this.$ajax.post(url, data).then(function(res) {\n    // 成功\n    defer.resolve(res);\n    return res;\n  }, (function (_this) {\n    // 失败\n    return function(res) {\n      _this.messageService.show(res);\n      defer.reject(res);\n      return res;\n    };\n  })(this));\n\n  return defer.promise;\n};","/**\n * @Date:    2015-11-16 20:30:37\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.cookie', [])\n    .service('cookieService', CookieService);\n\nvar keys = {\n    language: 'voyageone.user.language',\n    company: 'voyageone.user.company',\n    channel: 'voyageone.user.channel',\n    application: \"voyageone.user.application\"\n};\n\nfunction gentProps(key) {\n    return function (val) {\n        if (arguments.length === 1) {\n            return this.set(key, val);\n        } else if (arguments.length > 1) {\n            return this.set(key, arguments);\n        }\n        return this.get(key);\n    };\n}\n\nfunction CookieService($cookieStore) {\n    this.$cookieStore = $cookieStore;\n}\n\nCookieService.prototype.get = function (key) {\n    var result = this.$cookieStore.get(key);\n    return result == undefined || result == null ? \"\" : this.$cookieStore.get(key);\n};\n\nCookieService.prototype.set = function (key, value) {\n    return this.$cookieStore.put(key, value);\n};\n\nCookieService.prototype.language = gentProps(keys.language);\n\nCookieService.prototype.company = gentProps(keys.company);\n\nCookieService.prototype.channel = gentProps(keys.channel);\n\nCookieService.prototype.application = gentProps(keys.application);\n\nCookieService.prototype.removeAll = function () {\n    this.$cookieStore.remove(keys.language);\n    this.$cookieStore.remove(keys.company);\n    this.$cookieStore.remove(keys.channel);\n    this.$cookieStore.remove(keys.application);\n};\n","/**\n * 对后台的信息进行自动处理\n * @Date:    2015-11-19 14:47:23\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.message', [])\n  .service('messageService', MessageService);\n\n// 同步,DisplayType 枚举\nvar DISPLAY_TYPES = {\n  /**\n   * 弹出提示\n   */\n  ALERT: 1,\n  /**\n   * 顶端弹出自动关闭\n   */\n  NOTIFY: 2,\n  /**\n   * 右下弹出自动关闭\n   */\n  POP: 3,\n  /**\n   * 用户自定义处理\n   */\n  CUSTOM: 4\n};\n\nfunction MessageService(alert, confirm, notify) {\n  this.alert = alert;\n  this.confirm = confirm;\n  this.notify = notify;\n}\n\nMessageService.prototype = {\n  /**\n   * 根据类型自动显示信息\n   * @param {{displayType:Number, message:String}} res\n   */\n  show: function(res) {\n\n    var displayType = res.displayType;\n    var message = res.message;\n\n    switch (displayType) {\n      case DISPLAY_TYPES.ALERT:\n        this.alert(message);\n        break;\n      case DISPLAY_TYPES.NOTIFY:\n        this.notify(message);\n        break;\n      case DISPLAY_TYPES.POP:\n        this.notify({message: message, position: 'right bottom'});\n        break;\n    }\n  }\n};","/**\n * @Date:    2015-11-19 14:26:43\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.permission', [])\n  .service('permissionService', PermissionService);\n\nfunction PermissionService($rootScope) {\n  this.$rootScope = $rootScope;\n  this.permissions = [];\n}\n\nPermissionService.prototype = {\n  /**\n   * set the action permissions.\n   * @param permissions\n   */\n  setPermissions: function(permissions) {\n    this.permissions = permissions;\n    this.$rootScope.$broadcast('permissionsChanged');\n  },\n  /**\n   * check the permission has been in action permissions.\n   * @param permission\n   * @returns {boolean|*}\n   */\n  has: function(permission) {\n    return _.contains(this.permissions, permission.trim());\n  }\n};\n","/**\n * @Date:    2015-11-19 14:35:25\n * @User:    Jonas\n * @Version: 0.2.0\n */\n\nangular.module('voyageone.angular.services.translate', [])\n  .service('translateService', TranslateService);\n\nfunction TranslateService($translate) {\n  this.$translate = $translate;\n}\n\nTranslateService.prototype = {\n  languages: {\n    en: \"en\",\n    zh: \"zh\"\n  },\n  /**\n   * set the web side language type.\n   * @param key\n   */\n  setLanguage: function(language) {\n    if (!_.contains(this.languages, language)) {\n      language = this.getBrowserLanguage();\n    }\n    this.$translate.use(language);\n    return language;\n  },\n  /**\n   * get the browser language type.\n   * @returns {string}\n   */\n  getBrowserLanguage: function() {\n    var currentLang = navigator.language;\n    if (!currentLang)\n      currentLang = navigator.browserLanguage;\n    return currentLang.substr(0, 2);\n  }\n};\n","/**\n * @description\n *\n * 自动创建基于地址定义的数据访问 service.\n * 传入的定义必须是 {object}, 并且至少有 root 属性\n *\n * @User: Jonas\n * @Date: 2015-12-10 19:32:37\n * @Version: 2.0.0\n */\n\n//@Skip\nangular.module('voyageone.angular.vresources', [])\n  .provider('$vresources', function ($provide) {\n\n    /**\n     * @description 构建请求地址的 url\n     * @param {string} root 请求的根路径\n     * @param {string} action 请求的名称\n     * @returns {string}\n     */\n    function getActionUrl(root, action) {\n      return root + (root.lastIndexOf('/') === root.length - 1 ? '' : '/') + action;\n    }\n\n    /**\n     * 闭包声明一个数据访问的 Service\n     * @param {string} name Service 的名称\n     * @param {object} actions 方法和地址定义\n     * @param {AjaxService} ajaxService 封装的 ajax 发送服务\n     */\n    function closureDataService(name, actions, ajaxService) {\n      /**\n       * @description 与 actions 一同闭包的构造函数\n       * @constructor\n       */\n      function DataResource() {\n        if (!actions) {\n          return;\n        }\n\n        if (typeof actions !== \"object\") {\n          console.log(\"Failed to new DataResource: [\" + actions + \"] is not a object\");\n          return;\n        }\n\n        if (!actions.root) {\n          console.log(\"Failed to new DataResource: no root prop\" + (JSON && JSON.stringify ? \": \" + JSON.stringify(actions) : \"\"));\n          return;\n        }\n\n        // 遍历配置\n        for (var name in actions) {\n          // 不对 root 进行创建\n          if (name === \"root\") continue;\n          // 额外的检查\n          if (actions.hasOwnProperty(name)) {\n            // 闭包创建函数\n            this[name] = (function (actionUrl) {\n              return function (data) {\n                return ajaxService.post(actionUrl, data);\n              };\n            })(getActionUrl(actions.root, actions[name]));\n          }\n        }\n      }\n\n      $provide.service(name, DataResource);\n    }\n\n    this.$get = function (ajaxService) {\n\n      return {\n        register: function (name, actions) {\n\n          if (!actions) return;\n\n          if (typeof actions !== 'object') return;\n\n          // 如果有 root 这个属性,就创建 service\n          if (actions.root) {\n            closureDataService(name, actions, ajaxService);\n            return;\n          }\n\n          // 否则继续访问子属性\n          for (var childName in actions) {\n            // 额外的检查\n            if (actions.hasOwnProperty(childName)) {\n\n              this.register(childName, actions[childName]);\n            }\n          }\n        }\n      };\n    };\n  })\n\n  .run(function ($vresources, $actions) {\n    $vresources.register(null, $actions);\n  });"],"sourceRoot":"components/angular"}