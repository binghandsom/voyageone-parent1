<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <!-- Cms2 -->
    <!-- sqlSessionFactoryMasterCms2 -->
    <bean id="sqlSessionFactoryMasterCms2" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- SqlSessionFactory的数据源 -->
        <property name="dataSource" ref="dataSourceMaster"/>
        <!-- 配置typeAliasesPackage -->
        <!-- typeAliasesPackage包路径配置 -->
        <property name="typeAliasesPackage" value="com.voyageone.service.model.util,
                                                 com.voyageone.service.model.cms"/>
        <!-- 指定sqlMapConfig总配置文件，订制的environment在spring容器中不在生效-->
        <property name="configLocation" value="classpath:com/voyageone/mybatis/myBatisConfigCamel.xml"/>
        <!--指定实体类映射文件，可以指定同时指定某一包以及子包下面的所有配置文件 -->
        <property name="mapperLocations" >
            <list>
                <value>classpath*:com/voyageone/service/dao/cms/**/*MapperCamel.xml</value>
                <value>classpath*:com/voyageone/service/daoext/cms/**/*MapperCamel.xml</value>
                <value>classpath*:com/voyageone/task2/cms/**/*MapperCamel.xml</value>
            </list>
        </property>
        <!-- 配置Mybatis的插件plugin-->
        <property name="plugins">
            <array>
                <bean class="com.voyageone.base.dao.mysql.MybatisSchemaInterceptor">
                    <property name="properties">
                        <value>database_schema=voyageone_cms2</value>
                    </property>
                </bean>
                <bean class="com.voyageone.base.dao.mysql.paginator.MybatisPaginatorInterceptor">
                    <property name="properties">
                        <value>id_filter=selectList</value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--updateTemplateCms2-->
    <bean id="updateTemplateCms2" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactoryMasterCms2"/>
    </bean>

    <!--mybatis的dao接口和mapper的扫描-->
    <bean id="updateTemplateDaoScanCms2" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionTemplateBeanName" value="updateTemplateCms2"/>
        <property name="basePackage" value="com.voyageone.service.dao.cms,
                                          com.voyageone.service.daoext.cms,
                                          com.voyageone.task2.cms.dao.feed"/>
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
    </bean>

    <!-- Com -->
    <!-- sqlSessionFactoryMasterCom -->
    <bean id="sqlSessionFactoryMasterCom" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- SqlSessionFactory的数据源 -->
        <property name="dataSource" ref="dataSourceMaster"/>
        <!-- 配置typeAliasesPackage -->
        <!-- typeAliasesPackage包路径配置 -->
        <property name="typeAliasesPackage" value="com.voyageone.service.model.com"/>
        <!-- 指定sqlMapConfig总配置文件，订制的environment在spring容器中不在生效-->
        <property name="configLocation" value="classpath:com/voyageone/mybatis/myBatisConfigCamel.xml"/>
        <!--指定实体类映射文件，可以指定同时指定某一包以及子包下面的所有配置文件 -->
        <property name="mapperLocations">
            <list>
                <value>classpath*:com/voyageone/service/dao/com/**/*MapperCamel.xml</value>
                <value>classpath*:com/voyageone/service/daoext/com/**/*MapperCamel.xml</value>
            </list>
        </property>
        <!-- 配置Mybatis的插件plugin-->
        <property name="plugins">
            <array>
                <bean class="com.voyageone.base.dao.mysql.MybatisSchemaInterceptor">
                    <property name="properties">
                        <value>database_schema=synship</value>
                    </property>
                </bean>
                <bean class="com.voyageone.base.dao.mysql.paginator.MybatisPaginatorInterceptor">
                    <property name="properties">
                        <value>id_filter=selectList,ByPage</value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--updateTemplateCom-->
    <bean id="updateTemplateCom" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactoryMasterCom"/>
    </bean>

    <!--mybatis的dao接口和mapper的扫描-->
    <bean id="updateTemplateDaoScanCom" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionTemplateBeanName" value="updateTemplateCom"/>
        <property name="basePackage" value="com.voyageone.service.dao.com,
                                          com.voyageone.service.daoext.synship, com.voyageone.service.daoext.com"/>
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
    </bean>

</beans>
