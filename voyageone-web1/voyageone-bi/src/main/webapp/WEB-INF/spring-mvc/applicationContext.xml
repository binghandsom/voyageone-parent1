<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
     http://www.springframework.org/schema/context  
     http://www.springframework.org/schema/context/spring-context-3.0.xsd  
     http://www.springframework.org/schema/mvc  
     http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
      
    <mvc:annotation-driven/>
	 <!-- 扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入 -->
    <context:component-scan base-package="com.voyageone.bi.dao"/>
    <context:component-scan base-package="com.voyageone.bi.task"/>
	<context:component-scan base-package="com.voyageone.bi.mapper"/>
	<context:component-scan base-package="com.voyageone.batch.bi.mapper"/>
	<context:component-scan base-package="com.voyageone.batch.bi.etl"/>
	<context:component-scan base-package="com.voyageone.bi.mybatis"/>
    
    <!-- 配置数据源 -->
	
	<!-- 测试环境  -->
	<bean id="dataSource_Master" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl"
				  value="jdbc:mysql://10.0.0.59:3306/bi_master?user=biuser&amp;password=packpen&amp;useOldAliasMetadataBehavior=true&amp;useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="user" value="biuser"/>
		<property name="password" value="packpen"/>
		<!--初始化时获取连接的数目，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="5"></property>
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="30"></property>
		<property name="minPoolSize" value="5"></property>
		<property name="testConnectionOnCheckout"  value="true"></property>
		<!--如果设为true那么在取得连接的同时将校验连接的有效性。Default: false -->
		<property name="testConnectionOnCheckin" value="true"></property>
		<!--定义所有连接测试都执行的测试语句。在使用连接测试的情况下这个一显著提高测试速度。注意： 测试的表必须在初始数据源的时候就存在。Default: null-->
		<property name="preferredTestQuery" value="SELECT CURRENT_DATE"></property>
		<!--最大空闲时间,单位为秒。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="14400"></property>
		<!--强迫连接池扑杀任何的连接，这些连接超过了设置的秒数。(现将其设置为数据库wait_timeout的1/2)-->
		<property name="maxConnectionAge" value="14400"></property>
	</bean>
	<bean id="dataSource_Stores" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl"
				  value="jdbc:mysql://10.0.0.59:8066/bi_stores?user=biuser&amp;password=packpen&amp;useOldAliasMetadataBehavior=true&amp;useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="user" value="biuser"/>
		<property name="password" value="packpen"/>
		<!--初始化时获取连接的数目，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="5"></property>
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="30"></property>
		<property name="minPoolSize" value="5"></property>
		<property name="testConnectionOnCheckout"  value="true"></property>
		<!--如果设为true那么在取得连接的同时将校验连接的有效性。Default: false -->
		<property name="testConnectionOnCheckin" value="true"></property>
		<!--定义所有连接测试都执行的测试语句。在使用连接测试的情况下这个一显著提高测试速度。注意： 测试的表必须在初始数据源的时候就存在。Default: null-->
		<property name="preferredTestQuery" value="SELECT CURRENT_DATE"></property>
		<!--最大空闲时间,单位为秒。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="14400"></property>
		<!--强迫连接池扑杀任何的连接，这些连接超过了设置的秒数。(现将其设置为数据库wait_timeout的1/2)-->
		<property name="maxConnectionAge" value="14400"></property>
	</bean>
	
	<!-- 阿里云环境  -->   
	<!--<bean id="dataSource"
	    class="com.sneakerhead.synship.commonutils.ProxoolDataSource">
	    <property name="driver">
	        <value>com.mysql.jdbc.Driver</value>
	    </property>
	    <property name="driverUrl">
	        <value>jdbc:mysql://localhost:3306/Synship?user=app&amp;password=ZAQ!2wsx;useOldAliasMetadataBehavior=true&amp;useUnicode=true&amp;characterEncoding=UTF-8</value>
	    </property>
	    <property name="user" value="app" />
	    <property name="password" value="ZAQ!2wsx" />
	    <property name="alias" value="Pool_BI" />
	    <property name="houseKeepingSleepTime" value="90000" />
	    <property name="prototypeCount" value="4" />
	    <property name="maximumConnectionCount" value="200" />
	    <property name="minimumConnectionCount" value="2" />
	    <property name="simultaneousBuildThrottle" value="50" />
	    <property name="maximumConnectionLifetime" value="14400000" />
	    <property name="houseKeepingTestSql" value="select CURRENT_DATE" />
	</bean> -->

	<!-- 配置Jdbc模板  -->
	<bean id="jdbcTemplate"				class="org.springframework.jdbc.core.JdbcTemplate"  p:dataSource-ref="dataSource_Master" />
	<bean id="jdbcTemplate_Stores"	class="org.springframework.jdbc.core.JdbcTemplate"  p:dataSource-ref="dataSource_Stores" />
	
	<!-- JDBC事务管理器 -->  
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"  p:dataSource-ref="dataSource_Master" />
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<bean id="salesMondrianTemp" class="com.voyageone.bi.dao.mondrian.MondrianDaoSupport">
		<property name="connectStr"
				  value="jdbc:mysql://10.0.0.59:8066/bi_stores?user=biuser&amp;password=packpen&amp;useUnicode=true&amp;characterEncoding=UTF-8"/>
		<property name="schemaXml" value="/WEB-INF/mondrian/schema/sales.xml"/>
	</bean>

	<bean id="sqlSessionFactoryBI"
		  class="org.mybatis.spring.SqlSessionFactoryBean"
		  p:dataSource-ref="dataSource_Master"
		  p:configLocation="classpath:com/voyageone/bi/mybatis/myBatisConfig.xml"
		  p:mapperLocations="classpath*:com/voyageone/bi/mapper/*Mapper.xml"/>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.voyageone.bi.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBI"/>
	</bean>

	<bean id="sqlSessionFactoryETL"
		  class="org.mybatis.spring.SqlSessionFactoryBean"
		  p:dataSource-ref="dataSource_Master"
		  p:configLocation="classpath:com/voyageone/batch/bi/mybatis/myBatisConfig.xml"
		  p:mapperLocations="classpath*:com/voyageone/batch/bi/mapper/*Mapper.xml"/>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.voyageone.batch.bi.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryETL"/>
	</bean>

	<!--国际化资源  -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>conf/i18n/messages</value>
				<value>conf/i18n/items</value>
			</list>
		</property>
		<property name="cacheSeconds" value="-1"/>
	</bean>
	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
	</bean>
	
	<!-- 链接式i18n国际化、网址拦截器 -->
	<mvc:interceptors>  
    <!-- Changes the locale when a 'locale' request parameter is sent; e.g. /?locale=de -->  
    <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />  
	</mvc:interceptors>  
  
  	<bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
          p:defaultEncoding="UTF-8"
          p:maxUploadSize="5242880"
          p:uploadTempDir="upload/temp"/>
          
	<!-- 对静态资源文件的访问  方案二 （二选一）-->  
    <mvc:resources mapping="/resource/**" location="/WEB-INF/resource/" />

</beans>