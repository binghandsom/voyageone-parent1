<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-4.1.xsd  
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task-4.1.xsd     
    http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-4.1.xsd"
     default-lazy-init="false"> 
 
<!-- 定时器开关 开始 -->
	<task:annotation-driven />
	<!-- 标注类型 的事务配置 如果使用注解事务。就放开
	<tx:annotation-driven />-->
	<tx:annotation-driven />
	<!-- 初始化数据 -->

<bean id="dataSourceSec" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="jdbc:mysql://10.0.0.24:3306/voyageone_core?autoReconnect=true&amp;useOldAliasMetadataBehavior=true&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=round" />
		<property name="username" value="app_my_dev" />
		<property name="password" value="s28Bw_1IL1bz" />
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
	</bean>
	

	<bean id="sqlSessionFactorySec" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceSec" />
		<!-- 自动匹配Mapper映射文件 -->
		<property name="mapperLocations" value="classpath*:com/voyageone/security/dao/mybatis/mappers/*.xml"/>
		<property name="typeAliasesPackage" value="com.voyageone.security.model"/>
	</bean>

	<!-- 通过扫描的模式，扫描目录在com.lanyuan.mapper目录下，所有的mapper都继承SqlMapper接口的接口， 这样一个bean就可以了 -->
	<bean id="sqlSessionTemplateSec" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactorySec"/>
	</bean>

	<!--mybatis的dao接口和mapper的扫描-->
	<bean id="updateTemplateDaoScanCms2" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionTemplateBeanName" value="sqlSessionTemplateSec"/>
		<property name="basePackage" value="com.voyageone.security.dao"/>
		<property name="annotationClass" value="org.springframework.stereotype.Repository"/>
	</bean>

	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceSec" />
	</bean>

	<!-- 使用Spring组件扫描的方式来实现自动注入bean -->
	<!-- 隐式地向 Spring 容器注册 -->
	<!-- <context:annotation-config /> -->

	<bean id="credentialsMatcher"
		  class="com.voyageone.security.shiro.credentials.RetryLimitHashedCredentialsMatcher">
		<!-- hashAlgorithmName必须的，没有默认值。可以有MD5或者SHA-1，如果对密码安全有更高要求可以用SHA-256或者更高。
		这里使用MD5 storedCredentialsHexEncoded默认是true，此时用的是密码加密用的是Hex编码；false时用Base64编码
		hashIterations迭代次数，默认值是1。 -->
		<constructor-arg ref="shiroCacheManager" />
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="2" />
		<property name="storedCredentialsHexEncoded" value="true" />
	</bean>


	<!--自定义Realm -->
	<bean id="myRealm" class="com.voyageone.security.shiro.MyRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher" />
		<property name="cachingEnabled" value="false" />
		<!-- 如需要自定义缓存时间放开以下.修改 ehcache.xml-->
		<!--<property name="authenticationCachingEnabled" value="true"/>-->
		<!--<property name="authenticationCacheName" value="authenticationCache"/>-->
		<!--<property name="authorizationCachingEnabled" value="true"/>-->
		<!--<property name="authorizationCacheName" value="authorizationCache"/>-->
	</bean>

	<!-- Shiro安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm" />
		<property name="sessionManager" ref="sessionManager"/>
		<!-- 使用下面配置的缓存管理器 -->
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口，这个属性是必须的 -->
		<property name="securityManager" ref="securityManager"></property>
		<!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
		<property name="loginUrl" value="/security/login"></property>
		<!-- 登录成功后要跳转的连接(本例中此属性用不到，因为登录成功后的处理逻辑在LoginController里硬编码) -->
		<!-- <property name="successUrl" value="/" ></property> -->
		<!-- 用户访问未对其授权的资源时，所显示的连接 -->
		<property name="unauthorizedUrl" value="/"></property>
		<property name="filterChainDefinitions">
			<value>
				/security/*=anon
				/tag=authc
			</value>
		</property>
	</bean>

		<!--
   开启Shiro的注解(如@RequiresRoles，@RequiresPermissions)，需借助SpringAOP扫描使用Shiro注解的类，
   并在必要时进行安全逻辑验证
-->
		<!--
        <bean
            class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"></bean>
        <bean
            class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
            <property name="securityManager" ref="securityManager"></property>
        </bean>
        -->


	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

	<!-- 会话DAO -->
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
		<property name="sessionIdGenerator" ref="sessionIdGenerator"/>
	</bean>

	<!-- 会话验证调度器 -->
	<!-- 全局的会话信息检测扫描信息间隔30分钟-->
	<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<property name="sessionValidationInterval" value="1800000"/>
		<property name="sessionManager" ref="sessionManager"/>
	</bean>

	<!-- 会话管理器 -->
	<!-- 全局的会话信息设置成30分钟,sessionValidationSchedulerEnabled参数就是是否开启扫描  -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="1800000"/>
		<property name="deleteInvalidSessions" value="true"/>
		<property name="sessionValidationSchedulerEnabled" value="true"/>
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
		<property name="sessionDAO" ref="sessionDAO"/>
	</bean>


	<!--shiro缓存管理器 -->
	<bean id="shiroCacheManager" class="com.voyageone.security.shiro.spring.SpringCacheManagerWrapper" >
		<property name="cacheManager" ref="springCacheManager"/>
	</bean>

	<bean id="springCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehcacheManager"/>
	</bean>

	<!--ehcache-->
	<bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml"/>
	</bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />


</beans>
